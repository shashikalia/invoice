2016-10-23 23:05:42,370 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:05:42,372 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:05:42,373 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,373 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:05:42,374 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:05:42,374 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:05:42,375 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:05:42,375 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,377 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:05:42,377 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:05:42,377 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:05:42,378 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:05:42,379 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,380 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:05:42,380 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:05:42,382 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:05:42,382 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:05:42,383 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,384 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:05:42,384 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:05:42,385 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:05:42,385 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:05:42,387 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,387 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:05:42,388 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:05:42,388 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:05:42,388 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:05:42,389 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,389 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:05:42,390 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:05:42,392 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:05:42,393 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:05:42,393 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,394 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:05:42,394 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:05:42,395 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:05:42,397 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:05:42,397 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,398 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:05:42,399 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:05:42,399 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:05:42,399 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:05:42,400 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,400 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:05:42,400 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:05:42,403 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:05:42,403 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:05:42,403 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,404 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:05:42,404 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:05:42,404 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:05:42,404 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:05:42,405 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:05:42,405 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:05:42,405 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:05:42,405 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:05:42,405 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:05:42,408 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:05:42,409 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:05:42,412 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:05:42,448 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:05:42,449 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:05:42,449 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:05:42,449 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:05:42,449 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:05:42,449 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:05:42,450 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:05:42,452 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:05:42,453 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:05:42,454 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:05:42,454 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:05:42,454 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:05:42,454 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:05:42,454 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:05:42,513 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:05:42,513 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2016329825724471519.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire2768703438115811495tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_07752184928571728035tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2016329825724471519.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:05:42,587 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:05:42,588 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:05:42,607 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:05:42,612 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:05:42,630 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:05:42,668 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:05:42,668 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:05:42,680 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:05:42,680 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:05:42,732 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:05:42,733 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:05:42,733 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:05:42,733 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:05:42,733 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:05:42,733 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:05:42,755 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 23:05:42,757 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,757 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,757 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,758 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,759 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,759 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,759 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,778 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,784 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,788 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,788 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 23:05:42,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,789 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,789 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,789 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,789 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,789 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,792 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,793 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,793 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,793 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,794 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 23:05:42,794 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,794 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,794 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,794 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,797 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,798 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,798 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,798 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,799 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 23:05:42,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,802 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,803 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,803 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,803 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,803 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,807 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,807 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,808 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,808 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,809 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 23:05:42,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,812 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,812 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,813 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,813 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,813 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 23:05:42,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,815 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,815 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,815 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,817 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:05:42,817 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 23:05:42,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,819 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,819 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,819 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,820 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,823 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,824 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,825 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,825 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:05:42,827 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 23:05:42,827 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,827 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,827 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,827 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,829 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,830 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,830 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,832 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,832 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 23:05:42,832 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:05:42,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:05:42,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:05:42,835 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:05:42,835 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:05:42,837 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:05:42,837 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,862 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,863 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:05:42,913 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:42,915 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:05:43,013 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:05:43,014 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3c0fae6c
2016-10-23 23:05:43,014 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:43,015 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:05:43,015 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:05:43,015 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:05:43,022 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:05:43,024 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:05:43,024 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:05:43,028 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b970f7
2016-10-23 23:05:43,030 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: ee600d2b-46b7-4f5d-a123-42cd4a19c0c6 (<unnamed>)
2016-10-23 23:05:43,030 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:05:43,123 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:05:43,133 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:43,134 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:43,144 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 23:05:43,159 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 23:05:43,160 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 23:05:43,162 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 23:05:43,163 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 23:05:43,163 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 23:05:43,164 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 23:05:43,169 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 23:05:40 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 23:05:40 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 23:05:40 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 23:05:40 CEST 2016}
2016-10-23 23:05:43,192 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:05:43,200 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 23:05:43,223 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@61e44804 ).size(): 1
2016-10-23 23:05:43,223 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:05:43,292 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:05:43,297 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:05:43,298 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:05:43,299 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 23:05:43,299 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:43,300 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:05:43,302 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:05:43,305 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:05:43,568 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 23:05:43,621 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:43,622 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:43,639 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 23:05:43,641 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:05:43,677 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:05:43,687 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 23:05:43,688 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:43,723 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:43,747 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:43,749 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:43,752 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:43,752 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:05:43,775 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:43,775 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:43,776 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:05:43,776 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:43,788 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:05:43,788 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:05:43,789 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:43,808 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:05:43,809 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 23:05:43,819 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@61e44804 ).size(): 2
2016-10-23 23:05:43,820 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 23:05:43,852 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:43,856 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:43,861 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:05:43,861 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:43,862 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:05:43,863 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:43,863 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:05:43,863 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:43,864 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:05:43,864 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:05:43,865 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:05:43,865 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,870 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:05:43,871 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,871 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:05:43,872 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,872 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:05:43,872 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,872 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:05:43,874 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,874 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:05:43,874 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,875 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:05:43,875 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,875 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:05:43,876 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,876 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:05:43,888 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,889 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:05:43,889 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,889 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:05:43,889 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,889 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:05:43,890 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,890 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:05:43,890 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,890 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:05:43,891 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,893 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:05:43,894 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,896 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:05:43,896 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,896 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:05:43,897 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,897 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:05:43,897 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,897 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:05:43,898 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,898 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:05:43,898 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,898 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:05:43,899 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,899 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:05:43,899 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,899 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:05:43,900 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,900 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:05:43,900 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,901 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:43,902 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:43,903 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:43,903 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:43,903 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:05:43,904 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:05:43,904 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,904 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:43,905 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 23:05:43,926 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:05:44,039 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,039 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,041 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:05:44,045 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 23:05:44,046 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,046 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,046 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,047 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,049 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,051 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,053 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,055 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,055 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 23:05:44,056 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,056 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,057 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 23:05:44,057 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,058 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:05:44,058 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 23:05:44,058 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,059 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 23:05:44,059 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 23:05:44,060 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@103672b2 ).size(): 1
2016-10-23 23:05:44,061 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 23:05:44,064 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:44,065 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,068 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:05:44,069 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,070 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:05:44,070 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,072 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:05:44,073 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,074 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:05:44,074 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,075 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:05:44,077 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,077 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:05:44,078 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,079 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:05:44,079 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,080 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:05:44,080 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,082 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:05:44,083 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,083 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:05:44,083 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,083 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:05:44,083 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,084 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:05:44,085 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,085 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:05:44,085 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,085 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:05:44,085 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,087 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:05:44,087 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,087 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:05:44,087 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,087 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:05:44,088 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,088 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:05:44,088 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,088 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:05:44,089 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,089 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:05:44,089 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,089 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,089 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:05:44,090 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 23:05:44,100 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:05:44,130 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,130 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,132 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:05:44,134 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:05:44,135 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,135 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,136 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,137 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,137 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,138 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,138 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,141 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,141 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,141 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,142 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,143 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,143 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,143 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,144 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:05:44,144 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,144 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,145 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:05:44,146 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,148 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:05:44,148 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:05:44,148 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,150 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:05:44,150 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 23:05:44,154 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@449cc817 ).size(): 1
2016-10-23 23:05:44,155 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 23:05:44,157 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 23:05:44,157 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 23:05:44,193 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 23:05:44,194 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:05:44,195 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 23:05:44,196 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,196 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,198 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:05:44,200 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 23:05:44,200 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,201 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,202 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,202 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,203 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,203 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,203 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,204 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,204 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 23:05:44,206 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,206 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,208 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 23:05:44,208 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,209 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:05:44,209 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 23:05:44,209 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,212 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 23:05:44,213 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7808fb9
2016-10-23 23:05:44,229 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@460cd123 ).size(): 1
2016-10-23 23:05:44,229 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 23:05:44,233 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:44,234 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,236 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:05:44,236 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,238 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,239 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,239 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,240 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,241 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 23:05:44,247 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:05:44,252 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 23:05:44,253 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:05:44,253 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:05:44,253 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,254 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,260 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:05:44,263 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 23:05:44,264 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,264 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,265 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,265 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,266 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,266 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,266 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,266 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,267 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,267 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 23:05:44,267 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,268 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 23:05:44,268 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,268 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,269 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 23:05:44,269 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,270 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:05:44,270 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 23:05:44,270 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,271 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 23:05:44,272 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@72805168
2016-10-23 23:05:44,274 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@22d124bd ).size(): 1
2016-10-23 23:05:44,274 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 23:05:44,278 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:44,280 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,281 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:05:44,282 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,284 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,285 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,285 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,287 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:05:44,288 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:05:44,298 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:05:44,304 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 23:05:44,304 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:05:44,308 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:05:44,308 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,308 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 23:05:44,309 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:05:44,309 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:05:44,309 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@588ffeb
2016-10-23 23:05:44,310 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:05:44,310 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:05:44,310 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7c28c1
2016-10-23 23:05:44,310 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:05:44,311 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:05:44,311 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@baf1bb3
2016-10-23 23:05:44,311 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b
2016-10-23 23:05:44,311 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:05:44,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@4e007a5d.acquireResource() returning. 
2016-10-23 23:05:44,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:05:44,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:05:44,348 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,349 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:05:44,353 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 23:05:44,353 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,353 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,354 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,354 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,356 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,356 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,356 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,357 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,357 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,358 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,359 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,359 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,359 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,361 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,361 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,361 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 23:05:44,362 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,362 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 23:05:44,362 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,363 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,363 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 23:05:44,364 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,364 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:05:44,364 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:05:44,364 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,366 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:05:44,366 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34cf5a97
2016-10-23 23:05:44,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:05:44,378 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@4e007a5d.acquireResource() returning. 
2016-10-23 23:05:44,381 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,382 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:05:44,382 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:05:44,381 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7bed88bd ).size(): 1
2016-10-23 23:05:44,382 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 23:05:44,384 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:44,388 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,388 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,389 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,389 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:05:44,393 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:05:44,396 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:05:44,396 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:05:44,396 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:05:44,396 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:05:44,397 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,400 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:05:44,400 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:05:44,400 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@4e007a5d.acquireResource() returning. 
2016-10-23 23:05:44,401 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6423155b)
2016-10-23 23:05:44,401 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:05:44,401 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vivz2gkhot0n|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:05:44,402 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:05:44,403 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,403 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:05:44,403 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:05:44,404 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:05:44,404 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,404 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:05:44,405 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:05:44,405 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,405 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,406 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,406 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:05:44,406 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:05:44,406 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:05:44,408 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:05:44,408 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:05:44,408 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:05:44,408 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:05:44,409 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:05:44,409 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,410 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:05:44,410 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:05:44,410 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:05:44,411 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:05:44,411 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4a1c0752
2016-10-23 23:05:44,414 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4f2fd66f ).size(): 1
2016-10-23 23:05:44,418 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 23:05:44,426 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:05:44,428 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,429 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,430 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:05:44,430 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 23:05:44,435 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:06:03,121 ! DEBUG ! [http-bio-8080-exec-1] ! resources.Service ! Query Param Received: CustomerIdnull; Month:0; Filter:null; AddressId:null
2016-10-23 23:06:03,124 !  INFO ! [http-bio-8080-exec-1] ! resources.Service ! Service Request Received
2016-10-23 23:06:03,125 ! DEBUG ! [http-bio-8080-exec-1] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c
2016-10-23 23:06:03,148 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:06:03,177 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:06:03,238 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:06:03,239 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:06:03,240 ! DEBUG ! [http-bio-8080-exec-1] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:06:03,247 ! DEBUG ! [http-bio-8080-exec-1] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:06:03,260 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:06:03,262 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:06:03,267 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:06:03,267 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:06:03,409 !  INFO ! [http-bio-8080-exec-1] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:06:03,412 !  INFO ! [http-bio-8080-exec-1] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:06:03,414 !  INFO ! [http-bio-8080-exec-1] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:06:03,430 ! DEBUG ! [http-bio-8080-exec-1] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:06:03,471 ! DEBUG ! [http-bio-8080-exec-1] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:06:03,483 !  INFO ! [http-bio-8080-exec-1] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:06:03,600 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@e3bca10
2016-10-23 23:06:03,600 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@e3bca10
2016-10-23 23:06:03,601 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e3bca10
2016-10-23 23:06:03,602 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@613c2938
2016-10-23 23:06:03,605 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@123cf989
2016-10-23 23:06:03,607 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@23228b88
2016-10-23 23:06:03,609 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@3e6cf34b
2016-10-23 23:06:03,610 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@3e6cf34b
2016-10-23 23:06:03,610 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e6cf34b
2016-10-23 23:06:03,612 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@6ae972ef
2016-10-23 23:06:03,612 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@6ae972ef
2016-10-23 23:06:03,612 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ae972ef
2016-10-23 23:06:03,615 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@222685b8
2016-10-23 23:06:03,615 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@222685b8
2016-10-23 23:06:03,615 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@222685b8
2016-10-23 23:06:03,617 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@1879bdb2
2016-10-23 23:06:03,618 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@1879bdb2
2016-10-23 23:06:03,618 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1879bdb2
2016-10-23 23:06:03,621 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@30b58f43
2016-10-23 23:06:03,621 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@30b58f43
2016-10-23 23:06:03,621 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@30b58f43
2016-10-23 23:06:03,624 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@e066dda
2016-10-23 23:06:03,625 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@e066dda
2016-10-23 23:06:03,625 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e066dda
2016-10-23 23:06:03,628 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@4060ff65
2016-10-23 23:06:03,628 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@4060ff65
2016-10-23 23:06:03,629 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4060ff65
2016-10-23 23:06:03,631 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74b71a0e
2016-10-23 23:06:03,632 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74b71a0e
2016-10-23 23:06:03,634 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64e60b32
2016-10-23 23:06:03,635 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64e60b32
2016-10-23 23:06:03,637 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@1f492578
2016-10-23 23:06:03,638 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@1f492578
2016-10-23 23:06:03,640 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@329cfe48
2016-10-23 23:06:03,641 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22892bb8
2016-10-23 23:06:03,643 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@25c31a1f
2016-10-23 23:06:03,644 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@25c31a1f
2016-10-23 23:06:03,646 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@3f7db807
2016-10-23 23:06:03,647 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f7db807
2016-10-23 23:06:03,669 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@555d7b0b
2016-10-23 23:06:03,669 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@555d7b0b
2016-10-23 23:06:03,672 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@55354044
2016-10-23 23:06:03,673 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@55354044
2016-10-23 23:06:03,676 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c9fba61
2016-10-23 23:06:03,677 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c9fba61
2016-10-23 23:06:03,680 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@38d03270
2016-10-23 23:06:03,680 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@38d03270
2016-10-23 23:06:03,683 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d88e386
2016-10-23 23:06:03,683 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d88e386
2016-10-23 23:06:03,685 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21df2a23
2016-10-23 23:06:03,685 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21df2a23
2016-10-23 23:06:03,716 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57183ac4
2016-10-23 23:06:03,717 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57183ac4
2016-10-23 23:06:03,719 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@21af5220
2016-10-23 23:06:03,719 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@21af5220
2016-10-23 23:06:03,721 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@2f7775ed
2016-10-23 23:06:03,722 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f7775ed
2016-10-23 23:06:03,724 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@66561bfa
2016-10-23 23:06:03,724 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@66561bfa
2016-10-23 23:06:03,725 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@66561bfa
2016-10-23 23:06:03,728 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@605db47b
2016-10-23 23:06:03,730 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@646b6d35
2016-10-23 23:06:03,731 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@646b6d35
2016-10-23 23:06:03,731 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@646b6d35
2016-10-23 23:06:03,733 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c6e49f0
2016-10-23 23:06:03,734 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@6508ed17
2016-10-23 23:06:03,735 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6508ed17
2016-10-23 23:06:03,737 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@96295ed
2016-10-23 23:06:03,737 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@96295ed
2016-10-23 23:06:03,738 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3665e12e
2016-10-23 23:06:03,738 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3665e12e
2016-10-23 23:06:03,739 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@595a8c0
2016-10-23 23:06:03,739 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@595a8c0
2016-10-23 23:06:03,741 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e73a6c7
2016-10-23 23:06:03,741 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e73a6c7
2016-10-23 23:06:03,742 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b940dfd
2016-10-23 23:06:03,743 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@27f67499
2016-10-23 23:06:03,743 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@27f67499
2016-10-23 23:06:03,744 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@27f67499
2016-10-23 23:06:03,745 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a2a2dce
2016-10-23 23:06:03,745 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a2a2dce
2016-10-23 23:06:03,745 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a2a2dce
2016-10-23 23:06:03,747 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@3680459d
2016-10-23 23:06:03,747 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@39ad8978
2016-10-23 23:06:03,749 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@5f4db158
2016-10-23 23:06:03,749 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@5f4db158
2016-10-23 23:06:03,749 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@5f4db158
2016-10-23 23:06:03,750 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76728979
2016-10-23 23:06:03,751 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76728979
2016-10-23 23:06:03,751 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76728979
2016-10-23 23:06:03,752 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@1315ec11
2016-10-23 23:06:03,753 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@110e7718
2016-10-23 23:06:03,757 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@6d16e4c5
2016-10-23 23:06:03,757 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d16e4c5
2016-10-23 23:06:03,758 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b1d9ad0
2016-10-23 23:06:03,762 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@34950fbc
2016-10-23 23:06:03,762 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@34950fbc
2016-10-23 23:06:03,765 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@54fcb3c3
2016-10-23 23:06:03,765 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54fcb3c3
2016-10-23 23:06:03,766 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@78e85ce1
2016-10-23 23:06:03,767 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4959fe88
2016-10-23 23:06:03,769 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@3bb49e2b
2016-10-23 23:06:03,772 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@52a72fe8
2016-10-23 23:06:03,772 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52a72fe8
2016-10-23 23:06:03,773 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b6c3787
2016-10-23 23:06:03,773 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@205f996d
2016-10-23 23:06:03,773 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6df61a1c
2016-10-23 23:06:03,773 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a58c8fa
2016-10-23 23:06:03,774 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50221839
2016-10-23 23:06:03,774 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c6a67a1
2016-10-23 23:06:03,774 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5111baca
2016-10-23 23:06:03,774 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6db2b70a
2016-10-23 23:06:03,787 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:06:03,787 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:06:03,788 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:06:03,804 !  INFO ! [http-bio-8080-exec-1] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:06:03,942 !  INFO ! [http-bio-8080-exec-1] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:06:03,974 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viwgkp1rga5on|475e66cb,name=1hgel1d9j1viwgkp1rga5on|475e66cb registered.
2016-10-23 23:06:04,023 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viwgkp1rga5on|475e66cb,name=1hgel1d9j1viwgkp1rga5on|475e66cb unregistered, in order to be reregistered after update.
2016-10-23 23:06:04,024 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viwgkp1rga5on|475e66cb,name=1hgel1d9j1viwgkp1rga5on|475e66cb registered.
2016-10-23 23:06:04,039 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:06:04,077 !  INFO ! [http-bio-8080-exec-1] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@56cf9fac [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@f68313fc [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1viwgkp1rga5on|156df501, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@77a70be1 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1viwgkp1rga5on|7a30b008, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1viwgkp1rga5on|475e66cb, numHelperThreads -> 3 ]
2016-10-23 23:06:04,106 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:06:04,107 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:06:04,108 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@331720d1
2016-10-23 23:06:04,108 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:06:04,108 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:06:04,109 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@287b72b4
2016-10-23 23:06:04,109 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:06:04,109 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:06:04,110 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4584e4b0
2016-10-23 23:06:04,110 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:06:04,110 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:06:04,111 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@17e5e9d6
2016-10-23 23:06:04,111 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:06:04,112 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:06:04,112 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1d7e4253
2016-10-23 23:06:04,113 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:06:04,113 ! DEBUG ! [http-bio-8080-exec-1] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:06:04,114 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:06:04,115 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:06:04,116 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:06:04,490 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,491 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,491 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@797369e4.acquireResource() returning. 
2016-10-23 23:06:04,491 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,492 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@797369e4.acquireResource() returning. 
2016-10-23 23:06:04,491 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@797369e4.acquireResource() returning. 
2016-10-23 23:06:04,492 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:06:04,493 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:06:04,494 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:06:04,496 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 1, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,500 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,500 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:06:04,500 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:06:04,502 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,503 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:06:04,503 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:06:04,513 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,513 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@797369e4.acquireResource() returning. 
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@797369e4.acquireResource() returning. 
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,514 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:06:04,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:06:04,519 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:06:04,519 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:06:04,520 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:06:04,552 !  INFO ! [http-bio-8080-exec-1] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:06:04,640 ! DEBUG ! [http-bio-8080-exec-1] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:06:04,642 ! DEBUG ! [http-bio-8080-exec-1] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:06:04,666 !  INFO ! [http-bio-8080-exec-1] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:06:04,667 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,669 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@7009f2d8
2016-10-23 23:06:04,670 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:04,671 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:04,731 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:06:04,732 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:06:04,734 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:06:04,736 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:06:04,737 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:06:04,739 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:06:04,740 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:06:04,742 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:06:04,747 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:06:04,749 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:06:04,750 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:06:04,751 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:06:04,752 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:06:04,754 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:06:04,817 ! DEBUG ! [http-bio-8080-exec-1] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:06:04,856 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:06:04,900 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:06:04,910 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:06:04,918 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:06:04,958 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,964 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:06:04,968 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:06:04,971 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:06:04,975 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:06:04,979 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,980 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:06:04,980 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:06:04,981 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:06:04,981 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:06:04,981 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,982 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:06:04,982 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:06:04,982 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:06:04,983 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:06:04,983 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,983 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:06:04,984 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:06:04,984 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:06:04,984 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:06:04,985 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,985 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:06:04,986 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:06:04,986 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:06:04,986 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:06:04,987 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,987 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:06:04,987 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:06:04,988 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:06:04,988 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:06:04,988 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,989 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:06:04,989 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:06:04,989 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:06:04,990 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:06:04,990 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,991 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:06:04,991 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:06:04,991 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:06:04,991 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:06:04,992 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,992 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:06:04,993 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:06:04,993 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:06:04,993 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:06:04,994 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,994 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:06:04,994 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:06:04,995 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:06:04,995 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:06:04,996 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,996 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:06:04,996 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:06:04,997 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:06:04,997 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:06:04,998 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:04,999 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:06:04,999 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:06:05,000 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:06:05,000 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:06:05,000 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:05,001 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:06:05,001 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:06:05,002 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:06:05,002 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:06:05,002 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:06:05,002 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:06:05,003 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:06:05,003 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:06:05,003 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:06:05,005 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:06:05,005 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:06:05,006 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:06:05,006 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:06:05,006 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:06:05,006 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:06:05,007 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:06:05,007 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:06:05,007 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:06:05,007 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:06:05,008 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:06:05,008 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:06:05,008 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:06:05,008 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:06:05,011 ! DEBUG ! [http-bio-8080-exec-1] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:06:05,081 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:06:05,083 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:06:05,083 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:06:05,084 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:06:05,084 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:06:05,085 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:06:05,085 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:06:05,085 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:06:05,086 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:06:05,086 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:06:05,086 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:06:05,087 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:06:05,087 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:06:05,087 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:06:05,087 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:06:05,088 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:06:05,090 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:06:05,091 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:06:05,091 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:06:05,092 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:06:05,092 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:06:05,092 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:06:05,093 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41c188c5
2016-10-23 23:06:05,093 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:06:05,093 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:06:05,093 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:06:05,094 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:06:05,094 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:06:05,094 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:06:05,094 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:06:05,095 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:06:05,095 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:06:05,095 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:06:05,095 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:06:05,095 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:06:05,096 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:06:05,199 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:06:05,199 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher clean install tomcat7:run, maven.home=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\.., sun.stderr.encoding=cp437, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, sun.stdout.encoding=cp437, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, tomcat.maven.http.port=8080, user.script=, java.util.logging.config.file=C:\Telfort_migration\InvoiceService\target\tomcat\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=skuma353, file.encoding=Cp1252, guice.disable.misplaced.annotation.check=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, sun.os.patch.level=Service Pack 1, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, classworlds.conf=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\bin\m2.conf, org.apache.catalina.startup.TldConfig.jarsToSkip=, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, file.encoding.pkg=sun.io, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Paris, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., server.loader=, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, hibernate.connection.username=ACME, common.loader=C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar,C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, catalina.home=C:\Telfort_migration\InvoiceService\target\tomcat, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, maven.multiModuleProjectDirectory=C:\Telfort_migration\InvoiceService, hibernate.connection.password=****, catalina.base=C:\Telfort_migration\InvoiceService\target\tomcat, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@558e57e7, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:06:05,214 ! DEBUG ! [http-bio-8080-exec-1] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:06:05,220 ! DEBUG ! [http-bio-8080-exec-1] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:06:05,249 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:06:05,309 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:06:05,309 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:06:05,327 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:06:05,327 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:06:05,387 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:06:05,387 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:06:05,387 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:06:05,387 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:06:05,388 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:06:05,388 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:06:05,417 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1542d4be]
2016-10-23 23:06:05,418 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,419 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,420 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,421 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,438 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,444 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,447 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,448 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab0e221]
2016-10-23 23:06:05,448 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,448 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,449 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,449 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,449 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,450 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,450 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,450 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,451 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,451 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,451 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,451 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,452 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,452 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,453 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,454 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,454 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,454 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fdedb5c]
2016-10-23 23:06:05,455 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,455 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,455 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,456 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,456 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,456 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,456 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,457 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,457 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,457 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,458 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,458 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,458 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,458 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,459 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,460 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,461 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,461 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ccc6a86]
2016-10-23 23:06:05,462 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,462 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,462 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,463 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,463 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,463 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,463 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,464 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,464 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,464 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,464 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,464 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,465 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,465 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,466 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,467 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,467 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,468 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492df77c]
2016-10-23 23:06:05,468 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,468 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,469 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,469 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,469 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,470 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,471 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,471 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,471 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,471 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,472 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,472 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,473 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e1b71f]
2016-10-23 23:06:05,473 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,473 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,473 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,474 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,475 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,475 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,475 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,475 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,476 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,476 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,477 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,477 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a7269d]
2016-10-23 23:06:05,478 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,478 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,478 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,478 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,478 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,479 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,480 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,480 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,480 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,481 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,481 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,482 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:06:05,482 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578efa33]
2016-10-23 23:06:05,482 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,482 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,483 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,483 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,483 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,483 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,484 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,484 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,484 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,484 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,485 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,485 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,485 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,485 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,486 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,486 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,487 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,487 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75171f31]
2016-10-23 23:06:05,488 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,488 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,488 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,488 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,488 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,489 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,490 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,490 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,490 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,491 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,491 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,491 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:06:05,492 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee0b19e]
2016-10-23 23:06:05,492 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,492 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,493 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,494 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,494 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,494 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,494 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,494 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,495 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,495 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,495 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,496 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4391fb44]
2016-10-23 23:06:05,496 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:06:05,497 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:06:05,497 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:06:05,498 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:06:05,498 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:06:05,498 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:06:05,499 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:06:05,499 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:06:05,499 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:06:05,499 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:06:05,499 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:06:05,500 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:06:05,500 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:06:05,500 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:06:05,501 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:06:05,501 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:06:05,502 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,520 ! DEBUG ! [http-bio-8080-exec-1] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,520 ! DEBUG ! [http-bio-8080-exec-1] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:06:05,560 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:05,564 !  INFO ! [http-bio-8080-exec-1] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@63482945] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:06:05,606 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:05,607 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@6e7d4a65
2016-10-23 23:06:05,607 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:05,607 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:06:05,608 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:06:05,608 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:06:05,613 ! DEBUG ! [http-bio-8080-exec-1] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:06:05,614 ! DEBUG ! [http-bio-8080-exec-1] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:06:05,614 ! DEBUG ! [http-bio-8080-exec-1] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:06:05,617 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b870516
2016-10-23 23:06:05,620 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 648f95dd-1e91-4662-9948-7af87914b627 (<unnamed>)
2016-10-23 23:06:05,620 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:06:05,698 ! DEBUG ! [http-bio-8080-exec-1] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:06:05,706 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TransactionImpl ! begin
2016-10-23 23:06:05,706 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@6ee37d9a [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3745ea00)
2016-10-23 23:06:05,724 ! DEBUG ! [http-bio-8080-exec-1] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c2975c7
2016-10-23 23:06:05,724 !  INFO ! [http-bio-8080-exec-1] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:06:05,778 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c
2016-10-23 23:06:05,795 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2016-10-23 23:06:05,795 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:06:05,837 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:06:05,865 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:06:05,867 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:06:05,869 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:06:05,870 ! DEBUG ! [http-bio-8080-exec-1] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:06:05,887 ! DEBUG ! [http-bio-8080-exec-1] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:06:05,887 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:06:05,888 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:06:05,889 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:06:05,901 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c
2016-10-23 23:06:05,902 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:06:05,902 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:06:06,111 ! DEBUG ! [http-bio-8080-exec-1] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:06:06,117 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@5700b660: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@6b2ddd50
2016-10-23 23:06:06,134 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@5cb3270d ).size(): 1
2016-10-23 23:06:06,135 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:06:06,146 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:06:06,150 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:06:06,172 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:06:06,172 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:06:06,173 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:06:06,174 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:06:06,174 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:06:06,175 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:06:06,175 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:06:06,175 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:06:06,176 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:06:06,176 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,177 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:06:06,177 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,178 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:06:06,178 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,178 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:06:06,178 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,179 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:06:06,179 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,179 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:06:06,180 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,180 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:06:06,180 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,181 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:06:06,181 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,181 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:06:06,181 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,182 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:06:06,182 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,183 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:06:06,183 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,183 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:06:06,183 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,184 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:06:06,184 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,184 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:06:06,185 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,185 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:06:06,185 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,185 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:06:06,186 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,186 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:06:06,187 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,187 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:06:06,188 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,188 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:06:06,188 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,189 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:06:06,189 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,189 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:06:06,190 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,190 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:06:06,190 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,191 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:06:06,191 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,191 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:06:06,192 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,194 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:06:06,198 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:06:06,198 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:06:06,199 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:06:06,199 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:06:06,199 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:06:06,200 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,200 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:06:06,201 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:06:06,468 ! DEBUG ! [http-bio-8080-exec-1] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:06:14,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@480a7600 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:06:24,077 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@480a7600 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:06:34,079 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@480a7600 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:06:44,079 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@480a7600 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:06:54,079 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viwgkp1rga5on|475e66cb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@480a7600 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:07:11,776 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:07:11,843 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:07:11,933 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:07:11,933 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:07:11,935 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:07:11,950 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:07:11,966 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:07:11,970 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:07:11,976 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:07:11,977 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:07:12,166 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:07:12,168 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:07:12,171 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:07:12,187 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:07:12,228 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:07:12,240 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:07:12,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:07:12,326 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:07:12,326 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:07:12,327 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 23:07:12,328 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 23:07:12,328 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 23:07:12,330 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:07:12,331 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:07:12,331 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:07:12,332 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:07:12,332 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:07:12,332 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:07:12,333 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:07:12,335 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:07:12,335 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:07:12,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:07:12,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:07:12,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:07:12,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:07:12,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:07:12,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:07:12,340 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:07:12,341 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:07:12,341 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:07:12,342 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:07:12,342 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:07:12,342 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:07:12,345 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:07:12,345 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:07:12,347 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:07:12,347 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:07:12,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:12,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:12,350 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 23:07:12,352 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 23:07:12,353 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:07:12,353 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:07:12,355 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:07:12,356 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:07:12,372 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:07:12,373 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:07:12,376 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:07:12,376 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:07:12,378 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:07:12,378 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:07:12,381 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:07:12,381 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:07:12,383 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:07:12,385 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:07:12,386 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:07:12,386 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:07:12,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:07:12,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:07:12,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:07:12,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:07:12,396 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:07:12,397 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:07:12,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:12,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:12,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:12,401 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 23:07:12,403 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:07:12,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:07:12,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:07:12,405 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 23:07:12,406 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:07:12,407 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:07:12,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:07:12,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:07:12,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:07:12,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:07:12,410 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:07:12,410 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:07:12,412 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:07:12,412 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:07:12,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 23:07:12,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:07:12,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:07:12,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:07:12,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:07:12,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:07:12,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:07:12,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 23:07:12,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 23:07:12,419 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:07:12,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:07:12,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:07:12,421 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:07:12,421 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:07:12,422 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:07:12,422 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 23:07:12,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 23:07:12,427 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:07:12,428 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:07:12,428 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 23:07:12,432 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:07:12,433 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:07:12,436 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:07:12,436 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:07:12,437 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 23:07:12,438 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 23:07:12,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 23:07:12,442 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:07:12,443 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:07:12,443 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 23:07:12,443 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 23:07:12,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 23:07:12,457 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:07:12,458 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:07:12,458 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:07:12,485 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:07:12,958 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:07:12,977 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vixxl21sa4yth|2898ac89,name=1hgel1d9j1vixxl21sa4yth|2898ac89 registered.
2016-10-23 23:07:12,996 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vixxl21sa4yth|2898ac89,name=1hgel1d9j1vixxl21sa4yth|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 23:07:12,996 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vixxl21sa4yth|2898ac89,name=1hgel1d9j1vixxl21sa4yth|2898ac89 registered.
2016-10-23 23:07:13,002 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:07:13,024 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@c64e8ba4 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@951d5f5b [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vixxl21sa4yth|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@3c3df80f [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vixxl21sa4yth|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vixxl21sa4yth|2898ac89, numHelperThreads -> 3 ]
2016-10-23 23:07:13,042 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:07:13,043 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:13,043 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 23:07:13,043 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:07:13,043 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:13,044 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 23:07:13,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:07:13,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:07:13,044 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 23:07:13,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:07:13,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:07:13,046 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 23:07:13,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:07:13,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:07:13,046 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 23:07:13,047 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:07:13,047 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:07:13,047 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:07:13,048 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:07:13,048 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:07:13,308 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:07:13,309 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:07:13,311 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:13,311 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,319 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,319 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:07:13,319 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:13,321 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:07:13,321 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:07:13,321 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:07:13,321 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:13,321 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,322 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:13,322 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,322 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:07:13,322 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:07:13,336 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:07:13,377 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:07:13,379 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:07:13,392 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:07:13,392 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,393 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 23:07:13,394 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:13,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:13,423 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:07:13,424 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:07:13,426 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:07:13,426 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:07:13,426 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:07:13,427 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:07:13,428 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:07:13,429 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:07:13,431 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:07:13,431 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:07:13,432 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:07:13,432 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:07:13,432 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:07:13,433 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:07:13,464 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:07:13,529 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:07:13,556 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:07:13,563 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:07:13,567 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:07:13,588 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,591 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:07:13,593 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:07:13,594 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:07:13,597 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:07:13,601 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,602 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:07:13,602 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:07:13,602 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:07:13,602 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:07:13,603 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,603 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:07:13,603 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:07:13,604 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:07:13,604 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:07:13,604 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,604 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:07:13,604 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:07:13,606 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:07:13,606 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:07:13,606 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,606 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:07:13,607 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:07:13,608 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:07:13,608 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:07:13,608 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,609 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:07:13,609 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:07:13,609 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:07:13,609 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:07:13,611 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,611 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:07:13,611 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:07:13,612 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:07:13,612 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:07:13,612 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,612 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:07:13,613 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:07:13,613 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:07:13,613 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:07:13,613 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,613 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:07:13,614 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:07:13,614 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:07:13,614 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:07:13,616 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,616 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:07:13,616 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:07:13,616 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:07:13,616 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:07:13,617 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,617 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:07:13,617 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:07:13,618 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:07:13,618 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:07:13,618 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,618 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:07:13,619 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:07:13,619 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:07:13,619 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:07:13,619 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,621 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:07:13,621 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:07:13,621 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:07:13,622 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:07:13,622 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:13,622 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:07:13,622 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:07:13,623 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:07:13,623 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:07:13,624 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:07:13,626 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:07:13,626 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:07:13,626 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:07:13,626 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:07:13,626 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:07:13,627 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:07:13,627 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:07:13,627 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:07:13,627 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:07:13,627 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:07:13,628 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:07:13,628 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:07:13,628 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:07:13,631 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:07:13,671 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:07:13,672 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:07:13,672 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:07:13,673 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:07:13,674 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:07:13,676 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:07:13,677 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:07:13,678 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:07:13,678 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:07:13,678 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:07:13,741 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:07:13,742 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2772189635439290940.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire186209605612533458tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_05242089929907176091tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2772189635439290940.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:07:13,826 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:07:13,827 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:07:13,847 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:07:13,853 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:07:13,872 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:07:13,908 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:07:13,909 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:07:13,921 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:07:13,922 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:07:13,969 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:07:13,971 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:07:13,971 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:07:13,971 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:07:13,971 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:07:13,971 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:07:13,992 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 23:07:13,993 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:13,993 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:13,993 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:13,993 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:13,994 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:13,996 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,008 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,012 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,014 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,014 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 23:07:14,014 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,014 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,014 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,016 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,017 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,017 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,017 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,017 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,017 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,018 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,018 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,019 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,021 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,021 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,021 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,021 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,021 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,022 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,023 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,024 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,024 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,024 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,024 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 23:07:14,024 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,026 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,027 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,027 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,027 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,027 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,028 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,028 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,028 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,028 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 23:07:14,028 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,029 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,031 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,032 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,032 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,033 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,034 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,034 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,034 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:07:14,034 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,036 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,037 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,038 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,038 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,038 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 23:07:14,038 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,038 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,039 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,041 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,041 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,041 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,041 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,042 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,042 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:14,042 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 23:07:14,042 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,046 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,046 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,046 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,047 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,047 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,047 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,048 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 23:07:14,048 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:14,048 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:14,048 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:14,049 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:14,051 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:14,051 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:14,051 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:14,051 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:14,051 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:14,052 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:14,052 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,073 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,073 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:14,113 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:14,116 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:07:14,212 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:14,212 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@649725e3
2016-10-23 23:07:14,212 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:14,212 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:14,213 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:07:14,214 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:07:14,221 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:07:14,223 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:07:14,224 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:07:14,228 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1da881
2016-10-23 23:07:14,231 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: da0c84ef-5075-4350-bca4-8bd3c05f5dbe (<unnamed>)
2016-10-23 23:07:14,231 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:07:14,309 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:07:14,319 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:14,319 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:14,326 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 23:07:14,337 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 23:07:14,337 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 23:07:14,338 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 23:07:14,339 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 23:07:14,339 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 23:07:14,341 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 23:07:14,344 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 23:07:11 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 23:07:11 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 23:07:11 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 23:07:11 CEST 2016}
2016-10-23 23:07:14,361 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:07:14,369 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 23:07:14,393 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@27c8268e ).size(): 1
2016-10-23 23:07:14,393 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:07:14,422 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:07:14,424 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:07:14,426 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:07:14,426 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 23:07:14,426 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:14,426 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:07:14,426 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:07:14,428 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:07:14,752 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 23:07:14,829 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:14,830 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:14,869 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 23:07:14,870 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:07:14,919 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:07:14,930 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 23:07:14,931 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:14,958 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:14,978 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:14,980 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:14,981 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:14,983 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:07:15,024 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,024 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,025 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:07:15,026 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,035 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:07:15,035 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:07:15,036 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,053 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:07:15,055 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 23:07:15,056 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@27c8268e ).size(): 2
2016-10-23 23:07:15,057 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 23:07:15,107 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,111 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,116 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:07:15,116 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,117 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:07:15,117 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,117 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:07:15,118 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,118 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:07:15,118 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:15,120 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:07:15,120 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,120 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:07:15,121 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,121 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:07:15,121 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,121 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:07:15,122 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,122 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:07:15,122 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,122 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:07:15,122 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,123 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:07:15,123 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,123 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:07:15,123 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,123 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:07:15,125 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,125 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:07:15,125 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,125 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:07:15,126 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,126 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:07:15,126 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,126 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:07:15,126 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,127 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:07:15,127 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,127 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:07:15,127 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,127 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:07:15,128 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,128 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:07:15,128 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,128 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:07:15,128 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,130 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:07:15,130 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,130 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:07:15,130 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,130 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:07:15,131 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,131 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:07:15,131 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,131 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:07:15,131 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,132 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:07:15,132 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,132 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 29
2016-10-23 23:07:15,132 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,133 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,135 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,135 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,135 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,136 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:15,136 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:15,136 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,136 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,137 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 23:07:15,160 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:07:15,284 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,284 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,286 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:07:15,288 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 23:07:15,289 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,289 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,290 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,290 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,293 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,295 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,297 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,298 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,298 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 23:07:15,299 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,299 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,299 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 23:07:15,299 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,300 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:07:15,300 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 23:07:15,300 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,301 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 23:07:15,302 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 23:07:15,302 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@611ae80d ).size(): 1
2016-10-23 23:07:15,303 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 23:07:15,306 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,307 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,309 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:07:15,310 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,310 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:07:15,311 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,312 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:07:15,314 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,314 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:07:15,315 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,315 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:07:15,316 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,317 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:07:15,317 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,319 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:07:15,319 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,320 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:07:15,320 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:07:15,321 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:07:15,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:07:15,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:07:15,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:07:15,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,326 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:15,327 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 23:07:15,337 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:07:15,365 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,365 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,366 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:07:15,370 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:07:15,370 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,370 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,371 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,372 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,372 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,372 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,374 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,375 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,376 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,376 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,377 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,377 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,377 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,379 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,379 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:07:15,379 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,379 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,380 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:07:15,380 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,381 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:07:15,382 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:07:15,382 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,382 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:07:15,384 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 23:07:15,386 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4a8cb705 ).size(): 1
2016-10-23 23:07:15,387 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 23:07:15,397 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 23:07:15,399 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 23:07:15,454 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 23:07:15,455 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:07:15,457 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 23:07:15,457 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,458 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,461 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:07:15,463 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 23:07:15,463 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,464 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,465 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,465 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,466 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,466 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,466 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,467 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,467 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 23:07:15,467 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,468 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,468 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 23:07:15,468 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,469 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:07:15,469 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 23:07:15,469 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,470 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 23:07:15,471 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7808fb9
2016-10-23 23:07:15,472 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@747cd8cc ).size(): 1
2016-10-23 23:07:15,473 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 23:07:15,479 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,482 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,484 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:07:15,486 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,487 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,488 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,488 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,489 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,489 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 23:07:15,494 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:07:15,498 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 23:07:15,498 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:07:15,499 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:07:15,499 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,499 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,502 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:07:15,504 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 23:07:15,504 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,504 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,506 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,506 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,507 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,507 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,507 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,508 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,508 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,508 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 23:07:15,508 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,509 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 23:07:15,509 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,509 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,511 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 23:07:15,511 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,512 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:07:15,512 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 23:07:15,512 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,513 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 23:07:15,513 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@72805168
2016-10-23 23:07:15,516 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@d0e4437 ).size(): 1
2016-10-23 23:07:15,517 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 23:07:15,521 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,522 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,528 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:07:15,529 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,531 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,532 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,532 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,533 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:15,534 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:07:15,538 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:07:15,543 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 23:07:15,543 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:07:15,545 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:07:15,546 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,546 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 23:07:15,546 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:07:15,546 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@588ffeb
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7c28c1
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:07:15,547 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@baf1bb3
2016-10-23 23:07:15,548 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa
2016-10-23 23:07:15,548 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,565 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:07:15,566 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:15,568 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,568 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:07:15,568 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:15,569 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:07:15,569 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@188fc073.acquireResource() returning. 
2016-10-23 23:07:15,569 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,569 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:07:15,569 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vixxl21sa4yth|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:07:15,569 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,571 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:07:15,575 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 23:07:15,575 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,576 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,576 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,576 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,578 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,578 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,580 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,580 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,580 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,581 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,583 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,583 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,583 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,584 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,584 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,584 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 23:07:15,584 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,585 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 23:07:15,585 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,585 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,586 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 23:07:15,588 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,588 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:07:15,588 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:07:15,588 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,589 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:07:15,590 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34cf5a97
2016-10-23 23:07:15,593 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@273d9cab ).size(): 1
2016-10-23 23:07:15,595 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 23:07:15,599 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,600 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,601 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,601 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,603 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:07:15,606 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:07:15,611 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:07:15,611 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:07:15,611 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:07:15,613 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:07:15,613 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1cf6e6aa)
2016-10-23 23:07:15,616 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:07:15,624 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:07:15,624 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,625 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:15,625 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:15,625 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:15,626 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,628 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:07:15,628 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:07:15,629 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,629 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,629 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,629 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:07:15,630 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:07:15,630 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:07:15,630 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:15,630 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:07:15,631 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:15,631 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:15,633 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:07:15,633 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,633 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:07:15,634 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:07:15,634 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:15,635 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:07:15,635 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4a1c0752
2016-10-23 23:07:15,638 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@55b12928 ).size(): 1
2016-10-23 23:07:15,638 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 23:07:15,640 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:15,641 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,643 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,643 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:15,644 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 23:07:15,653 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:07:52,144 ! DEBUG ! [http-bio-8080-exec-3] ! resources.Service ! Query Param Received: CustomerIdnull; Month:0; Filter:null; AddressId:null
2016-10-23 23:07:52,148 !  INFO ! [http-bio-8080-exec-3] ! resources.Service ! Service Request Received
2016-10-23 23:07:52,149 ! DEBUG ! [http-bio-8080-exec-3] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c
2016-10-23 23:07:52,177 ! DEBUG ! [http-bio-8080-exec-3] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:07:52,207 ! DEBUG ! [http-bio-8080-exec-3] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:07:52,272 ! DEBUG ! [http-bio-8080-exec-3] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:07:52,273 ! DEBUG ! [http-bio-8080-exec-3] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:07:52,273 ! DEBUG ! [http-bio-8080-exec-3] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:07:52,285 ! DEBUG ! [http-bio-8080-exec-3] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:07:52,296 ! DEBUG ! [http-bio-8080-exec-3] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:07:52,299 ! DEBUG ! [http-bio-8080-exec-3] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:07:52,303 ! DEBUG ! [http-bio-8080-exec-3] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:07:52,304 ! DEBUG ! [http-bio-8080-exec-3] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:07:52,448 !  INFO ! [http-bio-8080-exec-3] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:07:52,451 !  INFO ! [http-bio-8080-exec-3] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:07:52,454 !  INFO ! [http-bio-8080-exec-3] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:07:52,475 ! DEBUG ! [http-bio-8080-exec-3] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:07:52,528 ! DEBUG ! [http-bio-8080-exec-3] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:07:52,545 !  INFO ! [http-bio-8080-exec-3] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:07:52,713 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@369a0a0
2016-10-23 23:07:52,713 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@369a0a0
2016-10-23 23:07:52,714 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@369a0a0
2016-10-23 23:07:52,716 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@527ffa8b
2016-10-23 23:07:52,718 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@61a07a93
2016-10-23 23:07:52,719 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@315a9469
2016-10-23 23:07:52,721 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@3620d9ca
2016-10-23 23:07:52,722 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@3620d9ca
2016-10-23 23:07:52,722 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3620d9ca
2016-10-23 23:07:52,724 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@2674c462
2016-10-23 23:07:52,724 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@2674c462
2016-10-23 23:07:52,725 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2674c462
2016-10-23 23:07:52,728 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@dc6664
2016-10-23 23:07:52,728 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@dc6664
2016-10-23 23:07:52,728 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dc6664
2016-10-23 23:07:52,731 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@ea17d9e
2016-10-23 23:07:52,731 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@ea17d9e
2016-10-23 23:07:52,731 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ea17d9e
2016-10-23 23:07:52,734 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@518e4f2e
2016-10-23 23:07:52,735 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@518e4f2e
2016-10-23 23:07:52,735 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@518e4f2e
2016-10-23 23:07:52,738 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@46bf885f
2016-10-23 23:07:52,738 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@46bf885f
2016-10-23 23:07:52,738 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@46bf885f
2016-10-23 23:07:52,741 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@1b6f086e
2016-10-23 23:07:52,742 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@1b6f086e
2016-10-23 23:07:52,742 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b6f086e
2016-10-23 23:07:52,745 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5305edf5
2016-10-23 23:07:52,745 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5305edf5
2016-10-23 23:07:52,747 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e861dc3
2016-10-23 23:07:52,747 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e861dc3
2016-10-23 23:07:52,749 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@1c155bb2
2016-10-23 23:07:52,750 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@1c155bb2
2016-10-23 23:07:52,751 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1fb7abca
2016-10-23 23:07:52,753 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@401d7dd1
2016-10-23 23:07:52,755 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@534e147b
2016-10-23 23:07:52,756 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@534e147b
2016-10-23 23:07:52,759 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@1d66edc7
2016-10-23 23:07:52,759 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d66edc7
2016-10-23 23:07:52,789 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@3df9a964
2016-10-23 23:07:52,789 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3df9a964
2016-10-23 23:07:52,792 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43a6c431
2016-10-23 23:07:52,792 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43a6c431
2016-10-23 23:07:52,795 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64619d0a
2016-10-23 23:07:52,795 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64619d0a
2016-10-23 23:07:52,798 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@78951277
2016-10-23 23:07:52,799 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@78951277
2016-10-23 23:07:52,802 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cec04cc
2016-10-23 23:07:52,803 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cec04cc
2016-10-23 23:07:52,807 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@57b964b2
2016-10-23 23:07:52,807 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@57b964b2
2016-10-23 23:07:52,813 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2809843a
2016-10-23 23:07:52,814 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2809843a
2016-10-23 23:07:52,816 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@6c37a7ae
2016-10-23 23:07:52,817 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c37a7ae
2016-10-23 23:07:52,819 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@6280f4d1
2016-10-23 23:07:52,819 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6280f4d1
2016-10-23 23:07:52,821 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@153cc3ce
2016-10-23 23:07:52,822 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@153cc3ce
2016-10-23 23:07:52,822 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@153cc3ce
2016-10-23 23:07:52,825 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b9b5752
2016-10-23 23:07:52,828 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@10a5f48b
2016-10-23 23:07:52,828 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10a5f48b
2016-10-23 23:07:52,828 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10a5f48b
2016-10-23 23:07:52,830 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31be1099
2016-10-23 23:07:52,833 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@5b262ed2
2016-10-23 23:07:52,833 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5b262ed2
2016-10-23 23:07:52,835 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@2c5e014a
2016-10-23 23:07:52,836 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c5e014a
2016-10-23 23:07:52,838 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@27f3919
2016-10-23 23:07:52,838 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@27f3919
2016-10-23 23:07:52,840 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@211fe185
2016-10-23 23:07:52,840 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@211fe185
2016-10-23 23:07:52,842 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12554131
2016-10-23 23:07:52,843 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12554131
2016-10-23 23:07:52,843 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@169713fa
2016-10-23 23:07:52,845 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@1ff6e61d
2016-10-23 23:07:52,845 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@1ff6e61d
2016-10-23 23:07:52,845 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@1ff6e61d
2016-10-23 23:07:52,847 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@34274860
2016-10-23 23:07:52,847 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@34274860
2016-10-23 23:07:52,847 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@34274860
2016-10-23 23:07:52,848 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@66488410
2016-10-23 23:07:52,849 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@2ebd4042
2016-10-23 23:07:52,852 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@7ddb1f56
2016-10-23 23:07:52,852 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@7ddb1f56
2016-10-23 23:07:52,852 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@7ddb1f56
2016-10-23 23:07:52,855 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb7149
2016-10-23 23:07:52,855 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb7149
2016-10-23 23:07:52,856 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb7149
2016-10-23 23:07:52,857 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7ca75362
2016-10-23 23:07:52,858 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@528a4780
2016-10-23 23:07:52,863 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@10974853
2016-10-23 23:07:52,864 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10974853
2016-10-23 23:07:52,864 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5db4cb2e
2016-10-23 23:07:52,870 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@1e9d1fee
2016-10-23 23:07:52,871 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e9d1fee
2016-10-23 23:07:52,876 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@142ba4be
2016-10-23 23:07:52,876 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@142ba4be
2016-10-23 23:07:52,877 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64ae78c8
2016-10-23 23:07:52,878 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@73b331e6
2016-10-23 23:07:52,880 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@76e786c7
2016-10-23 23:07:52,885 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@6c593c11
2016-10-23 23:07:52,885 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6c593c11
2016-10-23 23:07:52,886 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@685973f4
2016-10-23 23:07:52,886 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d45735a
2016-10-23 23:07:52,887 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e9e6af0
2016-10-23 23:07:52,887 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22cc6bd4
2016-10-23 23:07:52,887 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a96aaa
2016-10-23 23:07:52,887 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@67901666
2016-10-23 23:07:52,888 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a94298e
2016-10-23 23:07:52,888 ! DEBUG ! [http-bio-8080-exec-3] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bc775c3
2016-10-23 23:07:52,902 !  INFO ! [http-bio-8080-exec-3] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:07:52,902 !  INFO ! [http-bio-8080-exec-3] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:07:52,903 !  INFO ! [http-bio-8080-exec-3] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:07:52,928 !  INFO ! [http-bio-8080-exec-3] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:07:53,027 !  INFO ! [http-bio-8080-exec-3] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:07:53,047 ! DEBUG ! [http-bio-8080-exec-3] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viysrm1kt752t|56c0f0d0,name=1hgel1d9j1viysrm1kt752t|56c0f0d0 registered.
2016-10-23 23:07:53,075 ! DEBUG ! [http-bio-8080-exec-3] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viysrm1kt752t|56c0f0d0,name=1hgel1d9j1viysrm1kt752t|56c0f0d0 unregistered, in order to be reregistered after update.
2016-10-23 23:07:53,075 ! DEBUG ! [http-bio-8080-exec-3] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1viysrm1kt752t|56c0f0d0,name=1hgel1d9j1viysrm1kt752t|56c0f0d0 registered.
2016-10-23 23:07:53,085 !  INFO ! [http-bio-8080-exec-3] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:07:53,112 !  INFO ! [http-bio-8080-exec-3] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@d5ecba7b [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@36b4302f [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1viysrm1kt752t|3e97bc87, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@10d5e99b [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1viysrm1kt752t|34b851e6, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1viysrm1kt752t|56c0f0d0, numHelperThreads -> 3 ]
2016-10-23 23:07:53,136 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:07:53,137 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:53,137 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@2e07311d
2016-10-23 23:07:53,137 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:07:53,138 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:53,138 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@35e69213
2016-10-23 23:07:53,138 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:07:53,138 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:07:53,138 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@483ce637
2016-10-23 23:07:53,139 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:07:53,139 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:07:53,139 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@262ede0b
2016-10-23 23:07:53,139 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:07:53,140 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:07:53,140 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@31b68c0a
2016-10-23 23:07:53,142 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:07:53,143 ! DEBUG ! [http-bio-8080-exec-3] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:07:53,143 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:07:53,144 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:07:53,144 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:07:53,466 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,466 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,467 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3bec87d8.acquireResource() returning. 
2016-10-23 23:07:53,467 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3bec87d8.acquireResource() returning. 
2016-10-23 23:07:53,467 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,467 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3bec87d8.acquireResource() returning. 
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:07:53,468 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,469 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:07:53,469 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:07:53,469 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,479 ! DEBUG ! [http-bio-8080-exec-3] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:07:53,480 ! DEBUG ! [http-bio-8080-exec-3] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:07:53,480 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:07:53,505 !  INFO ! [http-bio-8080-exec-3] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:07:53,577 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,577 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3bec87d8.acquireResource() returning. 
2016-10-23 23:07:53,577 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,577 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:07:53,578 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:07:53,609 ! DEBUG ! [http-bio-8080-exec-3] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:07:53,613 ! DEBUG ! [http-bio-8080-exec-3] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:07:53,634 !  INFO ! [http-bio-8080-exec-3] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:07:53,635 ! DEBUG ! [http-bio-8080-exec-3] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,639 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@6a018643
2016-10-23 23:07:53,640 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,652 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,662 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:53,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3bec87d8.acquireResource() returning. 
2016-10-23 23:07:53,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 5, unused: 5, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:53,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:07:53,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:07:53,708 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:07:53,710 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:07:53,711 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:07:53,712 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:07:53,713 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:07:53,715 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:07:53,716 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:07:53,718 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:07:53,720 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:07:53,722 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:07:53,723 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:07:53,724 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:07:53,725 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:07:53,727 ! DEBUG ! [http-bio-8080-exec-3] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:07:53,811 ! DEBUG ! [http-bio-8080-exec-3] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:07:53,863 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:07:53,911 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:07:53,922 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:07:53,929 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:07:53,966 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,971 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:07:53,975 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:07:53,977 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:07:53,983 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:07:53,988 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,989 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:07:53,989 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:07:53,989 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:07:53,989 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:07:53,990 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,990 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:07:53,991 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:07:53,991 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:07:53,991 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:07:53,992 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,992 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:07:53,992 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:07:53,992 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:07:53,993 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:07:53,993 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,993 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:07:53,994 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:07:53,994 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:07:53,994 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:07:53,995 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,995 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:07:53,996 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:07:53,996 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:07:53,997 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:07:53,997 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,998 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:07:53,998 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:07:53,998 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:07:53,999 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:07:53,999 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:53,999 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:07:54,000 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:07:54,000 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:07:54,001 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:07:54,001 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,002 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:07:54,003 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:07:54,003 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:07:54,004 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:07:54,004 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,005 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:07:54,005 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:07:54,005 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:07:54,005 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:07:54,006 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,006 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:07:54,006 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:07:54,007 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:07:54,007 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:07:54,010 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,011 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:07:54,011 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:07:54,011 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:07:54,011 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:07:54,012 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,012 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:07:54,012 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:07:54,013 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:07:54,013 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:07:54,013 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:07:54,014 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:07:54,014 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:07:54,014 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:07:54,014 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:07:54,016 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:07:54,016 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:07:54,016 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:07:54,017 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:07:54,018 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:07:54,018 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:07:54,018 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:07:54,018 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:07:54,018 ! DEBUG ! [http-bio-8080-exec-3] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:07:54,020 ! DEBUG ! [http-bio-8080-exec-3] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:07:54,091 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:07:54,093 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:07:54,093 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:07:54,094 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:07:54,094 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:07:54,094 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:07:54,094 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:07:54,095 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:07:54,095 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:07:54,095 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:07:54,095 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:07:54,096 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:07:54,096 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:07:54,096 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:07:54,096 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:07:54,096 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:07:54,097 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:07:54,097 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:07:54,097 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:07:54,097 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:07:54,098 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:07:54,098 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:07:54,098 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a4cb3f7
2016-10-23 23:07:54,098 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:07:54,098 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:07:54,099 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:07:54,099 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:07:54,099 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:07:54,100 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:07:54,101 ! DEBUG ! [http-bio-8080-exec-3] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:07:54,209 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:07:54,210 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher clean install tomcat7:run, maven.home=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\.., sun.stderr.encoding=cp437, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, sun.stdout.encoding=cp437, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, tomcat.maven.http.port=8080, user.script=, java.util.logging.config.file=C:\Telfort_migration\InvoiceService\target\tomcat\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=skuma353, file.encoding=Cp1252, guice.disable.misplaced.annotation.check=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, sun.os.patch.level=Service Pack 1, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, classworlds.conf=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\bin\m2.conf, org.apache.catalina.startup.TldConfig.jarsToSkip=, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, file.encoding.pkg=sun.io, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Paris, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., server.loader=, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, hibernate.connection.username=ACME, common.loader=C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar,C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, catalina.home=C:\Telfort_migration\InvoiceService\target\tomcat, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, maven.multiModuleProjectDirectory=C:\Telfort_migration\InvoiceService, hibernate.connection.password=****, catalina.base=C:\Telfort_migration\InvoiceService\target\tomcat, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@37eb8068, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:07:54,226 ! DEBUG ! [http-bio-8080-exec-3] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:07:54,231 ! DEBUG ! [http-bio-8080-exec-3] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:07:54,258 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:07:54,317 ! DEBUG ! [http-bio-8080-exec-3] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:07:54,318 ! DEBUG ! [http-bio-8080-exec-3] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:07:54,341 ! DEBUG ! [http-bio-8080-exec-3] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:07:54,342 ! DEBUG ! [http-bio-8080-exec-3] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:07:54,408 ! DEBUG ! [http-bio-8080-exec-3] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:07:54,409 ! DEBUG ! [http-bio-8080-exec-3] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:07:54,409 ! DEBUG ! [http-bio-8080-exec-3] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:07:54,409 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:07:54,410 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:07:54,410 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:07:54,443 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@768b0f17]
2016-10-23 23:07:54,444 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,445 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,446 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,447 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,463 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,469 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,471 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,472 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c0e823]
2016-10-23 23:07:54,472 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,472 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,473 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,473 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,473 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,473 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,474 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,474 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,474 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,475 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,475 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,475 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,476 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,476 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,477 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,477 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,478 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,479 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5595ed76]
2016-10-23 23:07:54,479 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,479 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,480 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,480 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,480 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,481 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,481 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,481 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,482 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,482 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,482 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,482 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,483 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,483 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,484 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,484 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,484 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,485 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@973a871]
2016-10-23 23:07:54,485 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,485 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,486 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,486 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,486 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,486 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,487 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,488 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,488 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,488 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c206893]
2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,489 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,490 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,491 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,491 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,491 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,491 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,491 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,492 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,492 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,492 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,492 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@650fc727]
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,493 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,494 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,495 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,495 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,495 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3afb331e]
2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,496 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,497 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,498 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,498 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,498 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,498 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,499 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,499 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:07:54,499 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e185fad]
2016-10-23 23:07:54,499 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,499 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,500 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,501 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,502 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,502 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,502 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,502 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d766ebb]
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,503 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,504 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,505 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,505 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,506 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,506 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:07:54,506 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6875345b]
2016-10-23 23:07:54,506 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,507 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,508 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,509 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,509 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,510 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,510 ! DEBUG ! [http-bio-8080-exec-3] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eebe2f9]
2016-10-23 23:07:54,510 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:07:54,511 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:07:54,511 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:07:54,511 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:07:54,511 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:07:54,512 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:07:54,512 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:07:54,512 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:07:54,513 ! DEBUG ! [http-bio-8080-exec-3] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:07:54,514 ! DEBUG ! [http-bio-8080-exec-3] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:07:54,514 ! DEBUG ! [http-bio-8080-exec-3] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:07:54,514 ! DEBUG ! [http-bio-8080-exec-3] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,531 ! DEBUG ! [http-bio-8080-exec-3] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,532 ! DEBUG ! [http-bio-8080-exec-3] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:07:54,590 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:54,594 !  INFO ! [http-bio-8080-exec-3] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6224029c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:07:54,683 ! DEBUG ! [http-bio-8080-exec-3] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:54,684 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@2008640b
2016-10-23 23:07:54,684 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:54,684 ! DEBUG ! [http-bio-8080-exec-3] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:07:54,685 ! DEBUG ! [http-bio-8080-exec-3] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:07:54,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:07:54,691 ! DEBUG ! [http-bio-8080-exec-3] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:07:54,692 ! DEBUG ! [http-bio-8080-exec-3] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:07:54,692 ! DEBUG ! [http-bio-8080-exec-3] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:07:54,695 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4470cd77
2016-10-23 23:07:54,698 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryRegistry ! Registering SessionFactory: dcdcb349-5bed-425f-80fe-d3cd4e106bd7 (<unnamed>)
2016-10-23 23:07:54,699 ! DEBUG ! [http-bio-8080-exec-3] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:07:54,779 ! DEBUG ! [http-bio-8080-exec-3] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:07:54,785 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TransactionImpl ! begin
2016-10-23 23:07:54,786 ! DEBUG ! [http-bio-8080-exec-3] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@30c1f625 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@52df4f6a)
2016-10-23 23:07:54,810 ! DEBUG ! [http-bio-8080-exec-3] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1eab32ef
2016-10-23 23:07:54,811 !  INFO ! [http-bio-8080-exec-3] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:07:54,865 ! DEBUG ! [http-bio-8080-exec-3] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c
2016-10-23 23:07:54,872 ! DEBUG ! [http-bio-8080-exec-3] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

2016-10-23 23:07:54,873 ! DEBUG ! [http-bio-8080-exec-3] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:54,906 ! DEBUG ! [http-bio-8080-exec-3] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:07:54,937 ! DEBUG ! [http-bio-8080-exec-3] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:07:54,939 ! DEBUG ! [http-bio-8080-exec-3] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:07:54,941 ! DEBUG ! [http-bio-8080-exec-3] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:07:54,942 ! DEBUG ! [http-bio-8080-exec-3] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:07:54,956 ! DEBUG ! [http-bio-8080-exec-3] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:07:54,957 ! DEBUG ! [http-bio-8080-exec-3] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:07:54,958 ! DEBUG ! [http-bio-8080-exec-3] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:07:54,958 ! DEBUG ! [http-bio-8080-exec-3] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:55,173 ! DEBUG ! [http-bio-8080-exec-3] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c
2016-10-23 23:07:55,173 ! DEBUG ! [http-bio-8080-exec-3] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:07:55,174 ! DEBUG ! [http-bio-8080-exec-3] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:07:55,215 ! DEBUG ! [http-bio-8080-exec-3] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:07:55,221 ! DEBUG ! [http-bio-8080-exec-3] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7193ede6: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4ca410fa
2016-10-23 23:07:55,240 ! DEBUG ! [http-bio-8080-exec-3] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@2715c6cb ).size(): 1
2016-10-23 23:07:55,241 ! DEBUG ! [http-bio-8080-exec-3] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:07:55,251 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:07:55,255 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:55,276 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:07:55,276 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:55,277 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:07:55,278 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:55,278 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:07:55,278 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:55,278 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:07:55,279 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:55,279 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:07:55,280 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,280 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:07:55,281 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,281 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:07:55,281 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,282 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:07:55,282 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,282 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:07:55,283 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,283 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:07:55,283 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,284 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:07:55,284 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,284 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:07:55,285 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,285 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:07:55,285 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,285 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:07:55,285 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,286 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:07:55,287 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,287 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:07:55,287 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,288 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:07:55,288 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,288 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:07:55,289 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,289 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:07:55,289 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,290 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:07:55,290 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,290 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:07:55,291 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,291 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:07:55,291 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,292 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:07:55,292 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,292 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:07:55,293 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,293 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:07:55,293 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,293 ! DEBUG ! [http-bio-8080-exec-3] ! logging.DelegatingBasicLogger ! Result set row: 29
2016-10-23 23:07:55,294 ! DEBUG ! [http-bio-8080-exec-3] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,296 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:55,300 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:07:55,300 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:55,301 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:07:55,301 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:55,301 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:07:55,301 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,301 ! DEBUG ! [http-bio-8080-exec-3] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:07:55,302 ! DEBUG ! [http-bio-8080-exec-3] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:07:55,583 ! DEBUG ! [http-bio-8080-exec-3] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:08:03,111 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@1b5a7cc0 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:08:13,111 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@1b5a7cc0 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:08:23,112 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@1b5a7cc0 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:08:33,113 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1viysrm1kt752t|56c0f0d0]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@1b5a7cc0 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 23:08:50,058 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:08:50,100 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:08:50,164 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:08:50,164 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:08:50,165 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:08:50,174 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:08:50,184 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:08:50,186 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:08:50,191 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:08:50,191 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:08:50,319 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:08:50,321 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:08:50,324 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:08:50,336 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:08:50,369 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:08:50,380 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:08:50,467 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:08:50,467 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:08:50,468 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:08:50,468 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 23:08:50,470 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 23:08:50,471 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 23:08:50,472 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:08:50,472 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:08:50,472 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:08:50,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:08:50,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:08:50,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:08:50,476 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:08:50,476 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:08:50,476 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:08:50,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:08:50,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:08:50,478 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:08:50,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:08:50,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:08:50,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:08:50,481 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:08:50,481 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:08:50,482 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:08:50,483 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:08:50,483 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:08:50,483 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:08:50,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:08:50,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:08:50,487 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:08:50,487 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:08:50,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:50,490 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:50,490 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 23:08:50,491 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 23:08:50,492 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:08:50,492 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:08:50,493 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:08:50,495 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:08:50,507 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:08:50,508 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:08:50,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:08:50,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:08:50,512 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:08:50,512 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:08:50,513 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:08:50,513 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:08:50,516 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:08:50,516 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:08:50,517 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:08:50,517 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:08:50,521 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:08:50,521 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:08:50,522 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:08:50,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:08:50,526 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:08:50,526 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:08:50,532 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:50,532 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:50,532 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:50,535 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 23:08:50,536 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:08:50,536 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:08:50,537 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:08:50,537 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 23:08:50,538 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:08:50,538 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:08:50,541 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:08:50,541 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:08:50,542 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:08:50,543 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:08:50,545 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:08:50,545 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:08:50,548 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:08:50,550 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:08:50,550 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 23:08:50,552 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:08:50,552 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:08:50,552 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:08:50,553 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:08:50,555 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:08:50,555 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:08:50,556 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 23:08:50,556 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 23:08:50,557 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:08:50,557 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:08:50,558 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:08:50,558 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:08:50,560 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:08:50,560 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:08:50,561 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 23:08:50,561 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 23:08:50,565 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:08:50,566 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:08:50,566 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 23:08:50,570 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:08:50,570 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:08:50,575 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:08:50,575 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:08:50,576 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 23:08:50,577 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 23:08:50,578 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 23:08:50,582 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:08:50,582 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:08:50,582 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 23:08:50,583 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 23:08:50,596 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:08:50,596 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:08:50,596 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:08:50,622 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:08:51,110 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:08:51,127 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vj01bc1cdklgx|2898ac89,name=1hgel1d9j1vj01bc1cdklgx|2898ac89 registered.
2016-10-23 23:08:51,155 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vj01bc1cdklgx|2898ac89,name=1hgel1d9j1vj01bc1cdklgx|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 23:08:51,155 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vj01bc1cdklgx|2898ac89,name=1hgel1d9j1vj01bc1cdklgx|2898ac89 registered.
2016-10-23 23:08:51,166 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:08:51,193 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@8fac9d93 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5e7b714a [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vj01bc1cdklgx|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8ee6c40 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vj01bc1cdklgx|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vj01bc1cdklgx|2898ac89, numHelperThreads -> 3 ]
2016-10-23 23:08:51,221 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:08:51,221 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:08:51,222 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 23:08:51,222 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:08:51,222 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:08:51,223 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 23:08:51,223 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:08:51,225 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:08:51,225 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 23:08:51,225 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:08:51,225 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:08:51,226 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 23:08:51,226 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:08:51,226 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:08:51,227 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 23:08:51,227 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:08:51,228 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:08:51,228 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:08:51,228 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:08:51,228 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:08:51,614 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,614 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,614 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,614 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:51,614 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:51,615 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:51,615 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:08:51,615 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:08:51,615 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:08:51,615 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,617 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:08:51,617 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:08:51,617 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,617 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:08:51,617 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:08:51,617 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,624 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:08:51,625 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:08:51,625 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:08:51,649 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:08:51,649 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,650 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:51,650 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,650 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:08:51,650 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:08:51,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:51,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:08:51,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:08:51,707 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:08:51,709 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:08:51,723 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:08:51,723 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,724 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 23:08:51,725 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:51,727 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:51,758 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:08:51,759 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:08:51,759 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:08:51,760 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:08:51,760 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:08:51,761 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:08:51,763 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:08:51,764 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:08:51,765 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:08:51,766 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:08:51,768 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:08:51,768 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:08:51,769 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:08:51,770 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:08:51,800 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:08:51,866 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:08:51,890 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:08:51,898 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:08:51,903 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:08:51,923 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,926 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:08:51,928 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:08:51,929 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:08:51,931 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:08:51,936 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,936 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:08:51,936 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:08:51,936 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:08:51,936 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:08:51,938 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,938 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:08:51,938 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:08:51,938 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:08:51,938 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:08:51,939 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,939 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:08:51,939 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:08:51,939 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:08:51,940 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:08:51,940 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,940 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:08:51,940 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:08:51,941 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:08:51,941 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:08:51,941 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,941 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:08:51,943 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:08:51,943 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:08:51,943 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:08:51,944 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,944 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:08:51,944 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:08:51,945 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:08:51,945 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:08:51,945 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,945 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:08:51,946 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:08:51,946 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:08:51,946 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:08:51,946 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,948 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:08:51,948 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:08:51,948 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:08:51,948 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:08:51,948 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,949 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:08:51,949 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:08:51,949 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:08:51,949 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:08:51,949 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,950 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:08:51,950 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:08:51,950 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:08:51,950 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:08:51,951 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,951 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:08:51,951 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:08:51,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:08:51,953 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:08:51,953 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,953 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:08:51,953 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:08:51,953 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:08:51,954 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:08:51,954 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:08:51,954 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:08:51,954 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:08:51,955 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:08:51,955 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:08:51,956 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:08:51,956 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:08:51,956 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:08:51,956 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:08:51,958 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:08:51,959 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:08:51,959 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:08:51,961 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:08:52,003 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:08:52,004 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:08:52,005 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:08:52,006 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:08:52,008 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:08:52,009 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:08:52,068 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:08:52,069 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter6870911215064260932.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire7067354967787897507tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_02377389404748244681tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter6870911215064260932.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:08:52,144 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:08:52,145 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:08:52,160 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:08:52,166 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:08:52,185 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:08:52,221 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:08:52,222 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:08:52,233 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:08:52,233 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:08:52,282 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:08:52,283 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:08:52,283 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:08:52,283 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:08:52,283 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:08:52,283 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:08:52,303 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 23:08:52,305 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,306 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,307 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,307 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,307 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,307 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,321 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,326 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,328 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,328 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 23:08:52,328 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,328 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,328 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,328 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,330 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,331 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,331 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,331 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,331 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,331 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,332 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,332 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 23:08:52,332 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,332 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,333 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,333 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,333 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,333 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,333 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,335 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,336 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,336 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,337 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,337 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,337 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 23:08:52,337 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,338 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,340 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,340 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,340 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,340 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,340 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,341 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,341 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,341 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 23:08:52,341 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,341 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,342 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,342 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,342 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,342 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,342 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,343 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,343 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,343 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,343 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,343 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,345 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,345 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,345 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,346 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,346 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,346 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 23:08:52,347 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,347 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,347 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,347 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,348 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,350 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,350 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,350 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,350 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,351 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,351 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,352 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,353 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,353 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,353 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,353 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,355 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,355 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:08:52,355 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 23:08:52,356 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,356 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,356 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,356 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,357 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,358 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,358 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,358 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,358 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,360 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,360 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,361 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,362 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,362 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,363 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,363 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:08:52,363 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 23:08:52,365 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,365 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,365 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,365 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,366 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,366 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,366 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,366 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,366 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,367 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,367 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,367 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,367 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,367 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,368 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,368 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,368 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,370 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 23:08:52,370 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:08:52,370 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:08:52,371 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:08:52,371 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:08:52,371 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:08:52,371 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:08:52,372 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:08:52,372 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:08:52,372 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:08:52,372 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:08:52,373 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:08:52,373 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:08:52,373 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:08:52,373 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:08:52,375 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:08:52,375 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:08:52,376 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,396 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,397 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:08:52,441 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:52,443 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:08:52,505 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:52,506 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3c0fae6c
2016-10-23 23:08:52,506 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:52,506 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:08:52,506 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:08:52,507 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:08:52,511 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:08:52,512 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:08:52,512 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:08:52,515 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b970f7
2016-10-23 23:08:52,517 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: fc63e631-a05c-45a6-8728-d2406828a18b (<unnamed>)
2016-10-23 23:08:52,517 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:08:52,624 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:08:52,631 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:52,633 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:52,639 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 23:08:52,653 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 23:08:52,654 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 23:08:52,654 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 23:08:52,656 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 23:08:52,656 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 23:08:52,658 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 23:08:52,663 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 23:08:49 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 23:08:49 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 23:08:49 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 23:08:49 CEST 2016}
2016-10-23 23:08:52,683 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:08:52,691 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 23:08:52,715 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@24fac479 ).size(): 1
2016-10-23 23:08:52,715 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:08:52,743 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:08:52,746 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:08:52,748 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:08:52,748 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 23:08:52,748 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:52,749 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:08:52,749 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:08:52,753 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:08:53,011 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 23:08:53,061 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,061 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,078 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 23:08:53,078 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:08:53,115 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:08:53,123 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 23:08:53,123 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,160 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,193 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,195 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,197 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,197 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:08:53,211 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,211 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,212 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:08:53,213 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,223 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:08:53,223 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:08:53,223 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,243 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:08:53,244 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 23:08:53,246 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@24fac479 ).size(): 2
2016-10-23 23:08:53,246 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 23:08:53,249 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,256 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,266 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:08:53,266 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,268 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:08:53,268 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,269 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:08:53,271 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,271 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:08:53,272 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:08:53,273 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:08:53,273 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,276 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:08:53,277 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,278 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:08:53,278 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,279 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:08:53,280 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,280 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:08:53,280 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,281 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:08:53,281 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,281 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:08:53,282 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,282 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:08:53,282 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,283 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:08:53,284 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,284 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:08:53,285 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,285 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:08:53,285 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,286 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:08:53,286 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,287 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:08:53,288 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,288 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:08:53,289 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,290 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:08:53,290 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,291 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:08:53,291 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,292 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:08:53,292 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,292 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:08:53,293 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,293 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:08:53,293 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,294 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:08:53,294 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,294 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:08:53,294 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,295 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:08:53,295 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,295 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:08:53,295 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,296 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:08:53,297 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,297 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 29
2016-10-23 23:08:53,298 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,299 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 30
2016-10-23 23:08:53,299 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,301 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,302 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,302 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,303 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,303 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:08:53,303 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:08:53,304 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,304 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,304 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 23:08:53,326 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:08:53,446 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,446 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,448 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:08:53,451 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 23:08:53,451 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,451 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,452 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,452 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,455 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,457 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,458 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,459 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,459 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 23:08:53,460 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,460 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,461 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 23:08:53,461 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,461 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:08:53,461 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 23:08:53,461 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,462 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 23:08:53,462 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 23:08:53,466 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@76aec2c6 ).size(): 1
2016-10-23 23:08:53,466 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 23:08:53,469 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,470 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,472 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:08:53,473 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,475 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:08:53,475 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,476 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:08:53,476 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,477 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:08:53,477 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,478 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:08:53,480 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,480 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:08:53,481 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,481 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:08:53,482 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,482 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:08:53,483 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,485 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:08:53,485 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,486 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:08:53,487 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,487 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:08:53,487 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,488 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:08:53,488 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,490 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:08:53,491 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,491 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:08:53,492 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,493 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:08:53,493 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,494 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:08:53,494 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,495 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:08:53,496 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,496 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:08:53,497 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,498 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:08:53,499 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,499 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:08:53,499 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,500 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:08:53,500 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,500 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:08:53,500 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,500 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:08:53,501 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,501 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:08:53,501 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,501 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:08:53,502 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,502 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,502 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:08:53,503 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 23:08:53,513 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:08:53,545 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,545 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,551 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:08:53,555 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:08:53,555 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,555 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,557 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,557 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,558 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,558 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,559 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,562 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,562 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,563 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,563 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,563 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,564 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,564 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,564 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:08:53,564 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,564 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,565 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:08:53,566 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,568 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:08:53,569 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:08:53,569 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,570 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:08:53,571 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 23:08:53,572 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@79f014d4 ).size(): 1
2016-10-23 23:08:53,573 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 23:08:53,575 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 23:08:53,576 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 23:08:53,627 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 23:08:53,635 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:08:53,636 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 23:08:53,637 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,637 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,639 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:08:53,642 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 23:08:53,642 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,643 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,644 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,645 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,645 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,646 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,646 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,646 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,647 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 23:08:53,647 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,648 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,649 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 23:08:53,649 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,649 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:08:53,650 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 23:08:53,650 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,651 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 23:08:53,652 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7808fb9
2016-10-23 23:08:53,653 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4e76f2e6 ).size(): 1
2016-10-23 23:08:53,653 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 23:08:53,655 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,656 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,657 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:08:53,657 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,658 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,659 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,659 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,660 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,660 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 23:08:53,664 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:08:53,674 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 23:08:53,674 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:08:53,674 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:08:53,675 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,676 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,678 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:08:53,680 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 23:08:53,680 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,681 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,681 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,682 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,682 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,682 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,683 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,683 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,684 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,684 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 23:08:53,684 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,684 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 23:08:53,685 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,685 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,686 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 23:08:53,687 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,687 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:08:53,688 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 23:08:53,688 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,689 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 23:08:53,690 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@72805168
2016-10-23 23:08:53,693 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@b069c ).size(): 1
2016-10-23 23:08:53,693 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 23:08:53,697 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,698 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,699 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:08:53,700 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,701 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,702 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,703 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,704 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:08:53,704 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:08:53,710 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:08:53,717 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 23:08:53,718 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:08:53,725 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:08:53,726 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,726 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 23:08:53,727 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:08:53,728 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:08:53,728 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@588ffeb
2016-10-23 23:08:53,729 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:08:53,729 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:08:53,730 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7c28c1
2016-10-23 23:08:53,730 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:08:53,730 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:08:53,730 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@baf1bb3
2016-10-23 23:08:53,731 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388
2016-10-23 23:08:53,731 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,760 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:08:53,760 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:53,761 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,761 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:08:53,761 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:08:53,770 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,776 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:08:53,784 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 23:08:53,785 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,786 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,787 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,788 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,788 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,789 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,789 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,789 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,790 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,790 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,791 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,792 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,792 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,792 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,793 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,793 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 23:08:53,793 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,793 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 23:08:53,795 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,795 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,800 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 23:08:53,800 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,801 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:08:53,801 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:08:53,801 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,803 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:08:53,805 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34cf5a97
2016-10-23 23:08:53,806 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@660f21fb ).size(): 1
2016-10-23 23:08:53,807 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 23:08:53,810 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,811 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,813 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,813 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,814 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:08:53,819 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:08:53,823 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:08:53,823 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:08:53,824 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:08:53,824 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:08:53,825 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 6; target_pool_size: 8; desired target? 7
2016-10-23 23:08:53,825 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388
2016-10-23 23:08:53,826 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,836 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:08:53,836 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:53,836 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,837 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:08:53,837 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:08:53,837 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,840 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:08:53,844 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:08:53,844 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,844 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:08:53,845 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:08:53,846 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:08:53,847 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:08:53,847 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,847 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@616cdfb0.acquireResource() returning. 
2016-10-23 23:08:53,848 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@222bc388)
2016-10-23 23:08:53,848 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:08:53,848 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vj01bc1cdklgx|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:08:53,847 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:08:53,849 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:08:53,850 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,850 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,850 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,851 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:08:53,851 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:08:53,852 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:08:53,852 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:08:53,852 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:08:53,852 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:08:53,853 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:08:53,854 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:08:53,854 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,854 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:08:53,855 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:08:53,855 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:08:53,856 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:08:53,856 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4a1c0752
2016-10-23 23:08:53,858 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1307d6e7 ).size(): 1
2016-10-23 23:08:53,858 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 23:08:53,860 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:08:53,861 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,862 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,863 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:08:53,864 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 23:08:53,869 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:19:46,471 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:19:46,526 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:19:46,587 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:19:46,588 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:19:46,589 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:19:46,599 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:19:46,608 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:19:46,611 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:19:46,616 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:19:46,616 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:19:46,753 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:19:46,756 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:19:46,759 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:19:46,776 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:19:46,818 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:19:46,830 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:19:46,927 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:19:46,927 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:19:46,927 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:19:46,928 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 23:19:46,929 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 23:19:46,929 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 23:19:46,932 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:19:46,932 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:19:46,932 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:19:46,933 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:19:46,934 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:19:46,934 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:19:46,935 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:19:46,935 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:19:46,935 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:19:46,937 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:19:46,937 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:19:46,938 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:19:46,939 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:19:46,939 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:19:46,939 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:19:46,942 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:19:46,942 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:19:46,942 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:19:46,943 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:19:46,943 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:19:46,943 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:19:46,945 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:19:46,945 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:19:46,948 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:19:46,948 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:19:46,949 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:46,949 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:46,950 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 23:19:46,952 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 23:19:46,953 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:19:46,953 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:19:46,954 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:19:46,954 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:19:46,968 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:19:46,969 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:19:46,970 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:19:46,972 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:19:46,974 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:19:46,974 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:19:46,977 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:19:46,978 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:19:46,979 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:19:46,980 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:19:46,982 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:19:46,983 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:19:46,988 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:19:46,989 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:19:46,992 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:19:46,992 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:19:46,993 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:19:46,994 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:19:46,995 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:46,995 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:46,997 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:46,998 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 23:19:47,000 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:19:47,000 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:19:47,002 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:19:47,003 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 23:19:47,004 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:19:47,004 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:19:47,005 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:19:47,007 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:19:47,008 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:19:47,009 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:19:47,010 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:19:47,012 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:19:47,014 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:19:47,015 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:19:47,017 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 23:19:47,019 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:19:47,019 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:19:47,019 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:19:47,020 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:19:47,022 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:19:47,022 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:19:47,023 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 23:19:47,024 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 23:19:47,025 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:19:47,026 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:19:47,026 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:19:47,028 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:19:47,028 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:19:47,028 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:19:47,029 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 23:19:47,030 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 23:19:47,037 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:19:47,037 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:19:47,038 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 23:19:47,043 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:19:47,043 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:19:47,048 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:19:47,048 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:19:47,050 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 23:19:47,051 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 23:19:47,053 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 23:19:47,057 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:19:47,058 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:19:47,060 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 23:19:47,060 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 23:19:47,060 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 23:19:47,060 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 23:19:47,060 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 23:19:47,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 23:19:47,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 23:19:47,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 23:19:47,080 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:19:47,080 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:19:47,080 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:19:47,120 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:19:47,681 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:19:47,700 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vje3vqi5la97|2898ac89,name=1hgel1d9j1vje3vqi5la97|2898ac89 registered.
2016-10-23 23:19:47,718 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vje3vqi5la97|2898ac89,name=1hgel1d9j1vje3vqi5la97|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 23:19:47,718 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vje3vqi5la97|2898ac89,name=1hgel1d9j1vje3vqi5la97|2898ac89 registered.
2016-10-23 23:19:47,725 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:19:47,747 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@b6d6fbad [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@85a5cf64 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vje3vqi5la97|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8e52e2e6 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vje3vqi5la97|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vje3vqi5la97|2898ac89, numHelperThreads -> 3 ]
2016-10-23 23:19:47,768 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:19:47,768 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:19:47,768 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 23:19:47,770 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:19:47,770 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:19:47,770 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 23:19:47,771 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:19:47,771 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:19:47,771 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 23:19:47,771 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:19:47,771 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:19:47,772 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 23:19:47,772 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:19:47,772 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:19:47,772 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 23:19:47,773 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:19:47,773 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:19:47,775 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:19:47,775 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:19:47,775 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:48,062 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:19:48,063 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:19:48,063 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,071 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:19:48,072 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:19:48,072 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:19:48,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:48,076 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,076 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:19:48,076 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:19:48,078 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,080 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:48,080 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,080 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:19:48,080 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:19:48,092 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:19:48,131 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:19:48,135 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:19:48,147 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:19:48,148 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,150 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 23:19:48,150 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,150 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:48,180 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:19:48,181 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:19:48,181 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:19:48,182 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:19:48,182 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:19:48,183 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:19:48,183 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:19:48,185 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:19:48,186 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:19:48,187 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:19:48,187 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:19:48,188 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:19:48,188 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:19:48,190 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:19:48,220 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:19:48,288 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:19:48,313 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:19:48,320 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:19:48,323 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:19:48,345 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,347 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:19:48,350 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:19:48,351 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:19:48,353 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:19:48,357 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,358 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:19:48,358 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:19:48,358 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:19:48,358 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:19:48,358 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:19:48,361 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:19:48,362 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:19:48,363 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:19:48,363 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,363 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:19:48,363 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:19:48,363 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:19:48,365 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:19:48,365 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,366 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:19:48,366 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:19:48,366 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:19:48,366 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:19:48,367 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,367 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:19:48,367 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:19:48,367 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:19:48,368 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:19:48,368 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,368 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:19:48,370 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:19:48,370 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:19:48,370 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:19:48,370 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,371 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:19:48,371 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:19:48,371 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:19:48,371 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:19:48,371 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,372 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:19:48,372 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:19:48,372 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:19:48,373 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:19:48,373 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,373 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:19:48,375 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:19:48,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:19:48,375 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:19:48,375 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:19:48,376 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:19:48,376 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:19:48,376 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:19:48,377 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:19:48,378 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:19:48,378 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:19:48,378 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:19:48,378 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:19:48,378 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:19:48,380 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:19:48,381 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:19:48,382 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:19:48,420 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:19:48,421 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:19:48,422 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:19:48,422 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:19:48,422 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:19:48,422 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:19:48,422 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:19:48,423 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:19:48,423 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:19:48,423 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:19:48,423 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:19:48,423 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:19:48,425 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:19:48,425 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:19:48,425 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:19:48,425 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:19:48,425 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:19:48,426 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 23:19:48,426 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:19:48,426 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:19:48,426 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:19:48,426 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
