2016-10-23 20:27:40,474 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@3e44f2a5
2016-10-23 20:27:40,474 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:27:40,475 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:27:40,476 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@3e44f2a5
2016-10-23 20:27:40,476 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:27:40,477 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:27:40,478 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:27:40,496 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:27:40,497 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:27:40,498 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:27:40,498 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:27:40,513 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:27:40,513 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:27:40,514 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:27:40,550 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:27:40,558 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@306851c7: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@41eb94bc
2016-10-23 20:27:40,625 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@69f39297 ).size(): 1
2016-10-23 20:27:40,625 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:27:40,737 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:27:40,742 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:40,768 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:40,773 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:40,774 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:27:41,146 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:27:41,297 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 20:27:41,297 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:27:41,300 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:27:41,301 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:27:41,301 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1080b026 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@708a8fe8)
2016-10-23 20:27:41,303 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:27:41,306 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 20:27:41,307 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:27:41,307 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:27:41,311 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:27:41,311 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:27:41,312 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:27:41,312 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@7d9f158f
2016-10-23 20:27:41,313 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:27:41,314 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:27:41,314 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@3e44f2a5
2016-10-23 20:27:41,314 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:27:41,315 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:27:41,315 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@3e44f2a5
2016-10-23 20:27:41,316 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:27:41,316 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:27:41,316 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@7d9f158f
2016-10-23 20:27:41,317 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 20:27:41,317 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:27:41,321 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 20:27:41,322 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:27:41,322 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:27:41,324 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 20:27:41,325 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:27:41,326 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:27:41,326 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:27:41,327 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:27:41,331 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:27:41,331 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@306851c7: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@42505474
2016-10-23 20:27:41,340 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@3e732241 ).size(): 1
2016-10-23 20:27:41,340 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:27:41,343 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:27:41,344 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:41,345 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:41,346 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:27:41,347 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:27:41,355 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:27:48,709 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:27:58,710 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:28:08,711 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:28:18,711 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:28:28,711 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:28:38,713 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vd8pxn96lyhn|abf688e]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@69024531 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:29:41,079 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 20:29:41,085 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:29:41,088 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:29:41,175 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:29:41,220 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:29:41,290 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:29:41,290 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:29:41,291 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:29:41,300 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:29:41,310 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:29:41,312 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:29:41,317 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:29:41,319 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:29:41,451 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:29:41,454 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:29:41,456 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:29:41,470 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:29:41,500 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:29:41,511 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:29:41,610 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:29:41,610 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:29:41,610 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:29:41,612 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351d0846
2016-10-23 20:29:41,614 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dd92fe2
2016-10-23 20:29:41,615 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@1b68b9a4
2016-10-23 20:29:41,617 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:29:41,617 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:29:41,619 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:29:41,620 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:29:41,620 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:29:41,621 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:29:41,624 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:29:41,624 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:29:41,624 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:29:41,626 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:29:41,626 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:29:41,627 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:29:41,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:29:41,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:29:41,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:29:41,632 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:29:41,634 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:29:41,634 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:29:41,636 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:29:41,636 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:29:41,637 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:29:41,640 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:29:41,640 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:29:41,642 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:29:41,642 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:29:41,644 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:29:41,644 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:29:41,646 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40e6dfe1
2016-10-23 20:29:41,647 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@123f1134
2016-10-23 20:29:41,649 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:29:41,649 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:29:41,650 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:29:41,650 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:29:41,669 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:29:41,669 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:29:41,671 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:29:41,671 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:29:41,673 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:29:41,673 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:29:41,675 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:29:41,676 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:29:41,677 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:29:41,677 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:29:41,678 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:29:41,678 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:29:41,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:29:41,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:29:41,685 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:29:41,685 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:29:41,686 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:29:41,686 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:29:41,687 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:41,688 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:41,688 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:41,690 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b44655e
2016-10-23 20:29:41,691 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:29:41,691 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:29:41,692 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:29:41,693 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27c86f2d
2016-10-23 20:29:41,695 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:29:41,695 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:29:41,696 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:29:41,696 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:29:41,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:29:41,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:29:41,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:29:41,698 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:29:41,700 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:29:41,700 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:29:41,700 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2fd6b6c7
2016-10-23 20:29:41,701 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:29:41,702 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:29:41,702 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:29:41,703 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:29:41,703 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:29:41,703 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:29:41,705 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@3b07a0d6
2016-10-23 20:29:41,706 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@4c1d9d4b
2016-10-23 20:29:41,707 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:29:41,708 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:29:41,708 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:29:41,710 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:29:41,710 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:29:41,710 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:29:41,711 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@124c278f
2016-10-23 20:29:41,711 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@6973bf95
2016-10-23 20:29:41,716 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:29:41,716 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:29:41,716 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5276e6b0
2016-10-23 20:29:41,721 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:29:41,721 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:29:41,723 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:29:41,725 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:29:41,725 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1534f01b
2016-10-23 20:29:41,725 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4386f16
2016-10-23 20:29:41,726 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@460d0a57
2016-10-23 20:29:41,730 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:29:41,730 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:29:41,730 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bef2d72
2016-10-23 20:29:41,731 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69b2283a
2016-10-23 20:29:41,731 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22a637e7
2016-10-23 20:29:41,731 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fe7aac8
2016-10-23 20:29:41,731 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d119efb
2016-10-23 20:29:41,731 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@659a969b
2016-10-23 20:29:41,732 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76908cc0
2016-10-23 20:29:41,732 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2473d930
2016-10-23 20:29:41,745 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:29:41,745 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:29:41,745 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:29:41,767 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:29:42,265 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:29:42,293 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdbdc9omq29|3eb738bb,name=1hgel1d9j1vdbdc9omq29|3eb738bb registered.
2016-10-23 20:29:42,342 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdbdc9omq29|3eb738bb,name=1hgel1d9j1vdbdc9omq29|3eb738bb unregistered, in order to be reregistered after update.
2016-10-23 20:29:42,342 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdbdc9omq29|3eb738bb,name=1hgel1d9j1vdbdc9omq29|3eb738bb registered.
2016-10-23 20:29:42,355 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:29:42,392 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@ebfb9b55 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5613fcb3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdbdc9omq29|5542c4ed, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@aa82617c [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdbdc9omq29|10e31a9a, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdbdc9omq29|3eb738bb, numHelperThreads -> 3 ]
2016-10-23 20:29:42,422 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:29:42,423 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:29:42,423 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@75db5df9
2016-10-23 20:29:42,423 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:29:42,424 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:29:42,424 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@707194ba
2016-10-23 20:29:42,424 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:29:42,425 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:29:42,425 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1190200a
2016-10-23 20:29:42,425 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:29:42,426 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:29:42,426 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a2f6f80
2016-10-23 20:29:42,426 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:29:42,426 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:29:42,427 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@45b4c3a9
2016-10-23 20:29:42,427 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:29:42,428 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:29:42,428 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:29:42,429 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:29:42,429 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7dce4714.acquireResource() returning. 
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7dce4714.acquireResource() returning. 
2016-10-23 20:29:42,851 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7dce4714.acquireResource() returning. 
2016-10-23 20:29:42,852 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:29:42,852 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:29:42,852 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:29:42,852 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,852 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:29:42,854 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:29:42,854 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,854 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:29:42,854 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:29:42,856 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,866 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,866 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7dce4714.acquireResource() returning. 
2016-10-23 20:29:42,866 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,866 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:29:42,867 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:29:42,867 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:29:42,867 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:29:42,869 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:29:42,869 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,869 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7dce4714.acquireResource() returning. 
2016-10-23 20:29:42,869 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,869 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:29:42,870 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:29:42,892 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:29:42,956 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:29:42,960 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:29:42,975 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:29:42,976 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:42,977 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@29d89d5d
2016-10-23 20:29:42,979 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:42,984 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:43,020 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:29:43,020 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:29:43,021 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:29:43,021 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:29:43,022 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:29:43,024 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:29:43,025 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:29:43,026 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:29:43,029 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:29:43,029 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:29:43,030 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:29:43,031 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:29:43,031 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:29:43,032 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:29:43,071 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:29:43,140 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:29:43,166 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:29:43,172 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:29:43,177 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:29:43,200 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,202 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:29:43,205 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:29:43,206 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:29:43,209 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:29:43,212 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,214 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:29:43,214 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:29:43,214 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:29:43,214 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:29:43,214 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:29:43,215 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:29:43,216 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:29:43,217 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:29:43,219 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,219 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:29:43,219 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:29:43,219 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:29:43,220 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:29:43,221 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,221 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:29:43,221 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:29:43,221 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:29:43,222 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:29:43,224 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,224 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:29:43,224 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:29:43,224 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:29:43,225 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:29:43,225 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,225 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:29:43,226 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:29:43,226 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:29:43,226 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:29:43,226 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,227 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:29:43,227 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:29:43,227 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:29:43,227 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:29:43,227 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:29:43,229 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:29:43,229 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:29:43,229 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:29:43,229 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:29:43,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:29:43,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:29:43,234 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:29:43,271 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:29:43,272 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:29:43,272 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:29:43,272 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:29:43,274 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:29:43,275 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:29:43,276 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:29:43,276 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:29:43,276 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7ef27d7f
2016-10-23 20:29:43,276 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:29:43,277 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:29:43,279 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:29:43,279 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:29:43,279 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:29:43,337 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:29:43,337 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61826 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.invoice.resources.ServiceTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74589991, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:29:43,396 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:29:43,397 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:29:43,415 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:29:43,418 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:29:43,438 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:29:43,475 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:29:43,475 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:29:43,490 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:29:43,491 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:29:43,545 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:29:43,545 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:29:43,545 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:29:43,545 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:29:43,546 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:29:43,546 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:29:43,583 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6941827a]
2016-10-23 20:29:43,586 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,586 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,586 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,587 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,587 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,587 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,587 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,587 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,588 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,588 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,588 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,588 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,588 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,590 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,610 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,615 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,618 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,619 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75459c75]
2016-10-23 20:29:43,619 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,619 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,620 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,620 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,620 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,620 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,621 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,621 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,621 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,621 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,622 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,622 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,622 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,623 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,623 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,624 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,624 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efc20d]
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,625 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,627 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,628 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,628 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,628 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,628 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,629 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ab1c47]
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,629 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,630 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,632 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,632 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,632 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,632 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bcf3c1]
2016-10-23 20:29:43,632 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,632 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,633 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,634 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,635 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,635 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,637 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,637 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15cafec7]
2016-10-23 20:29:43,637 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,637 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,637 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,637 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,638 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,638 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,638 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,638 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,638 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,639 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,639 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,639 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,639 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,639 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,640 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,640 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,640 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,640 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb191ca]
2016-10-23 20:29:43,640 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,640 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,642 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,643 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,643 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,643 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,643 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,643 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,643 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,644 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,645 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,647 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,647 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,647 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79145d5a]
2016-10-23 20:29:43,648 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,648 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,648 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,648 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,648 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,649 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,649 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,649 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,649 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,649 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,650 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,650 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,650 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,650 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,652 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,652 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,652 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:29:43,653 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
2016-10-23 20:29:43,653 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,653 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,653 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,654 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,655 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,655 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,655 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,655 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,655 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,657 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,657 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,658 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,658 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338494fa]
2016-10-23 20:29:43,658 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:29:43,658 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:29:43,658 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:29:43,659 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:29:43,659 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:29:43,659 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:29:43,659 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:29:43,659 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:29:43,660 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:29:43,660 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:29:43,660 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:29:43,660 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:29:43,660 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:29:43,662 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:29:43,662 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:29:43,662 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:29:43,663 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,685 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,687 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:29:43,745 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:43,748 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@458342d3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:29:43,843 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:43,844 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@165b2f7f
2016-10-23 20:29:43,844 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:43,844 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdbdc9omq29|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:29:43,844 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:29:43,845 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:29:43,849 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:29:43,850 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:29:43,852 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:29:43,853 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64df9a61
2016-10-23 20:29:43,855 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 90bf8ccb-ca33-4832-b8c9-a28186c03915 (<unnamed>)
2016-10-23 20:29:43,855 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:29:43,950 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:29:43,959 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:29:43,960 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:43,982 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@403132fc
2016-10-23 20:29:43,983 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:29:44,020 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:29:44,032 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:29:44,032 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,064 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:29:44,090 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:29:44,093 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:29:44,098 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,100 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:29:44,102 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:29:44,105 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,107 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:44,107 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:29:44,107 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,108 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:44,108 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:29:44,108 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:29:44,109 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:29:44,122 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:29:44,122 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:29:44,123 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:29:44,124 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,137 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:29:44,137 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:29:44,137 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,162 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:29:44,165 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@641856
2016-10-23 20:29:44,184 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4164038e ).size(): 1
2016-10-23 20:29:44,184 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:29:44,194 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:29:44,196 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,219 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,224 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,225 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:29:44,457 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:29:44,531 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 20:29:44,531 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:29:44,534 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:29:44,534 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:29:44,534 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@f7ce820)
2016-10-23 20:29:44,535 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:29:44,537 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 20:29:44,537 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,539 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:29:44,539 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:29:44,540 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:29:44,540 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,541 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:29:44,541 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:29:44,541 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,542 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:44,542 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:29:44,542 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,542 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:29:44,542 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:29:44,544 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:29:44,544 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:29:44,544 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 20:29:44,544 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:29:44,544 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 20:29:44,545 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:29:44,545 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:29:44,546 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 20:29:44,546 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,546 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:29:44,547 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:29:44,547 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:29:44,549 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:29:44,549 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@33a630fa
2016-10-23 20:29:44,550 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@13012bea ).size(): 1
2016-10-23 20:29:44,550 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:29:44,551 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:29:44,552 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,554 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,554 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:29:44,555 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:29:44,559 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:31:23,566 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 20:31:23,575 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:31:23,578 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:31:23,660 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:31:23,705 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:31:23,771 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:31:23,771 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:31:23,772 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:31:23,778 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:31:23,788 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:31:23,791 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:31:23,796 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:31:23,796 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:31:23,935 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:31:23,936 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:31:23,938 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:31:23,951 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:31:23,983 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:31:23,996 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:31:24,087 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:31:24,088 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:31:24,088 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:31:24,090 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351d0846
2016-10-23 20:31:24,092 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dd92fe2
2016-10-23 20:31:24,093 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@1b68b9a4
2016-10-23 20:31:24,095 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:31:24,096 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:31:24,096 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:31:24,098 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:31:24,098 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:31:24,098 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:31:24,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:31:24,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:31:24,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:31:24,103 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:31:24,103 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:31:24,103 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:31:24,106 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:31:24,106 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:31:24,106 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:31:24,108 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:31:24,110 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:31:24,110 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:31:24,112 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:31:24,112 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:31:24,112 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:31:24,116 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:31:24,116 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:31:24,117 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:31:24,118 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:31:24,120 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:31:24,120 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:31:24,121 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40e6dfe1
2016-10-23 20:31:24,122 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@123f1134
2016-10-23 20:31:24,123 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:31:24,123 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:31:24,125 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:31:24,126 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:31:24,140 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:31:24,140 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:31:24,142 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:31:24,142 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:31:24,145 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:31:24,145 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:31:24,147 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:31:24,147 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:31:24,148 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:31:24,148 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:31:24,150 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:31:24,151 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:31:24,153 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:31:24,155 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:31:24,156 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:31:24,156 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:31:24,157 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:31:24,157 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:31:24,158 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:24,158 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:24,160 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:24,162 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b44655e
2016-10-23 20:31:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:31:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:31:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:31:24,165 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27c86f2d
2016-10-23 20:31:24,166 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:31:24,166 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:31:24,167 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:31:24,167 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:31:24,168 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:31:24,168 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:31:24,170 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:31:24,170 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:31:24,171 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:31:24,171 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:31:24,172 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2fd6b6c7
2016-10-23 20:31:24,173 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:31:24,173 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:31:24,173 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:31:24,175 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:31:24,175 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:31:24,175 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:31:24,177 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@3b07a0d6
2016-10-23 20:31:24,177 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@4c1d9d4b
2016-10-23 20:31:24,178 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:31:24,180 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:31:24,180 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:31:24,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:31:24,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:31:24,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:31:24,182 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@124c278f
2016-10-23 20:31:24,182 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@6973bf95
2016-10-23 20:31:24,187 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:31:24,187 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:31:24,187 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5276e6b0
2016-10-23 20:31:24,192 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:31:24,192 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:31:24,196 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:31:24,196 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:31:24,196 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1534f01b
2016-10-23 20:31:24,197 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4386f16
2016-10-23 20:31:24,198 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@460d0a57
2016-10-23 20:31:24,201 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:31:24,201 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bef2d72
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69b2283a
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22a637e7
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fe7aac8
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d119efb
2016-10-23 20:31:24,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@659a969b
2016-10-23 20:31:24,203 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76908cc0
2016-10-23 20:31:24,203 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2473d930
2016-10-23 20:31:24,216 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:31:24,217 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:31:24,217 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:31:24,240 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:31:24,685 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:31:24,705 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vddker1959wdy|3eb738bb,name=1hgel1d9j1vddker1959wdy|3eb738bb registered.
2016-10-23 20:31:24,728 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vddker1959wdy|3eb738bb,name=1hgel1d9j1vddker1959wdy|3eb738bb unregistered, in order to be reregistered after update.
2016-10-23 20:31:24,730 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vddker1959wdy|3eb738bb,name=1hgel1d9j1vddker1959wdy|3eb738bb registered.
2016-10-23 20:31:24,740 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:31:24,761 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@75039d3f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@df1bfe9d [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vddker1959wdy|5542c4ed, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@338a6366 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vddker1959wdy|10e31a9a, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vddker1959wdy|3eb738bb, numHelperThreads -> 3 ]
2016-10-23 20:31:24,778 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:31:24,780 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:31:24,780 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@75db5df9
2016-10-23 20:31:24,780 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:31:24,780 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:31:24,780 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@707194ba
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1190200a
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a2f6f80
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:31:24,781 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:31:24,782 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@45b4c3a9
2016-10-23 20:31:24,782 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:31:24,782 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:31:24,782 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:31:24,783 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:31:24,783 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:31:25,055 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6553f173.acquireResource() returning. 
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6553f173.acquireResource() returning. 
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6553f173.acquireResource() returning. 
2016-10-23 20:31:25,056 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:31:25,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:31:25,058 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,067 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:31:25,068 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:31:25,068 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:31:25,068 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,070 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6553f173.acquireResource() returning. 
2016-10-23 20:31:25,070 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,070 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:31:25,070 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:31:25,073 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,073 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6553f173.acquireResource() returning. 
2016-10-23 20:31:25,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:31:25,075 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:31:25,087 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:31:25,128 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:31:25,131 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:31:25,145 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:31:25,146 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,147 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@29d89d5d
2016-10-23 20:31:25,148 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,148 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,176 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:31:25,176 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:31:25,177 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:31:25,177 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:31:25,178 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:31:25,178 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:31:25,180 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:31:25,181 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:31:25,182 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:31:25,183 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:31:25,183 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:31:25,185 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:31:25,186 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:31:25,187 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:31:25,218 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:31:25,283 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:31:25,307 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:31:25,315 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:31:25,320 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:31:25,342 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,345 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:31:25,347 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:31:25,348 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:31:25,352 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:31:25,356 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,356 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:31:25,356 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:31:25,357 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:31:25,357 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:31:25,357 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,357 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:31:25,357 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:31:25,358 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:31:25,360 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,361 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:31:25,362 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:31:25,363 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:31:25,365 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,365 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:31:25,365 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:31:25,365 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:31:25,365 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:31:25,366 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,366 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:31:25,366 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:31:25,366 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:31:25,367 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:31:25,367 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,367 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:31:25,368 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:31:25,368 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:31:25,368 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:31:25,368 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,370 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:31:25,370 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:31:25,370 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:31:25,370 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:31:25,370 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:31:25,371 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:31:25,371 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:31:25,371 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:31:25,371 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:31:25,373 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:31:25,375 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:31:25,377 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:31:25,413 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:31:25,415 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:31:25,415 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:31:25,415 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:31:25,415 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:31:25,416 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:31:25,417 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7ef27d7f
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:31:25,418 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:31:25,420 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:31:25,420 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:31:25,420 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:31:25,420 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:31:25,420 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:31:25,480 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:31:25,480 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61859 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.invoice.resources.ServiceTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74589991, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:31:25,536 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:31:25,536 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:31:25,568 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:31:25,577 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:31:25,596 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:31:25,643 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:31:25,645 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:31:25,665 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:31:25,666 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:31:25,726 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:31:25,727 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:31:25,727 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:31:25,727 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:31:25,727 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:31:25,727 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:31:25,748 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6941827a]
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,751 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,752 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,767 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,771 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,773 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,773 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75459c75]
2016-10-23 20:31:25,773 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,773 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,773 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,775 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,776 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,776 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,776 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,776 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,776 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,777 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efc20d]
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,777 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,778 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,780 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,780 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,780 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,780 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ab1c47]
2016-10-23 20:31:25,780 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,781 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,782 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,782 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bcf3c1]
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,783 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,785 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,786 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15cafec7]
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,787 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,788 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,788 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,790 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb191ca]
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,790 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,791 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,792 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,792 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,792 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:31:25,792 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
2016-10-23 20:31:25,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,795 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,795 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,795 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,795 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,796 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,796 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79145d5a]
2016-10-23 20:31:25,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,800 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,800 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,800 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,801 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,801 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:31:25,801 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,803 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,805 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,805 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,805 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,805 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338494fa]
2016-10-23 20:31:25,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:31:25,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:31:25,806 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:31:25,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:31:25,807 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:31:25,807 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:31:25,807 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:31:25,807 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,826 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,826 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:31:25,866 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,867 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@458342d3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:31:25,923 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,923 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@71984c3
2016-10-23 20:31:25,923 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:25,923 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vddker1959wdy|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:31:25,923 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:31:25,925 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:31:25,927 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:31:25,928 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:31:25,930 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:31:25,931 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3ce3db41
2016-10-23 20:31:25,932 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 63eb7025-ef71-4402-ab04-1b79de5bba2d (<unnamed>)
2016-10-23 20:31:25,933 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:31:26,003 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:31:26,011 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:31:26,011 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:26,030 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@403132fc
2016-10-23 20:31:26,031 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:31:26,062 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:31:26,072 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:31:26,073 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,106 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:31:26,133 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:31:26,135 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:31:26,140 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,142 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:31:26,143 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:31:26,148 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,148 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:26,148 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:31:26,150 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,150 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:26,151 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:31:26,151 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:31:26,151 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:31:26,163 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:31:26,163 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:31:26,165 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:31:26,165 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,175 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:31:26,176 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:31:26,176 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,200 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:31:26,205 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@641856
2016-10-23 20:31:26,226 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@66e8bed4 ).size(): 1
2016-10-23 20:31:26,226 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:31:26,236 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:31:26,239 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,263 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,267 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,268 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:31:26,567 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:31:26,700 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 20:31:26,700 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:31:26,703 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:31:26,703 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:31:26,704 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@76a3f439)
2016-10-23 20:31:26,705 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:31:26,708 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 20:31:26,708 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,709 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:31:26,710 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:31:26,711 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:31:26,711 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,712 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:31:26,712 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:31:26,713 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,714 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:26,714 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:31:26,715 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,715 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:31:26,716 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:31:26,716 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:31:26,717 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:31:26,717 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 20:31:26,717 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:31:26,718 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 20:31:26,718 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:31:26,719 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:31:26,721 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 20:31:26,722 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,722 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:31:26,723 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:31:26,723 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:31:26,724 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:31:26,725 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@33a630fa
2016-10-23 20:31:26,726 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7bdf0729 ).size(): 1
2016-10-23 20:31:26,727 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:31:26,729 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:31:26,729 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,731 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,731 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:31:26,732 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:31:26,736 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:32:35,138 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:32:35,194 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:32:35,283 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:32:35,283 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:32:35,284 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:32:35,294 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:32:35,307 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:32:35,311 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:32:35,318 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:32:35,318 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:32:35,487 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:32:35,489 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:32:35,492 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:32:35,507 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:32:35,551 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:32:35,568 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:32:35,673 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:32:35,674 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:32:35,674 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:32:35,677 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51931956
2016-10-23 20:32:35,678 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@6279cee3
2016-10-23 20:32:35,679 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@57175e74
2016-10-23 20:32:35,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:32:35,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:32:35,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:32:35,684 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:32:35,684 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:32:35,685 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:32:35,687 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:32:35,688 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:32:35,688 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:32:35,689 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:32:35,690 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:32:35,690 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:32:35,693 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:32:35,693 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:32:35,694 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:32:35,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:32:35,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:32:35,697 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:32:35,699 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:32:35,700 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:32:35,700 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:32:35,704 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b083826
2016-10-23 20:32:35,704 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b083826
2016-10-23 20:32:35,707 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d68ef40
2016-10-23 20:32:35,707 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d68ef40
2016-10-23 20:32:35,708 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@2b546384
2016-10-23 20:32:35,709 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@2b546384
2016-10-23 20:32:35,710 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55ca8de8
2016-10-23 20:32:35,712 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ed0fbae
2016-10-23 20:32:35,713 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@548a102f
2016-10-23 20:32:35,713 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@548a102f
2016-10-23 20:32:35,714 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@1d548a08
2016-10-23 20:32:35,715 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d548a08
2016-10-23 20:32:35,729 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@475e586c
2016-10-23 20:32:35,730 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@475e586c
2016-10-23 20:32:35,732 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b2cf7ab
2016-10-23 20:32:35,732 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b2cf7ab
2016-10-23 20:32:35,733 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@13acb0d1
2016-10-23 20:32:35,734 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@13acb0d1
2016-10-23 20:32:35,735 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15761df8
2016-10-23 20:32:35,735 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15761df8
2016-10-23 20:32:35,737 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3745e5c6
2016-10-23 20:32:35,737 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3745e5c6
2016-10-23 20:32:35,738 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3bd40a57
2016-10-23 20:32:35,739 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3bd40a57
2016-10-23 20:32:35,743 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff95560
2016-10-23 20:32:35,743 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff95560
2016-10-23 20:32:35,744 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@78dd667e
2016-10-23 20:32:35,744 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@78dd667e
2016-10-23 20:32:35,745 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@27c86f2d
2016-10-23 20:32:35,747 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27c86f2d
2016-10-23 20:32:35,747 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:32:35,748 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:32:35,748 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:32:35,749 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a955565
2016-10-23 20:32:35,750 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:32:35,750 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:32:35,750 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:32:35,752 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23986957
2016-10-23 20:32:35,753 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@60704c
2016-10-23 20:32:35,753 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60704c
2016-10-23 20:32:35,754 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@7f1302d6
2016-10-23 20:32:35,754 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f1302d6
2016-10-23 20:32:35,755 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@184cf7cf
2016-10-23 20:32:35,755 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@184cf7cf
2016-10-23 20:32:35,757 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@38c5cc4c
2016-10-23 20:32:35,757 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38c5cc4c
2016-10-23 20:32:35,759 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16e7dcfd
2016-10-23 20:32:35,759 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16e7dcfd
2016-10-23 20:32:35,759 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11a9e7c8
2016-10-23 20:32:35,760 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:32:35,760 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:32:35,762 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:32:35,763 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:32:35,763 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:32:35,763 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:32:35,764 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@2f177a4b
2016-10-23 20:32:35,765 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@15b204a1
2016-10-23 20:32:35,767 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:32:35,767 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:32:35,767 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:32:35,768 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:32:35,769 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:32:35,769 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:32:35,770 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@25d250c6
2016-10-23 20:32:35,772 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@318ba8c8
2016-10-23 20:32:35,775 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@48fa0f47
2016-10-23 20:32:35,777 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48fa0f47
2016-10-23 20:32:35,777 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d2a209c
2016-10-23 20:32:35,780 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@7c0c77c7
2016-10-23 20:32:35,780 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c0c77c7
2016-10-23 20:32:35,784 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@3aefe5e5
2016-10-23 20:32:35,784 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3aefe5e5
2016-10-23 20:32:35,784 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f7c2f4f
2016-10-23 20:32:35,785 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36c88a32
2016-10-23 20:32:35,787 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@78b66d36
2016-10-23 20:32:35,790 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@6f96c77
2016-10-23 20:32:35,790 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f96c77
2016-10-23 20:32:35,790 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49d904ec
2016-10-23 20:32:35,790 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48e4374
2016-10-23 20:32:35,792 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d680b5a
2016-10-23 20:32:35,792 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b5d6a01
2016-10-23 20:32:35,792 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a22f9e2
2016-10-23 20:32:35,792 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c419631
2016-10-23 20:32:35,793 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@418e7838
2016-10-23 20:32:35,793 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61230f6a
2016-10-23 20:32:35,808 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:32:35,808 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:32:35,808 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:32:35,830 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:32:36,289 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:32:36,315 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdf3ndx402hm|15de0b3c,name=1hgel1d9j1vdf3ndx402hm|15de0b3c registered.
2016-10-23 20:32:36,345 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdf3ndx402hm|15de0b3c,name=1hgel1d9j1vdf3ndx402hm|15de0b3c unregistered, in order to be reregistered after update.
2016-10-23 20:32:36,345 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdf3ndx402hm|15de0b3c,name=1hgel1d9j1vdf3ndx402hm|15de0b3c registered.
2016-10-23 20:32:36,356 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:32:36,377 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@1c593da6 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@d4c41ea1 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdf3ndx402hm|217ed35e, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@3b22e035 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdf3ndx402hm|9597028, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdf3ndx402hm|15de0b3c, numHelperThreads -> 3 ]
2016-10-23 20:32:36,395 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:32:36,395 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:32:36,395 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@26b3fd41
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7494f96a
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:32:36,396 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@561b6512
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@2e377400
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:32:36,397 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1757cd72
2016-10-23 20:32:36,399 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@445b295b config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:32:36,399 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:32:36,399 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:32:36,399 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:32:36,399 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:32:36,636 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,636 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,636 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@5a6bb0ba.acquireResource() returning. 
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@5a6bb0ba.acquireResource() returning. 
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@5a6bb0ba.acquireResource() returning. 
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:32:36,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,639 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:32:36,639 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:32:36,639 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,645 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:32:36,645 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:32:36,645 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:32:36,660 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,661 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@5a6bb0ba.acquireResource() returning. 
2016-10-23 20:32:36,661 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,661 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:32:36,661 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:32:36,667 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:32:36,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@5a6bb0ba.acquireResource() returning. 
2016-10-23 20:32:36,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:32:36,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:32:36,710 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:32:36,712 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:32:36,726 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:32:36,726 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,729 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@24fcf36f
2016-10-23 20:32:36,729 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:36,729 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:36,756 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:32:36,757 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:32:36,757 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:32:36,757 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:32:36,759 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:32:36,760 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:32:36,760 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:32:36,761 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:32:36,762 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:32:36,762 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:32:36,764 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:32:36,764 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:32:36,765 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:32:36,766 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:32:36,801 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:32:36,867 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:32:36,891 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:32:36,899 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:32:36,902 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:32:36,924 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,926 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:32:36,929 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:32:36,930 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:32:36,932 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:32:36,936 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,936 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:32:36,936 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:32:36,936 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:32:36,936 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:32:36,937 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,939 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:32:36,940 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:32:36,941 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:32:36,942 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,942 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:32:36,942 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:32:36,942 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:32:36,942 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:32:36,944 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,944 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:32:36,944 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:32:36,944 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:32:36,944 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:32:36,945 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,946 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:32:36,947 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:32:36,949 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:32:36,951 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:32:36,952 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:32:36,954 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:32:36,999 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:32:37,000 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:32:37,000 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:32:37,001 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:32:37,002 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:32:37,002 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:32:37,002 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:32:37,002 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:32:37,004 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:32:37,004 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:32:37,004 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:32:37,004 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:32:37,005 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:32:37,005 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:32:37,005 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:32:37,006 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:32:37,007 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:32:37,007 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4066c471
2016-10-23 20:32:37,009 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:32:37,009 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:32:37,009 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:32:37,009 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:32:37,009 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:32:37,010 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:32:37,010 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:32:37,010 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:32:37,011 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:32:37,011 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:32:37,011 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:32:37,011 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:32:37,011 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:32:37,109 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:32:37,110 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61874 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.dBManager.DBOperationTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@21337f7b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:32:37,200 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:32:37,200 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:32:37,223 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:32:37,231 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:32:37,261 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:32:37,332 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:32:37,332 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:32:37,355 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:32:37,356 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:32:37,431 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:32:37,431 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:32:37,431 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:32:37,432 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:32:37,432 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:32:37,432 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:32:37,466 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7288a3]
2016-10-23 20:32:37,470 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,470 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,470 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,471 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,471 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,471 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,471 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,471 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,472 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,472 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,472 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,472 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,473 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,473 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,492 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,500 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,503 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,503 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
2016-10-23 20:32:37,503 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,503 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,505 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,505 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,505 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,505 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,505 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,506 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,506 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,506 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,506 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,506 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,507 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,507 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,508 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,508 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,510 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,511 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338494fa]
2016-10-23 20:32:37,511 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,515 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,515 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,515 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,516 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,516 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,516 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,517 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,517 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,518 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,518 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,520 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,520 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c83d8]
2016-10-23 20:32:37,520 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,521 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,521 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,521 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,521 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,523 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,525 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,525 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,526 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,526 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af3a0f]
2016-10-23 20:32:37,526 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,530 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,531 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,531 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,532 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,532 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10993713]
2016-10-23 20:32:37,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,535 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,535 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,536 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,536 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,536 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,536 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,537 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,537 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,537 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,537 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,538 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,540 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,540 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,540 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24b6b8f6]
2016-10-23 20:32:37,541 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,542 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,542 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,542 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,542 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,542 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,545 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,545 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,545 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,545 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,546 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,546 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:32:37,547 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb7bd00]
2016-10-23 20:32:37,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,550 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,550 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,550 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,551 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,551 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,552 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,552 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee37ca3]
2016-10-23 20:32:37,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,556 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,556 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,556 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,556 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,557 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,558 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,558 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:32:37,558 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53812a9b]
2016-10-23 20:32:37,560 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,560 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,560 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,560 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,560 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,561 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,561 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,561 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,561 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,561 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,562 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,562 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,562 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,562 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,563 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,563 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,565 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,565 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e350f1]
2016-10-23 20:32:37,565 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:32:37,565 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:32:37,566 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:32:37,567 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:32:37,567 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:32:37,567 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:32:37,567 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:32:37,567 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:32:37,568 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:32:37,568 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:32:37,570 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:32:37,570 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,595 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,595 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:32:37,657 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:37,660 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7b64240d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:32:37,720 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:37,720 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@58e6d4b8
2016-10-23 20:32:37,720 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:37,721 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:32:37,721 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:32:37,721 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:32:37,725 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:32:37,727 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:32:37,727 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:32:37,730 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73c60324
2016-10-23 20:32:37,732 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: bbac1f4b-a91f-4a63-92c6-a0963ef808f1 (<unnamed>)
2016-10-23 20:32:37,733 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:32:37,826 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:32:37,833 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:32:37,833 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:37,842 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 20:32:37,863 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 20:32:37,865 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 20:32:37,866 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 20:32:37,867 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 20:32:37,868 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 20:32:37,870 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 20:32:37,875 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 20:32:34 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 20:32:34 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 20:32:34 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 20:32:34 CEST 2016}
2016-10-23 20:32:37,902 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:32:37,906 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@30ed9c6c
2016-10-23 20:32:37,923 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4ea5fcc ).size(): 1
2016-10-23 20:32:37,923 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:32:37,949 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:32:37,953 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:32:37,954 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:32:37,954 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@21ec5d87
2016-10-23 20:32:37,954 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:37,954 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdf3ndx402hm|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:32:37,956 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:32:37,958 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:32:38,203 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 20:32:38,241 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:32:38,241 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:38,261 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@777c9dc9
2016-10-23 20:32:38,261 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:32:38,299 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:32:38,308 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 20:32:38,309 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,334 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:32:38,359 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:32:38,360 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:32:38,364 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:32:38,364 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 20:32:38,379 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:32:38,380 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:32:38,380 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 20:32:38,381 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,393 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:32:38,393 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 20:32:38,394 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,414 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 20:32:38,414 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@62315f22
2016-10-23 20:32:38,415 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4ea5fcc ).size(): 2
2016-10-23 20:32:38,416 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 20:32:38,418 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:32:38,422 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:32:38,427 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:32:38,427 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:32:38,428 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:32:38,428 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:32:38,428 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:32:38,430 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:32:38,430 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:32:38,430 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:32:38,430 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:32:38,431 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,431 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:32:38,431 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,431 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:32:38,432 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,432 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:32:38,432 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,432 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:32:38,432 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,433 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 20:32:38,433 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,433 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 20:32:38,433 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,433 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 20:32:38,435 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,435 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:32:38,436 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:32:38,436 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:32:38,437 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:32:38,437 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:32:38,437 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:32:38,437 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,438 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,438 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 20:32:38,452 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:32:38,518 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:32:38,520 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:38,531 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:32:38,533 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 20:32:38,535 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,535 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:32:38,535 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:32:38,536 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:32:38,538 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:32:38,540 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@2b546384
2016-10-23 20:32:38,542 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:32:38,543 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:32:38,545 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 20:32:38,547 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:32:38,548 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:32:38,549 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 20:32:38,549 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,550 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:32:38,550 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 20:32:38,550 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,552 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 20:32:38,553 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@57bd2029
2016-10-23 20:32:38,554 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@6c72577a ).size(): 1
2016-10-23 20:32:38,554 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 20:32:38,557 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:32:38,558 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,559 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:32:38,559 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,559 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:32:38,560 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,560 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:32:38,560 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,561 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:32:38,561 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,561 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:32:38,561 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,562 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:32:38,562 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,562 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:32:38,563 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,563 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,563 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:32:38,564 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 20:32:38,585 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:32:38,589 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:32:38,590 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@36be501c)
2016-10-23 20:32:38,614 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:32:38,617 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:32:38,617 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,617 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:32:38,618 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:32:38,619 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:32:38,619 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:32:38,619 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@2b546384
2016-10-23 20:32:38,620 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:32:38,622 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:32:38,622 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:32:38,623 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:32:38,623 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:32:38,624 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:32:38,624 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:32:38,624 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:32:38,625 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:32:38,625 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:32:38,625 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:32:38,626 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:32:38,626 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,628 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:32:38,628 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:32:38,628 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:32:38,629 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:32:38,630 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@69c6161d
2016-10-23 20:32:38,631 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@68268763 ).size(): 1
2016-10-23 20:32:38,632 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 20:32:38,633 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 20:32:38,634 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 20:34:03,864 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:34:03,934 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:34:04,035 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:34:04,036 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:34:04,038 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:34:04,051 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:34:04,071 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:34:04,076 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:34:04,086 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:34:04,088 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:34:04,320 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:34:04,324 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:34:04,326 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:34:04,348 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:34:04,400 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:34:04,414 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:34:04,516 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:34:04,518 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:34:04,518 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:34:04,519 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b520ea8
2016-10-23 20:34:04,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f43c82
2016-10-23 20:34:04,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@7857fe2
2016-10-23 20:34:04,525 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:34:04,525 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:34:04,526 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:34:04,528 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:34:04,528 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:34:04,529 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:34:04,530 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:34:04,531 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:34:04,531 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:34:04,533 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:34:04,534 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:34:04,534 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:34:04,536 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:34:04,536 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:34:04,536 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:34:04,539 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:34:04,539 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:34:04,540 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:34:04,541 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:34:04,543 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:34:04,543 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:34:04,546 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@700fb871
2016-10-23 20:34:04,546 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@700fb871
2016-10-23 20:34:04,549 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f67a4d3
2016-10-23 20:34:04,550 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f67a4d3
2016-10-23 20:34:04,553 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@311bf055
2016-10-23 20:34:04,553 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@311bf055
2016-10-23 20:34:04,555 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@448c8166
2016-10-23 20:34:04,556 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17503f6b
2016-10-23 20:34:04,558 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@10289886
2016-10-23 20:34:04,558 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@10289886
2016-10-23 20:34:04,559 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@3e78b6a5
2016-10-23 20:34:04,559 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3e78b6a5
2016-10-23 20:34:04,578 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@3cce57c7
2016-10-23 20:34:04,578 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3cce57c7
2016-10-23 20:34:04,580 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e570ded
2016-10-23 20:34:04,581 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e570ded
2016-10-23 20:34:04,584 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ebea008
2016-10-23 20:34:04,584 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ebea008
2016-10-23 20:34:04,586 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@478db956
2016-10-23 20:34:04,586 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@478db956
2016-10-23 20:34:04,589 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19b843ba
2016-10-23 20:34:04,589 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19b843ba
2016-10-23 20:34:04,590 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b0d80ed
2016-10-23 20:34:04,591 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b0d80ed
2016-10-23 20:34:04,596 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e17553a
2016-10-23 20:34:04,596 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e17553a
2016-10-23 20:34:04,599 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@791d1f8b
2016-10-23 20:34:04,600 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@791d1f8b
2016-10-23 20:34:04,601 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1890516e
2016-10-23 20:34:04,601 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1890516e
2016-10-23 20:34:04,604 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:34:04,604 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:34:04,605 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:34:04,606 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2663e964
2016-10-23 20:34:04,609 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:34:04,610 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:34:04,610 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:34:04,611 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@72ade7e3
2016-10-23 20:34:04,614 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@23202fce
2016-10-23 20:34:04,614 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23202fce
2016-10-23 20:34:04,616 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@4ea5b703
2016-10-23 20:34:04,616 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ea5b703
2016-10-23 20:34:04,619 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@64e7619d
2016-10-23 20:34:04,619 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64e7619d
2016-10-23 20:34:04,621 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@352ff4da
2016-10-23 20:34:04,621 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@352ff4da
2016-10-23 20:34:04,624 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@651aed93
2016-10-23 20:34:04,625 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@651aed93
2016-10-23 20:34:04,626 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6692b6c6
2016-10-23 20:34:04,628 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:34:04,628 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:34:04,629 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:34:04,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:34:04,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:34:04,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:34:04,631 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9499
2016-10-23 20:34:04,633 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@62833051
2016-10-23 20:34:04,634 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:34:04,634 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:34:04,636 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:34:04,638 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:34:04,639 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:34:04,639 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:34:04,640 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@1863d2fe
2016-10-23 20:34:04,641 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@26df6e3a
2016-10-23 20:34:04,646 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@1187c9e8
2016-10-23 20:34:04,648 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1187c9e8
2016-10-23 20:34:04,648 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57c03d88
2016-10-23 20:34:04,653 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@61eaec38
2016-10-23 20:34:04,653 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61eaec38
2016-10-23 20:34:04,658 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@7d3d101b
2016-10-23 20:34:04,658 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d3d101b
2016-10-23 20:34:04,658 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@78aa1f72
2016-10-23 20:34:04,659 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6304101a
2016-10-23 20:34:04,661 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@5be49b60
2016-10-23 20:34:04,665 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@4816278d
2016-10-23 20:34:04,665 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4816278d
2016-10-23 20:34:04,666 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
2016-10-23 20:34:04,666 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@727eb8cb
2016-10-23 20:34:04,666 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39d9314d
2016-10-23 20:34:04,668 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b978d10
2016-10-23 20:34:04,668 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b7a8434
2016-10-23 20:34:04,668 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c45d770
2016-10-23 20:34:04,668 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ce6c6ec
2016-10-23 20:34:04,669 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1bae316d
2016-10-23 20:34:04,689 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:34:04,689 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:34:04,689 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:34:04,719 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:34:05,156 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:34:05,189 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b,name=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b registered.
2016-10-23 20:34:05,225 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b,name=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b unregistered, in order to be reregistered after update.
2016-10-23 20:34:05,225 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b,name=1hgel1d9j1vdh07x1cvbtjh|4b20ca2b registered.
2016-10-23 20:34:05,235 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:34:05,270 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@bc503210 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@ab70deef [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdh07x1cvbtjh|5e81e5ac, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@c64fc565 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdh07x1cvbtjh|3ad2e17, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdh07x1cvbtjh|4b20ca2b, numHelperThreads -> 3 ]
2016-10-23 20:34:05,296 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:34:05,296 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:34:05,296 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@40499e4f
2016-10-23 20:34:05,296 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@51cd7ffc
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@30d4b288
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:34:05,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:34:05,299 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4cc6fa2a
2016-10-23 20:34:05,299 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:34:05,299 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:34:05,299 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@40f1be1b
2016-10-23 20:34:05,299 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@14c01636 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:34:05,300 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:34:05,300 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:34:05,300 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:34:05,300 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:34:05,637 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,638 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,638 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,638 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1ca7ae2f.acquireResource() returning. 
2016-10-23 20:34:05,638 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1ca7ae2f.acquireResource() returning. 
2016-10-23 20:34:05,638 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1ca7ae2f.acquireResource() returning. 
2016-10-23 20:34:05,639 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:34:05,639 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:34:05,639 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:34:05,642 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 1, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,643 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,643 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:34:05,643 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:34:05,643 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,645 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:34:05,645 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:34:05,650 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:34:05,652 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:34:05,652 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:34:05,673 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,673 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1ca7ae2f.acquireResource() returning. 
2016-10-23 20:34:05,673 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,673 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:34:05,673 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:34:05,677 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:34:05,680 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,680 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1ca7ae2f.acquireResource() returning. 
2016-10-23 20:34:05,680 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,680 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:34:05,682 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:34:05,743 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:34:05,747 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:34:05,763 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:34:05,763 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,765 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@68759011
2016-10-23 20:34:05,765 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:05,770 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:05,808 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:34:05,809 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:34:05,810 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:34:05,810 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:34:05,812 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:34:05,813 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:34:05,813 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:34:05,815 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:34:05,817 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:34:05,818 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:34:05,819 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:34:05,820 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:34:05,820 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:34:05,822 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:34:05,870 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:34:05,965 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:34:06,034 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:34:06,051 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:34:06,062 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:34:06,116 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,122 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:34:06,127 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:34:06,130 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:34:06,136 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:34:06,143 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,144 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:34:06,144 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:34:06,145 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:34:06,145 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:34:06,145 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,147 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:34:06,147 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:34:06,148 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:34:06,148 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:34:06,149 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,150 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:34:06,150 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:34:06,151 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:34:06,151 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:34:06,152 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,152 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:34:06,153 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:34:06,153 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:34:06,154 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:34:06,154 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,155 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:34:06,156 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:34:06,156 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:34:06,156 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:34:06,157 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,158 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:34:06,158 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:34:06,158 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:34:06,159 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:34:06,159 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,161 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:34:06,161 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:34:06,162 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:34:06,162 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:34:06,163 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,164 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:34:06,164 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:34:06,164 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:34:06,165 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:34:06,165 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,166 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:34:06,166 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:34:06,167 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:34:06,167 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:34:06,168 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,168 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:34:06,168 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:34:06,169 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:34:06,169 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:34:06,169 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,170 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:34:06,170 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:34:06,171 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:34:06,171 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:34:06,171 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,172 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:34:06,172 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:34:06,172 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:34:06,173 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:34:06,173 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:34:06,173 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:34:06,174 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:34:06,174 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:34:06,174 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:34:06,177 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:34:06,178 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:34:06,178 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:34:06,178 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:34:06,178 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:34:06,179 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:34:06,179 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:34:06,179 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:34:06,179 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:34:06,180 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:34:06,180 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:34:06,180 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:34:06,180 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:34:06,181 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:34:06,183 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:34:06,267 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:34:06,268 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:34:06,268 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:34:06,269 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:34:06,271 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:34:06,271 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:34:06,271 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:34:06,271 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:34:06,271 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:34:06,272 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:34:06,272 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:34:06,272 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:34:06,272 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:34:06,272 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:34:06,273 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:34:06,273 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:34:06,273 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:34:06,273 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5d28bcd5
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:34:06,274 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:34:06,276 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:34:06,276 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:34:06,276 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:34:06,276 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:34:06,276 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:34:06,277 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:34:06,277 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:34:06,398 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:34:06,399 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61884 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.dBManager.DBOperationTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5cbb84b1, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:34:06,494 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:34:06,495 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:34:06,524 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:34:06,532 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:34:06,562 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:34:06,638 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:34:06,638 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:34:06,663 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:34:06,663 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:34:06,741 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:34:06,741 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:34:06,741 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:34:06,743 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:34:06,743 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:34:06,743 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:34:06,783 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b7cae6f]
2016-10-23 20:34:06,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,785 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,786 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,788 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,788 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,810 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,819 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,823 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,823 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12010fd1]
2016-10-23 20:34:06,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,825 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,825 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,825 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,825 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,826 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,826 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,826 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@552ed807]
2016-10-23 20:34:06,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,828 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,829 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,830 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,830 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,830 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,830 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,830 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,831 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,831 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,833 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,833 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23940f86]
2016-10-23 20:34:06,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,833 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,834 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,835 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,836 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,836 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,836 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455824ad]
2016-10-23 20:34:06,836 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,836 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,839 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,839 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,839 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,839 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,840 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,840 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,840 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f31322]
2016-10-23 20:34:06,841 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,841 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,841 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,841 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,841 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,843 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,843 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,843 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,843 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,844 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,844 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,844 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,844 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,845 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,845 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,846 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,846 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,846 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be4fcc0]
2016-10-23 20:34:06,848 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,848 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,848 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,848 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,849 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,850 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,850 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,850 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,850 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,851 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:34:06,851 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661c46bc]
2016-10-23 20:34:06,851 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,851 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,851 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,851 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,853 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,854 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,854 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,854 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,854 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b98b3bb]
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,855 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,856 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,856 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,856 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,856 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,856 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,858 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,858 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,858 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,859 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,859 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,860 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:34:06,860 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a691d3]
2016-10-23 20:34:06,860 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,864 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,864 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,864 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,864 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,864 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,865 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,866 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,866 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,866 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b95d13c]
2016-10-23 20:34:06,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:34:06,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:34:06,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:34:06,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:34:06,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:34:06,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:34:06,869 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:34:06,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:34:06,870 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:34:06,870 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:34:06,870 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:34:06,871 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,895 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,895 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:34:06,978 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:06,981 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a87b51] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:34:07,101 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:07,101 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@41522537
2016-10-23 20:34:07,103 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:07,103 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:34:07,104 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:34:07,104 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:34:07,111 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:34:07,114 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:34:07,115 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:34:07,119 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10cd6753
2016-10-23 20:34:07,123 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 1bb7ef8f-bbaa-46b5-b721-d688ef2477a9 (<unnamed>)
2016-10-23 20:34:07,123 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:34:07,250 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:34:07,265 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:34:07,265 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:07,298 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@534c6767
2016-10-23 20:34:07,299 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:34:07,369 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:34:07,383 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 20:34:07,384 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:07,430 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:34:07,474 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:34:07,476 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:34:07,479 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:34:07,479 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 20:34:07,496 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:34:07,496 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:34:07,497 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 20:34:07,497 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:07,507 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:34:07,507 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 20:34:07,507 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:07,534 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 20:34:07,543 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4613311f
2016-10-23 20:34:07,560 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@23eebeb4 ).size(): 1
2016-10-23 20:34:07,561 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:34:07,570 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:34:07,575 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:34:07,598 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:34:07,598 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:34:07,599 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:34:07,602 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:34:07,603 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:34:07,603 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:34:07,604 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:34:07,604 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:34:07,605 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:34:07,605 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,611 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:34:07,612 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,612 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:34:07,614 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,614 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:34:07,615 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,615 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:34:07,615 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,616 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 20:34:07,618 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,618 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 20:34:07,618 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,619 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 20:34:07,619 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,622 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:34:07,627 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:34:07,627 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:34:07,628 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:34:07,628 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:34:07,629 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:34:07,629 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,631 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:07,632 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:34:07,951 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:34:08,053 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:34:08,055 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:08,055 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:34:08,058 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 20:34:08,058 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,058 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:34:08,058 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:34:08,060 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:34:08,062 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:34:08,065 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@311bf055
2016-10-23 20:34:08,066 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:34:08,068 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:34:08,068 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 20:34:08,068 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:34:08,070 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:34:08,070 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 20:34:08,070 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,071 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:34:08,071 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 20:34:08,071 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,072 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 20:34:08,072 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@539a138b
2016-10-23 20:34:08,075 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@aa33e94 ).size(): 1
2016-10-23 20:34:08,075 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:34:08,077 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:34:08,078 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,080 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:34:08,080 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,080 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:34:08,080 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,081 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:34:08,081 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,081 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:34:08,081 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,081 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,082 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,083 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:34:08,083 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:34:08,093 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:34:08,098 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:34:08,098 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:08,100 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:34:08,103 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:34:08,103 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,105 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:34:08,105 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:34:08,106 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:34:08,106 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:34:08,106 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@311bf055
2016-10-23 20:34:08,106 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:34:08,108 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:34:08,108 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:34:08,110 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:34:08,110 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:34:08,110 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:34:08,110 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:34:08,111 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:34:08,111 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:34:08,111 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:34:08,112 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:34:08,112 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:34:08,112 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,115 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:34:08,115 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:34:08,115 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:34:08,116 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:34:08,117 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@6d33a66e
2016-10-23 20:34:08,117 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@46971085 ).size(): 1
2016-10-23 20:34:08,117 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 20:34:08,120 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 20:34:08,121 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 20:34:08,122 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:34:08,123 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:08,131 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 20:34:08,140 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 20:34:08,141 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 20:34:08,142 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 20:34:08,145 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 20:34:08,145 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 20:34:08,147 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 20:34:08,151 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 20:34:08 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 20:34:08 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 20:34:08 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 20:34:08 CEST 2016}
2016-10-23 20:34:08,178 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:34:08,178 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4d84049a
2016-10-23 20:34:08,180 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@120f265d ).size(): 1
2016-10-23 20:34:08,180 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 4; num keys: 4
2016-10-23 20:34:08,245 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:34:08,266 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:34:08,267 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:34:08,267 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@7b61bf11
2016-10-23 20:34:08,268 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@4b8ea8c1)
2016-10-23 20:34:08,268 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:34:08,271 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:34:08,280 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 20:34:08,282 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:34:15,267 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:34:25,268 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:34:35,269 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:34:45,270 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:34:55,270 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:35:05,271 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdh07x1cvbtjh|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:35:10,955 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:35:11,011 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:35:11,081 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:35:11,081 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:35:11,082 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:35:11,090 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:35:11,101 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:35:11,105 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:35:11,115 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:35:11,115 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:35:11,283 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:35:11,286 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:35:11,288 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:35:11,303 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:35:11,342 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:35:11,360 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:35:11,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:35:11,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:35:11,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79207381
2016-10-23 20:35:11,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b520ea8
2016-10-23 20:35:11,482 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f43c82
2016-10-23 20:35:11,483 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@7857fe2
2016-10-23 20:35:11,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:35:11,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:35:11,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@69504ae9
2016-10-23 20:35:11,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:35:11,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:35:11,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@475c9c31
2016-10-23 20:35:11,491 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:35:11,491 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:35:11,491 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfd3c81
2016-10-23 20:35:11,493 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:35:11,493 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:35:11,493 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169bb4dd
2016-10-23 20:35:11,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:35:11,497 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:35:11,497 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@2254127a
2016-10-23 20:35:11,501 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:35:11,501 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:35:11,501 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7dc19a70
2016-10-23 20:35:11,503 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:35:11,505 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:35:11,505 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d908d47
2016-10-23 20:35:11,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@700fb871
2016-10-23 20:35:11,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@700fb871
2016-10-23 20:35:11,512 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f67a4d3
2016-10-23 20:35:11,512 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f67a4d3
2016-10-23 20:35:11,515 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@311bf055
2016-10-23 20:35:11,515 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@311bf055
2016-10-23 20:35:11,517 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@448c8166
2016-10-23 20:35:11,518 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17503f6b
2016-10-23 20:35:11,520 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@10289886
2016-10-23 20:35:11,521 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@10289886
2016-10-23 20:35:11,522 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@3e78b6a5
2016-10-23 20:35:11,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3e78b6a5
2016-10-23 20:35:11,542 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@3cce57c7
2016-10-23 20:35:11,606 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3cce57c7
2016-10-23 20:35:11,608 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e570ded
2016-10-23 20:35:11,608 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2e570ded
2016-10-23 20:35:11,612 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ebea008
2016-10-23 20:35:11,612 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ebea008
2016-10-23 20:35:11,615 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@478db956
2016-10-23 20:35:11,615 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@478db956
2016-10-23 20:35:11,617 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19b843ba
2016-10-23 20:35:11,617 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19b843ba
2016-10-23 20:35:11,620 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b0d80ed
2016-10-23 20:35:11,620 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b0d80ed
2016-10-23 20:35:11,625 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e17553a
2016-10-23 20:35:11,625 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e17553a
2016-10-23 20:35:11,628 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@791d1f8b
2016-10-23 20:35:11,628 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@791d1f8b
2016-10-23 20:35:11,629 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1890516e
2016-10-23 20:35:11,630 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1890516e
2016-10-23 20:35:11,631 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:35:11,631 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:35:11,631 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:35:11,633 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2663e964
2016-10-23 20:35:11,635 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:35:11,635 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:35:11,635 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@72ef8d15
2016-10-23 20:35:11,636 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@72ade7e3
2016-10-23 20:35:11,638 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@23202fce
2016-10-23 20:35:11,638 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23202fce
2016-10-23 20:35:11,639 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@4ea5b703
2016-10-23 20:35:11,640 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ea5b703
2016-10-23 20:35:11,641 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@64e7619d
2016-10-23 20:35:11,641 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64e7619d
2016-10-23 20:35:11,642 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@352ff4da
2016-10-23 20:35:11,642 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@352ff4da
2016-10-23 20:35:11,644 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@651aed93
2016-10-23 20:35:11,644 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@651aed93
2016-10-23 20:35:11,646 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6692b6c6
2016-10-23 20:35:11,647 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:35:11,647 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:35:11,647 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@1cb346ea
2016-10-23 20:35:11,648 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:35:11,649 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:35:11,649 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7354b8c5
2016-10-23 20:35:11,651 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9499
2016-10-23 20:35:11,652 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@62833051
2016-10-23 20:35:11,653 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:35:11,653 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:35:11,654 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@37fb0bed
2016-10-23 20:35:11,656 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:35:11,656 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:35:11,656 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28b46423
2016-10-23 20:35:11,657 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@1863d2fe
2016-10-23 20:35:11,658 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@26df6e3a
2016-10-23 20:35:11,664 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@1187c9e8
2016-10-23 20:35:11,664 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1187c9e8
2016-10-23 20:35:11,666 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57c03d88
2016-10-23 20:35:11,669 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@61eaec38
2016-10-23 20:35:11,669 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61eaec38
2016-10-23 20:35:11,674 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@7d3d101b
2016-10-23 20:35:11,674 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d3d101b
2016-10-23 20:35:11,674 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@78aa1f72
2016-10-23 20:35:11,676 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6304101a
2016-10-23 20:35:11,677 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@5be49b60
2016-10-23 20:35:11,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@4816278d
2016-10-23 20:35:11,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4816278d
2016-10-23 20:35:11,682 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45d2ade3
2016-10-23 20:35:11,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@727eb8cb
2016-10-23 20:35:11,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39d9314d
2016-10-23 20:35:11,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b978d10
2016-10-23 20:35:11,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b7a8434
2016-10-23 20:35:11,683 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c45d770
2016-10-23 20:35:11,684 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ce6c6ec
2016-10-23 20:35:11,684 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1bae316d
2016-10-23 20:35:11,702 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:35:11,702 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:35:11,703 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:35:11,734 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:35:12,179 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:35:12,209 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdifxl2z8wzb|4b20ca2b,name=1hgel1d9j1vdifxl2z8wzb|4b20ca2b registered.
2016-10-23 20:35:12,252 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdifxl2z8wzb|4b20ca2b,name=1hgel1d9j1vdifxl2z8wzb|4b20ca2b unregistered, in order to be reregistered after update.
2016-10-23 20:35:12,253 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdifxl2z8wzb|4b20ca2b,name=1hgel1d9j1vdifxl2z8wzb|4b20ca2b registered.
2016-10-23 20:35:12,263 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:35:12,295 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@7a95f24d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@69b69f2c [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdifxl2z8wzb|5e81e5ac, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8a628988 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdifxl2z8wzb|3ad2e17, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdifxl2z8wzb|4b20ca2b, numHelperThreads -> 3 ]
2016-10-23 20:35:12,324 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:35:12,325 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:35:12,325 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@40499e4f
2016-10-23 20:35:12,325 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:35:12,325 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:35:12,327 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@51cd7ffc
2016-10-23 20:35:12,327 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:35:12,327 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:35:12,328 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@30d4b288
2016-10-23 20:35:12,328 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:35:12,328 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:35:12,328 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4cc6fa2a
2016-10-23 20:35:12,328 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:35:12,329 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:35:12,329 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@40f1be1b
2016-10-23 20:35:12,329 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@14c01636 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:35:12,331 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:35:12,331 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:35:12,331 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:35:12,332 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:35:12,684 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,684 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,684 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1f195e26.acquireResource() returning. 
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1f195e26.acquireResource() returning. 
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1f195e26.acquireResource() returning. 
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:35:12,686 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,687 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:35:12,687 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:35:12,687 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,693 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:35:12,693 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:35:12,693 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:35:12,713 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,714 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1f195e26.acquireResource() returning. 
2016-10-23 20:35:12,714 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,714 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:35:12,714 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:35:12,717 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,718 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1f195e26.acquireResource() returning. 
2016-10-23 20:35:12,718 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,718 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:35:12,718 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:35:12,719 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:35:12,771 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:35:12,774 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:35:12,791 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:35:12,791 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,793 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@68759011
2016-10-23 20:35:12,793 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:12,793 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:12,827 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:35:12,828 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:35:12,829 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:35:12,829 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:35:12,829 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:35:12,832 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:35:12,832 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:35:12,833 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:35:12,834 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:35:12,836 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:35:12,836 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:35:12,837 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:35:12,837 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:35:12,838 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:35:12,876 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:35:12,949 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:35:12,978 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:35:12,986 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:35:12,991 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:35:13,019 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,023 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:35:13,026 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:35:13,028 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:35:13,031 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:35:13,036 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,037 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:35:13,037 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:35:13,037 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:35:13,037 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:35:13,038 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,038 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:35:13,038 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:35:13,038 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:35:13,038 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:35:13,039 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,039 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:35:13,039 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:35:13,039 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:35:13,039 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:35:13,041 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,041 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:35:13,041 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:35:13,041 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:35:13,042 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:35:13,042 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,042 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:35:13,042 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:35:13,043 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:35:13,044 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,046 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:35:13,047 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:35:13,048 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:35:13,049 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:35:13,051 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:35:13,051 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:35:13,051 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:35:13,051 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:35:13,053 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:35:13,053 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:35:13,053 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:35:13,053 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:35:13,054 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:35:13,056 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:35:13,057 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:35:13,102 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:35:13,103 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:35:13,103 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:35:13,103 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:35:13,103 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:35:13,104 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:35:13,106 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5d28bcd5
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:35:13,107 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:35:13,108 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:35:13,184 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:35:13,184 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61897 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.dBManager.DBOperationTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5cbb84b1, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:35:13,260 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:35:13,260 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:35:13,282 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:35:13,289 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:35:13,310 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:35:13,362 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:35:13,362 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:35:13,384 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:35:13,384 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:35:13,447 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:35:13,447 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:35:13,447 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:35:13,447 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:35:13,448 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:35:13,448 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:35:13,474 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b7cae6f]
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,477 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,478 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,498 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,505 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,509 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,509 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12010fd1]
2016-10-23 20:35:13,510 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,510 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,510 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,510 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,512 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,513 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,514 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,514 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,514 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,515 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,515 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,517 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@552ed807]
2016-10-23 20:35:13,517 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,517 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,517 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,518 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,519 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,519 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,519 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,519 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,519 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,520 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,520 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,520 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23940f86]
2016-10-23 20:35:13,520 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,522 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,523 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,524 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,524 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,524 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,525 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,525 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,525 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455824ad]
2016-10-23 20:35:13,525 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,527 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,528 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,529 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,529 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,529 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,530 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,530 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,530 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f31322]
2016-10-23 20:35:13,532 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,532 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,532 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,532 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,533 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,534 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,534 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,534 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,534 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,535 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,535 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,537 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,537 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be4fcc0]
2016-10-23 20:35:13,537 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,538 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,540 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,540 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,540 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,542 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,542 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,542 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,542 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:35:13,542 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661c46bc]
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,543 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,544 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,545 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,545 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,545 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b98b3bb]
2016-10-23 20:35:13,545 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,545 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,547 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,548 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,548 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,549 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,550 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,550 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:35:13,550 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a691d3]
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,552 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,553 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,554 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,554 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,554 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b95d13c]
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:35:13,555 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:35:13,557 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:35:13,558 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:35:13,558 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:35:13,558 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,583 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,583 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:35:13,657 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:13,660 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a87b51] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:35:13,725 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:13,725 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@41522537
2016-10-23 20:35:13,727 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:13,727 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:35:13,727 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:35:13,728 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:35:13,734 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:35:13,735 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:35:13,735 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:35:13,738 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10cd6753
2016-10-23 20:35:13,742 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 058e470e-9129-49f2-b6f4-351d2f60ad16 (<unnamed>)
2016-10-23 20:35:13,742 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:35:13,850 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:35:13,863 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:35:13,863 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:13,893 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@534c6767
2016-10-23 20:35:13,894 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:35:13,945 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:35:13,957 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 20:35:13,957 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:13,997 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:35:14,027 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:35:14,029 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:35:14,032 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:35:14,033 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 20:35:14,052 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:35:14,052 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:35:14,053 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 20:35:14,053 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,065 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:35:14,065 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 20:35:14,067 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,090 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 20:35:14,095 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4613311f
2016-10-23 20:35:14,112 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@5cdb26c9 ).size(): 1
2016-10-23 20:35:14,112 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:35:14,123 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:35:14,127 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:35:14,151 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:35:14,151 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:35:14,152 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:35:14,152 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:35:14,153 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:35:14,153 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:35:14,153 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:35:14,154 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:35:14,154 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:35:14,155 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,155 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:35:14,156 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,156 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:35:14,156 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,156 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:35:14,157 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,157 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:35:14,157 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,158 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 20:35:14,158 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,158 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 20:35:14,158 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,159 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 20:35:14,159 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,159 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 20:35:14,159 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,162 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:35:14,167 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:35:14,167 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:35:14,168 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:35:14,168 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:35:14,169 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:35:14,169 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,170 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,171 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:35:14,551 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:35:14,683 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:35:14,684 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:14,686 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:35:14,691 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 20:35:14,691 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,691 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:35:14,692 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:35:14,693 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:35:14,696 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:35:14,698 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@311bf055
2016-10-23 20:35:14,700 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:35:14,703 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:35:14,709 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 20:35:14,710 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:35:14,710 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:35:14,711 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 20:35:14,711 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,711 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:35:14,712 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 20:35:14,712 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,713 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 20:35:14,713 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@42505474
2016-10-23 20:35:14,714 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1c749664 ).size(): 1
2016-10-23 20:35:14,715 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:35:14,722 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:35:14,723 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,724 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:35:14,724 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,724 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:35:14,724 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,724 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:35:14,725 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,725 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:35:14,725 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,726 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:35:14,726 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,726 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:35:14,726 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,726 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:35:14,727 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,727 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:35:14,727 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,727 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,728 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:35:14,728 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:35:14,745 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:35:14,754 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:35:14,755 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:14,758 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:35:14,761 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:35:14,761 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,762 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:35:14,763 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:35:14,764 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:35:14,764 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:35:14,765 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@311bf055
2016-10-23 20:35:14,765 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:35:14,768 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:35:14,769 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:35:14,769 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:35:14,770 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:35:14,771 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@205d38da
2016-10-23 20:35:14,771 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:35:14,772 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:35:14,772 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:35:14,773 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:35:14,773 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:35:14,774 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:35:14,774 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,777 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:35:14,777 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:35:14,777 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:35:14,778 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:35:14,779 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@5b20706
2016-10-23 20:35:14,780 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@499c892a ).size(): 1
2016-10-23 20:35:14,780 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 20:35:14,786 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 20:35:14,787 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 20:35:14,790 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:35:14,791 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:14,803 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 20:35:14,815 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 20:35:14,816 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 20:35:14,818 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 20:35:14,821 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 20:35:14,822 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 20:35:14,824 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 20:35:14,829 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 20:35:14 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 20:35:14 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 20:35:14 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 20:35:14 CEST 2016}
2016-10-23 20:35:14,858 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:35:14,861 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@642857e0
2016-10-23 20:35:14,861 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4aa727ef ).size(): 1
2016-10-23 20:35:14,862 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 4; num keys: 4
2016-10-23 20:35:14,925 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:35:14,930 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:35:14,930 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:35:14,932 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@2fea7088: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3ff54f3d
2016-10-23 20:35:14,932 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@14c01636 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2bcea4)
2016-10-23 20:35:14,933 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:35:14,932 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:35:14,937 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:35:14,943 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 20:35:22,293 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:35:32,293 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdifxl2z8wzb|4b20ca2b]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@637c939e -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:36:36,428 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:36:36,500 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:36:36,582 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:36:36,582 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:36:36,583 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:36:36,598 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:36:36,615 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:36:36,618 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:36:36,627 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:36:36,628 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:36:36,824 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:36:36,828 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:36:36,832 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:36:36,867 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:36:36,914 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:36:36,933 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:36:37,070 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@5a5a729f
2016-10-23 20:36:37,070 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@5a5a729f
2016-10-23 20:36:37,071 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5a5a729f
2016-10-23 20:36:37,074 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23f5b5dc
2016-10-23 20:36:37,076 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@1be2019a
2016-10-23 20:36:37,078 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@4f0f2942
2016-10-23 20:36:37,080 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@57db2b13
2016-10-23 20:36:37,081 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@57db2b13
2016-10-23 20:36:37,081 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57db2b13
2016-10-23 20:36:37,084 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@1b919693
2016-10-23 20:36:37,084 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@1b919693
2016-10-23 20:36:37,085 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b919693
2016-10-23 20:36:37,088 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@626abbd0
2016-10-23 20:36:37,089 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@626abbd0
2016-10-23 20:36:37,089 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@626abbd0
2016-10-23 20:36:37,091 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@14dd7b39
2016-10-23 20:36:37,092 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@14dd7b39
2016-10-23 20:36:37,092 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14dd7b39
2016-10-23 20:36:37,095 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@12591ac8
2016-10-23 20:36:37,095 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@12591ac8
2016-10-23 20:36:37,096 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@12591ac8
2016-10-23 20:36:37,100 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@1df8da7a
2016-10-23 20:36:37,100 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@1df8da7a
2016-10-23 20:36:37,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1df8da7a
2016-10-23 20:36:37,104 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@2d29b4ee
2016-10-23 20:36:37,105 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@2d29b4ee
2016-10-23 20:36:37,105 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d29b4ee
2016-10-23 20:36:37,109 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7dc3712
2016-10-23 20:36:37,109 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7dc3712
2016-10-23 20:36:37,111 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d5620ce
2016-10-23 20:36:37,112 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d5620ce
2016-10-23 20:36:37,115 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@147e2ae7
2016-10-23 20:36:37,115 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@147e2ae7
2016-10-23 20:36:37,117 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2235eaab
2016-10-23 20:36:37,118 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24959ca4
2016-10-23 20:36:37,120 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@60db1c0e
2016-10-23 20:36:37,121 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@60db1c0e
2016-10-23 20:36:37,123 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@5167f57d
2016-10-23 20:36:37,123 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5167f57d
2016-10-23 20:36:37,147 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@35b74c5c
2016-10-23 20:36:37,148 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35b74c5c
2016-10-23 20:36:37,150 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4808bc9b
2016-10-23 20:36:37,151 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4808bc9b
2016-10-23 20:36:37,155 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7905a0b8
2016-10-23 20:36:37,155 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7905a0b8
2016-10-23 20:36:37,158 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2462cb01
2016-10-23 20:36:37,160 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2462cb01
2016-10-23 20:36:37,162 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@452e19ca
2016-10-23 20:36:37,162 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@452e19ca
2016-10-23 20:36:37,166 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@471a9022
2016-10-23 20:36:37,166 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@471a9022
2016-10-23 20:36:37,173 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34b9f960
2016-10-23 20:36:37,173 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34b9f960
2016-10-23 20:36:37,176 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@cd1e646
2016-10-23 20:36:37,177 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@cd1e646
2016-10-23 20:36:37,178 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@3336e6b6
2016-10-23 20:36:37,178 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3336e6b6
2016-10-23 20:36:37,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@189cbd7c
2016-10-23 20:36:37,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@189cbd7c
2016-10-23 20:36:37,182 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@189cbd7c
2016-10-23 20:36:37,186 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44be0077
2016-10-23 20:36:37,188 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@239105a8
2016-10-23 20:36:37,188 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@239105a8
2016-10-23 20:36:37,190 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@239105a8
2016-10-23 20:36:37,191 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1df8b5b8
2016-10-23 20:36:37,193 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@407a7f2a
2016-10-23 20:36:37,195 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@407a7f2a
2016-10-23 20:36:37,196 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@5f0fd5a0
2016-10-23 20:36:37,197 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f0fd5a0
2016-10-23 20:36:37,198 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e928fbf
2016-10-23 20:36:37,200 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e928fbf
2016-10-23 20:36:37,201 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@1130520d
2016-10-23 20:36:37,202 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1130520d
2016-10-23 20:36:37,205 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@589da3f3
2016-10-23 20:36:37,205 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@589da3f3
2016-10-23 20:36:37,206 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52815fa3
2016-10-23 20:36:37,208 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@329dbdbf
2016-10-23 20:36:37,208 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@329dbdbf
2016-10-23 20:36:37,210 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@329dbdbf
2016-10-23 20:36:37,211 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b72cb8a
2016-10-23 20:36:37,212 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b72cb8a
2016-10-23 20:36:37,212 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b72cb8a
2016-10-23 20:36:37,213 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@1c39680d
2016-10-23 20:36:37,216 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@24c4ddae
2016-10-23 20:36:37,217 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@4e07b95f
2016-10-23 20:36:37,218 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@4e07b95f
2016-10-23 20:36:37,218 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@4e07b95f
2016-10-23 20:36:37,221 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b6776cb
2016-10-23 20:36:37,221 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b6776cb
2016-10-23 20:36:37,223 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b6776cb
2016-10-23 20:36:37,225 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@5a37d3ed
2016-10-23 20:36:37,226 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@79c97cb
2016-10-23 20:36:37,235 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@6d7fc27
2016-10-23 20:36:37,235 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d7fc27
2016-10-23 20:36:37,236 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@68034211
2016-10-23 20:36:37,243 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@1205bd62
2016-10-23 20:36:37,243 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1205bd62
2016-10-23 20:36:37,248 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@35399441
2016-10-23 20:36:37,250 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35399441
2016-10-23 20:36:37,251 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2812b107
2016-10-23 20:36:37,251 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27d5a580
2016-10-23 20:36:37,253 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@16b2bb0c
2016-10-23 20:36:37,257 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@39d9314d
2016-10-23 20:36:37,257 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39d9314d
2016-10-23 20:36:37,257 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ce6c6ec
2016-10-23 20:36:37,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bae316d
2016-10-23 20:36:37,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@147a5d08
2016-10-23 20:36:37,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6676f6a0
2016-10-23 20:36:37,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7cbd9d24
2016-10-23 20:36:37,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1672fe87
2016-10-23 20:36:37,260 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5026735c
2016-10-23 20:36:37,260 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b45c0e
2016-10-23 20:36:37,278 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:36:37,280 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:36:37,280 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:36:37,312 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:36:37,931 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:36:37,974 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdk9yv1544ulk|25b2cfcb,name=1hgel1d9j1vdk9yv1544ulk|25b2cfcb registered.
2016-10-23 20:36:38,031 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdk9yv1544ulk|25b2cfcb,name=1hgel1d9j1vdk9yv1544ulk|25b2cfcb unregistered, in order to be reregistered after update.
2016-10-23 20:36:38,032 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdk9yv1544ulk|25b2cfcb,name=1hgel1d9j1vdk9yv1544ulk|25b2cfcb registered.
2016-10-23 20:36:38,049 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:36:38,094 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@b6296d6f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3f8c7ea6 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdk9yv1544ulk|320de594, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2ae448c9 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdk9yv1544ulk|5bf8fa12, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdk9yv1544ulk|25b2cfcb, numHelperThreads -> 3 ]
2016-10-23 20:36:38,128 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:36:38,128 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:36:38,129 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6f2cb653
2016-10-23 20:36:38,129 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:36:38,149 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:36:38,149 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@14c01636
2016-10-23 20:36:38,150 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:36:38,150 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:36:38,150 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@590c73d3
2016-10-23 20:36:38,151 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:36:38,151 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:36:38,152 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6b9ce1bf
2016-10-23 20:36:38,152 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:36:38,152 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:36:38,153 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@61884cb1
2016-10-23 20:36:38,154 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@435871cb config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:36:38,154 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:36:38,160 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:36:38,160 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:36:38,160 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:36:38,662 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3fb364fb.acquireResource() returning. 
2016-10-23 20:36:38,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3fb364fb.acquireResource() returning. 
2016-10-23 20:36:38,663 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3fb364fb.acquireResource() returning. 
2016-10-23 20:36:38,665 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:36:38,665 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:36:38,666 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:36:38,666 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,666 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:36:38,666 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:36:38,666 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:36:38,667 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:36:38,672 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,677 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,678 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3fb364fb.acquireResource() returning. 
2016-10-23 20:36:38,678 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,678 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:36:38,678 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:36:38,686 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:36:38,686 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:36:38,687 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:36:38,719 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,719 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@3fb364fb.acquireResource() returning. 
2016-10-23 20:36:38,719 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,719 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:36:38,720 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:36:38,724 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:36:38,827 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:36:38,830 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:36:38,852 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:36:38,853 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,855 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@6e16b8b5
2016-10-23 20:36:38,855 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:38,858 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:38,914 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:36:38,914 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:36:38,916 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:36:38,916 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:36:38,916 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:36:38,920 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:36:38,920 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:36:38,924 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:36:38,925 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:36:38,927 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:36:38,929 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:36:38,930 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:36:38,930 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:36:38,932 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:36:39,002 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:36:39,096 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:36:39,134 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:36:39,144 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:36:39,152 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:36:39,189 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,194 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:36:39,197 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:36:39,199 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:36:39,203 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:36:39,209 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,209 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:36:39,211 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:36:39,211 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:36:39,211 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:36:39,212 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,212 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:36:39,212 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:36:39,213 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:36:39,213 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:36:39,213 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,214 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:36:39,214 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:36:39,214 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:36:39,214 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:36:39,216 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,216 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:36:39,216 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:36:39,216 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:36:39,217 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:36:39,217 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,217 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:36:39,218 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:36:39,218 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:36:39,218 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:36:39,218 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,219 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:36:39,219 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:36:39,219 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:36:39,219 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:36:39,221 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,221 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:36:39,221 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:36:39,221 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:36:39,222 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:36:39,222 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,223 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:36:39,223 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:36:39,223 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:36:39,223 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:36:39,224 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,224 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:36:39,224 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:36:39,224 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:36:39,226 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:36:39,226 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,226 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:36:39,227 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:36:39,227 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:36:39,227 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:36:39,227 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,228 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:36:39,228 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:36:39,228 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:36:39,229 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:36:39,229 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,229 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:36:39,231 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:36:39,231 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:36:39,231 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:36:39,232 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:36:39,232 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:36:39,232 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:36:39,232 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:36:39,233 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:36:39,236 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:36:39,237 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:36:39,238 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:36:39,241 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:36:39,302 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:36:39,303 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:36:39,304 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:36:39,304 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:36:39,304 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:36:39,304 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:36:39,304 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:36:39,306 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:36:39,307 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@78dc4696
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:36:39,308 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:36:39,309 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:36:39,311 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:36:39,311 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:36:39,311 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:36:39,311 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:36:39,311 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:36:39,403 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:36:39,404 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61909 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.test.dBManager.DBOperationTest:QueryExecutor_test1, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@27068a50, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:36:39,509 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:36:39,510 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:36:39,533 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:36:39,540 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:36:39,598 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:36:39,653 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:36:39,653 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:36:39,673 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:36:39,673 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:36:39,734 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:36:39,734 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:36:39,734 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:36:39,736 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:36:39,736 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:36:39,736 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:36:39,763 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f04105]
2016-10-23 20:36:39,764 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,766 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,767 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,783 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,788 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,791 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,791 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455824ad]
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,792 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,793 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,794 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,794 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,794 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,794 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f31322]
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,796 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,797 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,798 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be4fcc0]
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,798 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,799 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,801 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,801 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,801 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,801 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,801 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661c46bc]
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,802 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,803 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,804 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,804 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,804 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,804 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b98b3bb]
2016-10-23 20:36:39,804 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,805 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,807 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,807 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,807 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,808 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,808 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,808 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a691d3]
2016-10-23 20:36:39,808 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,808 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,808 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,809 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,810 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,810 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,810 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,810 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,812 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b95d13c]
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,812 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,813 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,814 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,814 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,814 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,814 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537c8c7e]
2016-10-23 20:36:39,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,814 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,815 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,817 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,817 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,817 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,818 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,818 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:36:39,818 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6601cc93]
2016-10-23 20:36:39,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,818 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,819 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,820 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,820 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,820 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,820 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,822 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,822 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63716833]
2016-10-23 20:36:39,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:36:39,822 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:36:39,823 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:36:39,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:36:39,824 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:36:39,824 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:36:39,824 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:36:39,824 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:36:39,825 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,847 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,847 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:36:39,897 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:39,899 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6c518474] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:36:39,974 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:39,975 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@2e060819
2016-10-23 20:36:39,975 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:39,975 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:36:39,975 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:36:39,976 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:36:39,981 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:36:39,983 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:36:39,983 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:36:39,985 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c8662ac
2016-10-23 20:36:39,988 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: efef73f7-44f6-4cd4-a486-523729d2e894 (<unnamed>)
2016-10-23 20:36:39,988 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:36:40,079 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:36:40,086 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:36:40,088 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@435871cb [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6030fca3)
2016-10-23 20:36:40,106 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@44b18fe4
2016-10-23 20:36:40,106 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:36:40,145 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:36:40,155 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 20:36:40,155 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:36:40,183 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:36:40,206 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:36:40,209 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:36:40,210 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:36:40,211 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 20:36:40,224 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:36:40,224 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:36:40,225 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 20:36:40,225 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:36:40,234 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:36:40,234 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 20:36:40,234 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:36:40,258 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 20:36:40,263 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@7a791b66: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7efb53af
2016-10-23 20:36:40,284 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@14a50dcb ).size(): 1
2016-10-23 20:36:40,284 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:36:40,296 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:36:40,300 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:36:40,316 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:36:40,316 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:36:40,318 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:36:40,318 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:36:40,319 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:36:40,319 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:36:40,319 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:36:40,319 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:36:40,320 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:36:40,320 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:36:40,321 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:36:40,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:36:40,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:36:40,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 20:36:40,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 20:36:40,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 20:36:40,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 20:36:40,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,326 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 20:36:40,326 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,329 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:36:40,331 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:36:40,332 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:36:40,332 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:36:40,332 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:36:40,332 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:36:40,334 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,334 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:36:40,335 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:36:40,637 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},]
2016-10-23 20:36:48,092 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@6b6427a7 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:36:58,093 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@6b6427a7 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:37:08,094 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdk9yv1544ulk|25b2cfcb]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@6b6427a7 -- Running DeadlockDetector[Exiting. No pending tasks.]
2016-10-23 20:38:40,859 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:38:40,931 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:38:41,030 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:38:41,030 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:38:41,033 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:38:41,043 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:38:41,058 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:38:41,061 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:38:41,074 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:38:41,074 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:38:41,204 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:38:41,206 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:38:41,208 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:38:41,219 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:38:41,254 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:38:41,269 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:38:41,373 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:38:41,374 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:38:41,374 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f9a3314
2016-10-23 20:38:41,376 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51931956
2016-10-23 20:38:41,379 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@6279cee3
2016-10-23 20:38:41,380 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@57175e74
2016-10-23 20:38:41,383 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:38:41,383 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:38:41,384 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77e9807f
2016-10-23 20:38:41,385 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:38:41,386 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:38:41,386 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f9fcf7f
2016-10-23 20:38:41,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:38:41,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:38:41,390 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c40b76e
2016-10-23 20:38:41,391 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:38:41,391 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:38:41,393 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@667a738
2016-10-23 20:38:41,394 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:38:41,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:38:41,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@275710fc
2016-10-23 20:38:41,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:38:41,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:38:41,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ae3c1cd
2016-10-23 20:38:41,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:38:41,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:38:41,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@534df152
2016-10-23 20:38:41,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b083826
2016-10-23 20:38:41,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b083826
2016-10-23 20:38:41,406 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d68ef40
2016-10-23 20:38:41,406 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d68ef40
2016-10-23 20:38:41,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@2b546384
2016-10-23 20:38:41,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@2b546384
2016-10-23 20:38:41,410 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55ca8de8
2016-10-23 20:38:41,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ed0fbae
2016-10-23 20:38:41,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@548a102f
2016-10-23 20:38:41,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@548a102f
2016-10-23 20:38:41,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@1d548a08
2016-10-23 20:38:41,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d548a08
2016-10-23 20:38:41,431 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@475e586c
2016-10-23 20:38:41,433 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@475e586c
2016-10-23 20:38:41,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b2cf7ab
2016-10-23 20:38:41,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b2cf7ab
2016-10-23 20:38:41,436 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@13acb0d1
2016-10-23 20:38:41,436 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@13acb0d1
2016-10-23 20:38:41,438 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15761df8
2016-10-23 20:38:41,438 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15761df8
2016-10-23 20:38:41,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3745e5c6
2016-10-23 20:38:41,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3745e5c6
2016-10-23 20:38:41,441 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3bd40a57
2016-10-23 20:38:41,441 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3bd40a57
2016-10-23 20:38:41,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff95560
2016-10-23 20:38:41,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff95560
2016-10-23 20:38:41,448 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@78dd667e
2016-10-23 20:38:41,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@78dd667e
2016-10-23 20:38:41,450 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@27c86f2d
2016-10-23 20:38:41,450 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27c86f2d
2016-10-23 20:38:41,451 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:38:41,451 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:38:41,451 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:38:41,453 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a955565
2016-10-23 20:38:41,454 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:38:41,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:38:41,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70be0a2b
2016-10-23 20:38:41,456 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23986957
2016-10-23 20:38:41,456 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@60704c
2016-10-23 20:38:41,458 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60704c
2016-10-23 20:38:41,459 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@7f1302d6
2016-10-23 20:38:41,459 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f1302d6
2016-10-23 20:38:41,460 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@184cf7cf
2016-10-23 20:38:41,461 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@184cf7cf
2016-10-23 20:38:41,463 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@38c5cc4c
2016-10-23 20:38:41,463 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38c5cc4c
2016-10-23 20:38:41,464 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16e7dcfd
2016-10-23 20:38:41,465 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16e7dcfd
2016-10-23 20:38:41,465 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11a9e7c8
2016-10-23 20:38:41,466 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:38:41,466 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:38:41,466 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@7b227d8d
2016-10-23 20:38:41,468 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:38:41,469 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:38:41,469 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30b7c004
2016-10-23 20:38:41,470 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@2f177a4b
2016-10-23 20:38:41,470 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@15b204a1
2016-10-23 20:38:41,471 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:38:41,473 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:38:41,473 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@2ddc8ecb
2016-10-23 20:38:41,474 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:38:41,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:38:41,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@309e345f
2016-10-23 20:38:41,475 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@25d250c6
2016-10-23 20:38:41,476 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@318ba8c8
2016-10-23 20:38:41,481 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@48fa0f47
2016-10-23 20:38:41,481 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48fa0f47
2016-10-23 20:38:41,481 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d2a209c
2016-10-23 20:38:41,485 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@7c0c77c7
2016-10-23 20:38:41,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c0c77c7
2016-10-23 20:38:41,489 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@3aefe5e5
2016-10-23 20:38:41,489 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3aefe5e5
2016-10-23 20:38:41,490 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f7c2f4f
2016-10-23 20:38:41,490 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36c88a32
2016-10-23 20:38:41,491 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@78b66d36
2016-10-23 20:38:41,495 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@6f96c77
2016-10-23 20:38:41,495 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f96c77
2016-10-23 20:38:41,495 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49d904ec
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48e4374
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d680b5a
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b5d6a01
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a22f9e2
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c419631
2016-10-23 20:38:41,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@418e7838
2016-10-23 20:38:41,498 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61230f6a
2016-10-23 20:38:41,510 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:38:41,511 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:38:41,511 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:38:41,536 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:38:41,991 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:38:42,011 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdmxu21ruu9vo|15de0b3c,name=1hgel1d9j1vdmxu21ruu9vo|15de0b3c registered.
2016-10-23 20:38:42,036 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdmxu21ruu9vo|15de0b3c,name=1hgel1d9j1vdmxu21ruu9vo|15de0b3c unregistered, in order to be reregistered after update.
2016-10-23 20:38:42,038 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdmxu21ruu9vo|15de0b3c,name=1hgel1d9j1vdmxu21ruu9vo|15de0b3c registered.
2016-10-23 20:38:42,048 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:38:42,070 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@4cf1c41 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@bd39fd3c [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdmxu21ruu9vo|217ed35e, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@9d79423a [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdmxu21ruu9vo|9597028, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdmxu21ruu9vo|15de0b3c, numHelperThreads -> 3 ]
2016-10-23 20:38:42,094 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:38:42,095 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:38:42,095 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@26b3fd41
2016-10-23 20:38:42,095 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:38:42,096 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:38:42,096 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7494f96a
2016-10-23 20:38:42,096 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:38:42,096 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:38:42,096 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@561b6512
2016-10-23 20:38:42,098 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:38:42,098 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:38:42,098 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@2e377400
2016-10-23 20:38:42,098 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:38:42,098 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:38:42,099 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1757cd72
2016-10-23 20:38:42,099 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@445b295b config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:38:42,099 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:38:42,100 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:38:42,100 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:38:42,100 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@110dcf47.acquireResource() returning. 
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@110dcf47.acquireResource() returning. 
2016-10-23 20:38:42,393 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@110dcf47.acquireResource() returning. 
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:38:42,394 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:38:42,395 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,401 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:38:42,401 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:38:42,401 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:38:42,410 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,410 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@110dcf47.acquireResource() returning. 
2016-10-23 20:38:42,410 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,411 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:38:42,411 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:38:42,419 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:38:42,430 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,430 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@110dcf47.acquireResource() returning. 
2016-10-23 20:38:42,430 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,430 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:38:42,430 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:38:42,474 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:38:42,476 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:38:42,490 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:38:42,490 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,494 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@24fcf36f
2016-10-23 20:38:42,494 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:42,495 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:42,531 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:38:42,532 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:38:42,534 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:38:42,534 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:38:42,535 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:38:42,536 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:38:42,537 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:38:42,540 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:38:42,541 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:38:42,542 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:38:42,542 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:38:42,544 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:38:42,544 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:38:42,545 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:38:42,576 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:38:42,611 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:38:42,672 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:38:42,680 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:38:42,683 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:38:42,706 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,708 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:38:42,711 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:38:42,712 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:38:42,715 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:38:42,718 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,718 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:38:42,720 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:38:42,720 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:38:42,720 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:38:42,720 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,720 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:38:42,721 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:38:42,721 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:38:42,721 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:38:42,721 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,722 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:38:42,722 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:38:42,722 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:38:42,722 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:38:42,722 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:38:42,723 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:38:42,725 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:38:42,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:38:42,727 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,727 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:38:42,727 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:38:42,728 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:38:42,728 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:38:42,728 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,728 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:38:42,730 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:38:42,730 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:38:42,730 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:38:42,730 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,731 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:38:42,731 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:38:42,731 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:38:42,731 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:38:42,732 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,732 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:38:42,732 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:38:42,732 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:38:42,733 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:38:42,735 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:38:42,735 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:38:42,735 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:38:42,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:38:42,735 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:38:42,737 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:38:42,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:38:42,740 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:38:42,777 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:38:42,778 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:38:42,778 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:38:42,780 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:38:42,781 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:38:42,781 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:38:42,781 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:38:42,781 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:38:42,781 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:38:42,782 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4066c471
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:38:42,783 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:38:42,785 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:38:42,786 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:38:42,786 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:38:42,786 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:38:42,786 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:38:42,843 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:38:42,843 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61943 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.dBManager.DBOperationTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@21337f7b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:38:42,899 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:38:42,901 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:38:42,916 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:38:42,921 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:38:42,943 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:38:42,978 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:38:42,979 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:38:42,993 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:38:42,994 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:38:43,059 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:38:43,060 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:38:43,060 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:38:43,060 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:38:43,060 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:38:43,060 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:38:43,085 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7288a3]
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,087 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,088 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,103 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,108 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,112 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,112 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
2016-10-23 20:38:43,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,114 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,114 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,114 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,114 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,115 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,115 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338494fa]
2016-10-23 20:38:43,115 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,115 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,115 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,115 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,118 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,118 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,118 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,118 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,118 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c83d8]
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,119 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,120 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,122 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,122 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,122 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af3a0f]
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,124 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,125 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10993713]
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,128 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,128 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,128 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,128 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24b6b8f6]
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,130 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,130 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,130 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,130 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,130 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,132 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,132 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,133 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,133 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:38:43,133 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb7bd00]
2016-10-23 20:38:43,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,135 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,135 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,135 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,135 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee37ca3]
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,138 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,139 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,139 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,139 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:38:43,140 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53812a9b]
2016-10-23 20:38:43,140 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,140 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,140 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,143 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,144 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,144 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,144 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,144 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e350f1]
2016-10-23 20:38:43,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:38:43,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:38:43,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:38:43,147 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:38:43,147 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:38:43,147 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:38:43,147 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:38:43,147 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,163 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,164 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:38:43,204 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:43,207 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7b64240d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:38:43,293 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:43,293 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@1de5f0ef
2016-10-23 20:38:43,293 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:43,293 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:38:43,294 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:38:43,294 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:38:43,299 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:38:43,302 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:38:43,302 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:38:43,304 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71ae31b0
2016-10-23 20:38:43,308 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 734c6c26-ec26-4c62-b928-79f03fa516ac (<unnamed>)
2016-10-23 20:38:43,308 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:38:43,398 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:38:43,407 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:38:43,407 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:43,428 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5af28b27
2016-10-23 20:38:43,428 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:38:43,463 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:38:43,473 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 20:38:43,473 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:43,502 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:38:43,527 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:38:43,529 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:38:43,532 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:38:43,532 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 20:38:43,548 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:38:43,548 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:38:43,549 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 20:38:43,549 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:43,560 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 20:38:43,560 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 20:38:43,560 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:43,584 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 20:38:43,589 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@226f885f
2016-10-23 20:38:43,608 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@661bab3e ).size(): 1
2016-10-23 20:38:43,609 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:38:43,620 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:38:43,625 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:38:43,645 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:38:43,646 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:38:43,646 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:38:43,650 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:38:43,651 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:38:43,651 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:38:43,651 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:38:43,652 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:38:43,652 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:38:43,653 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,654 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:38:43,654 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,654 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:38:43,655 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,655 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:38:43,655 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,655 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:38:43,660 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,660 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 20:38:43,662 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,662 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 20:38:43,663 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,663 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 20:38:43,664 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,664 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 20:38:43,664 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,664 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 20:38:43,665 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,667 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:38:43,671 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:38:43,671 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:38:43,672 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:38:43,672 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:38:43,672 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 20:38:43,673 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,675 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:43,676 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:38:43,922 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:38:44,021 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:38:44,021 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:44,023 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:38:44,026 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 20:38:44,026 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,027 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:38:44,027 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:38:44,028 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:38:44,031 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:38:44,032 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@2b546384
2016-10-23 20:38:44,033 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:38:44,036 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:38:44,037 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 20:38:44,037 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:38:44,037 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:38:44,038 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 20:38:44,038 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,038 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 20:38:44,040 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
