2016-10-23 20:38:44,056 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,057 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 20:38:44,058 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@26a529dc
2016-10-23 20:38:44,058 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@31d49514 ).size(): 1
2016-10-23 20:38:44,058 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:38:44,060 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:38:44,060 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,061 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:38:44,061 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,061 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 20:38:44,061 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,061 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 20:38:44,062 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 20:38:44,063 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:38:44,071 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:38:44,085 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:38:44,085 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:44,086 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:38:44,088 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:38:44,090 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,090 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:38:44,091 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:38:44,091 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:38:44,092 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:38:44,092 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@2b546384
2016-10-23 20:38:44,092 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:38:44,095 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:38:44,095 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:38:44,095 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:38:44,096 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:38:44,096 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@22635ba0
2016-10-23 20:38:44,096 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:38:44,096 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:38:44,096 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:38:44,097 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:38:44,097 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:38:44,097 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:38:44,097 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,100 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 20:38:44,100 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:38:44,100 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:38:44,100 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:38:44,101 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@408a247c
2016-10-23 20:38:44,101 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@44aa831 ).size(): 1
2016-10-23 20:38:44,102 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 20:38:44,102 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 20:38:44,103 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 20:38:44,105 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:38:44,106 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:44,115 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 20:38:44,125 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 20:38:44,126 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 20:38:44,128 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 20:38:44,131 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 20:38:44,131 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 20:38:44,133 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 20:38:44,138 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 20:38:44 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 20:38:44 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 20:38:44 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 20:38:44 CEST 2016}
2016-10-23 20:38:44,161 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:38:44,161 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@6e92c6ad
2016-10-23 20:38:44,162 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@19911593 ).size(): 1
2016-10-23 20:38:44,162 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 4; num keys: 4
2016-10-23 20:38:44,206 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:38:44,211 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:38:44,212 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:38:44,212 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@192c3f1e: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3d7cc3cb
2016-10-23 20:38:44,213 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@445b295b [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@39712ccb)
2016-10-23 20:38:44,213 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:38:44,218 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 20:38:44,232 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 20:38:44,247 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdmxu21ruu9vo|15de0b3c]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 20:42:03,808 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 20:42:03,814 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:42:03,815 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:42:03,897 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 20:42:03,941 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 20:42:04,008 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 20:42:04,008 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 20:42:04,010 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 20:42:04,016 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 20:42:04,025 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 20:42:04,027 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 20:42:04,033 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 20:42:04,033 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 20:42:04,212 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 20:42:04,215 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 20:42:04,217 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 20:42:04,235 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 20:42:04,281 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 20:42:04,297 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 20:42:04,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:42:04,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:42:04,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d49af10
2016-10-23 20:42:04,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351d0846
2016-10-23 20:42:04,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dd92fe2
2016-10-23 20:42:04,417 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@1b68b9a4
2016-10-23 20:42:04,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:42:04,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:42:04,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b4a2ec7
2016-10-23 20:42:04,422 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:42:04,422 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:42:04,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c8e4bb0
2016-10-23 20:42:04,426 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:42:04,426 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:42:04,427 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@770c2e6b
2016-10-23 20:42:04,428 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:42:04,430 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:42:04,430 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@448ff1a8
2016-10-23 20:42:04,432 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:42:04,433 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:42:04,433 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@145eaa29
2016-10-23 20:42:04,436 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:42:04,437 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:42:04,437 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@667a738
2016-10-23 20:42:04,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:42:04,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:42:04,441 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@275710fc
2016-10-23 20:42:04,443 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:42:04,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ae3c1cd
2016-10-23 20:42:04,447 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:42:04,447 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45f45fa1
2016-10-23 20:42:04,450 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:04,450 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:04,451 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40e6dfe1
2016-10-23 20:42:04,452 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@123f1134
2016-10-23 20:42:04,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:42:04,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@25b485ba
2016-10-23 20:42:04,457 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:42:04,457 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2893de87
2016-10-23 20:42:04,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:42:04,477 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a84f40f
2016-10-23 20:42:04,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:42:04,480 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5906ebcb
2016-10-23 20:42:04,482 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:42:04,482 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6646153
2016-10-23 20:42:04,485 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:42:04,485 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f2f2cc1
2016-10-23 20:42:04,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:42:04,486 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ad851c9
2016-10-23 20:42:04,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:42:04,488 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e3047e6
2016-10-23 20:42:04,493 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:42:04,495 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d83da2e
2016-10-23 20:42:04,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:42:04,496 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@79ca92b9
2016-10-23 20:42:04,498 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:42:04,498 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7fc229ab
2016-10-23 20:42:04,500 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:04,500 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:04,500 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:04,502 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b44655e
2016-10-23 20:42:04,503 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:42:04,505 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:42:04,505 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@501edcf1
2016-10-23 20:42:04,505 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27c86f2d
2016-10-23 20:42:04,506 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:42:04,507 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22635ba0
2016-10-23 20:42:04,508 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:42:04,508 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7995092a
2016-10-23 20:42:04,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:42:04,510 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c15e7fd
2016-10-23 20:42:04,511 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:42:04,511 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d082e88
2016-10-23 20:42:04,513 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:42:04,513 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fe767f3
2016-10-23 20:42:04,513 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2fd6b6c7
2016-10-23 20:42:04,515 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:42:04,516 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:42:04,516 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@37918c79
2016-10-23 20:42:04,517 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:42:04,517 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:42:04,518 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c72f59f
2016-10-23 20:42:04,520 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@3b07a0d6
2016-10-23 20:42:04,521 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@4c1d9d4b
2016-10-23 20:42:04,522 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:42:04,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:42:04,523 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@d706f19
2016-10-23 20:42:04,525 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:42:04,526 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:42:04,526 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29176cc1
2016-10-23 20:42:04,527 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@124c278f
2016-10-23 20:42:04,528 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@6973bf95
2016-10-23 20:42:04,533 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:42:04,535 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@419c5f1a
2016-10-23 20:42:04,535 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5276e6b0
2016-10-23 20:42:04,538 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:42:04,538 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f0f1111
2016-10-23 20:42:04,543 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:42:04,543 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b14c583
2016-10-23 20:42:04,545 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1534f01b
2016-10-23 20:42:04,545 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4386f16
2016-10-23 20:42:04,547 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@460d0a57
2016-10-23 20:42:04,551 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:42:04,551 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ce3cb8e
2016-10-23 20:42:04,552 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bef2d72
2016-10-23 20:42:04,552 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69b2283a
2016-10-23 20:42:04,553 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22a637e7
2016-10-23 20:42:04,553 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fe7aac8
2016-10-23 20:42:04,555 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d119efb
2016-10-23 20:42:04,555 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@659a969b
2016-10-23 20:42:04,556 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76908cc0
2016-10-23 20:42:04,556 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2473d930
2016-10-23 20:42:04,571 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 20:42:04,571 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 20:42:04,571 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 20:42:04,596 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 20:42:05,182 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 20:42:05,205 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdral11wl1qog|3eb738bb,name=1hgel1d9j1vdral11wl1qog|3eb738bb registered.
2016-10-23 20:42:05,228 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdral11wl1qog|3eb738bb,name=1hgel1d9j1vdral11wl1qog|3eb738bb unregistered, in order to be reregistered after update.
2016-10-23 20:42:05,230 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vdral11wl1qog|3eb738bb,name=1hgel1d9j1vdral11wl1qog|3eb738bb registered.
2016-10-23 20:42:05,237 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 20:42:05,263 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@dc4323d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@77dc939b [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vdral11wl1qog|5542c4ed, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@cc4af864 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdral11wl1qog|10e31a9a, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vdral11wl1qog|3eb738bb, numHelperThreads -> 3 ]
2016-10-23 20:42:05,283 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 20:42:05,283 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:42:05,283 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@75db5df9
2016-10-23 20:42:05,283 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@707194ba
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1190200a
2016-10-23 20:42:05,285 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a2f6f80
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@45b4c3a9
2016-10-23 20:42:05,286 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 20:42:05,287 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 20:42:05,287 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 20:42:05,287 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 20:42:05,287 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 0, unused: 0, excluded: 0]
2016-10-23 20:42:05,513 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@2c11e186.acquireResource() returning. 
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@2c11e186.acquireResource() returning. 
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@2c11e186.acquireResource() returning. 
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 1, unused: 1, excluded: 0]
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 20:42:05,515 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 20:42:05,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 20:42:05,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 20:42:05,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 20:42:05,516 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,523 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 20:42:05,523 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 20:42:05,523 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 20:42:05,525 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,525 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@2c11e186.acquireResource() returning. 
2016-10-23 20:42:05,525 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,525 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 20:42:05,525 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 20:42:05,533 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,533 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@2c11e186.acquireResource() returning. 
2016-10-23 20:42:05,533 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,533 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 20:42:05,533 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 20:42:05,542 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 20:42:05,586 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 20:42:05,588 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 20:42:05,602 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 20:42:05,603 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,605 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@29d89d5d
2016-10-23 20:42:05,606 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:05,606 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:05,641 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 20:42:05,642 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 20:42:05,643 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:42:05,643 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 20:42:05,643 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 20:42:05,645 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 20:42:05,645 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 20:42:05,646 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:42:05,647 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 20:42:05,648 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 20:42:05,648 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 20:42:05,648 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 20:42:05,650 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 20:42:05,650 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 20:42:05,680 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 20:42:05,707 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 20:42:05,783 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 20:42:05,790 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 20:42:05,793 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 20:42:05,817 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,820 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 20:42:05,822 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 20:42:05,823 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 20:42:05,826 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 20:42:05,831 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,831 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 20:42:05,831 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 20:42:05,831 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 20:42:05,832 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 20:42:05,832 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,832 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 20:42:05,832 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 20:42:05,832 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 20:42:05,833 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 20:42:05,835 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,836 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 20:42:05,836 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 20:42:05,836 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 20:42:05,836 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 20:42:05,836 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 20:42:05,837 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 20:42:05,838 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 20:42:05,838 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 20:42:05,838 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,838 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 20:42:05,840 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 20:42:05,841 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 20:42:05,842 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,842 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 20:42:05,842 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 20:42:05,843 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 20:42:05,845 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 20:42:05,845 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 20:42:05,845 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 20:42:05,845 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 20:42:05,845 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 20:42:05,847 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 20:42:05,848 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 20:42:05,850 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 20:42:05,887 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 20:42:05,888 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 20:42:05,888 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 20:42:05,888 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 20:42:05,888 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 20:42:05,890 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 20:42:05,891 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 20:42:05,892 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 20:42:05,892 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 20:42:05,892 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 20:42:05,892 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7ef27d7f
2016-10-23 20:42:05,892 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 20:42:05,893 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 20:42:05,895 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 20:42:05,895 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 20:42:05,895 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 20:42:05,895 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 20:42:05,895 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 20:42:05,952 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 20:42:05,953 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/C:/Outlook/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 61958 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.test.invoice.resources.ServiceTest, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74589991, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 20:42:06,017 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:42:06,018 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:42:06,036 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 20:42:06,042 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 20:42:06,061 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 20:42:06,099 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:42:06,099 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:42:06,114 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 20:42:06,114 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 20:42:06,177 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 20:42:06,177 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 20:42:06,178 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 20:42:06,178 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 20:42:06,178 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 20:42:06,178 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 20:42:06,204 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6941827a]
2016-10-23 20:42:06,206 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,206 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,206 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,206 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,207 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,208 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,221 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,224 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,227 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,227 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75459c75]
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,228 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,229 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,231 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,231 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,231 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,231 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efc20d]
2016-10-23 20:42:06,231 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,232 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,233 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,234 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ab1c47]
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,236 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,237 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,237 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,237 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,237 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bcf3c1]
2016-10-23 20:42:06,237 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,237 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,238 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,239 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,239 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,239 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,239 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,239 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,239 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15cafec7]
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,242 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,243 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb191ca]
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,243 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,244 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,246 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,246 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,246 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,246 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,246 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 20:42:06,246 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,247 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,248 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,248 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,248 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,248 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,248 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,249 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79145d5a]
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,249 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,252 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,252 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,252 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,252 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,253 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,253 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,254 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,256 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,256 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,257 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,257 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,257 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338494fa]
2016-10-23 20:42:06,257 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 20:42:06,258 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 20:42:06,259 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 20:42:06,261 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 20:42:06,261 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 20:42:06,261 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,276 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,277 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 20:42:06,317 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:06,321 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@458342d3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 20:42:06,429 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:06,429 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@165b2f7f
2016-10-23 20:42:06,431 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:06,431 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vdral11wl1qog|3eb738bb]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 20:42:06,431 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 20:42:06,432 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 20:42:06,437 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 20:42:06,438 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 20:42:06,439 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 20:42:06,442 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@64df9a61
2016-10-23 20:42:06,444 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 7668b84c-2b10-4f13-ad4b-02003ee0f1aa (<unnamed>)
2016-10-23 20:42:06,444 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 20:42:06,537 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 20:42:06,546 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:42:06,547 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:06,574 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@403132fc
2016-10-23 20:42:06,574 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 20:42:06,615 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:42:06,627 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 20:42:06,627 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:06,660 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:42:06,686 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:42:06,687 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:42:06,692 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:06,694 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:06,695 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:42:06,697 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:06,699 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:06,699 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:42:06,699 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:06,699 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:06,700 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:42:06,700 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:42:06,700 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 20:42:06,711 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:42:06,711 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:42:06,712 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 20:42:06,712 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:06,725 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 20:42:06,725 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 20:42:06,725 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:06,749 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 20:42:06,754 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@641856
2016-10-23 20:42:06,774 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@6310e3c9 ).size(): 1
2016-10-23 20:42:06,774 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 20:42:06,786 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:42:06,789 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:06,813 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:06,818 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:06,819 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 20:42:07,124 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:42:07,218 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 20:42:07,218 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:42:07,221 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:42:07,222 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:42:07,222 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:07,223 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:42:07,227 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 20:42:07,227 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,227 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:42:07,228 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:42:07,230 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:42:07,230 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,230 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:07,231 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:42:07,231 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,232 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:07,233 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:42:07,233 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,233 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@add0edd
2016-10-23 20:42:07,235 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 20:42:07,235 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,235 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:07,236 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 20:42:07,236 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:42:07,236 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 20:42:07,237 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:42:07,237 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:42:07,238 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 20:42:07,238 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,240 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 20:42:07,240 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:42:07,240 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,241 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 20:42:07,241 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@33a630fa
2016-10-23 20:42:07,255 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@485f7fa8 ).size(): 1
2016-10-23 20:42:07,255 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 20:42:07,256 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:42:07,257 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,258 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,260 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,260 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 20:42:07,265 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 20:42:07,269 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 20:42:07,269 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 20:42:07,269 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 20:42:07,270 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 20:42:07,270 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@399c4be1 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@51e60d1d)
2016-10-23 20:42:07,272 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 20:42:07,275 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 20:42:07,275 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,276 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 20:42:07,276 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 20:42:07,277 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 20:42:07,278 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,278 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:07,278 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 20:42:07,278 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 20:42:07,279 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@8e0379d
2016-10-23 20:42:07,279 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 20:42:07,279 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 20:42:07,280 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 20:42:07,280 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 20:42:07,281 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 20:42:07,281 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 20:42:07,281 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,282 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 20:42:07,282 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 20:42:07,282 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 20:42:07,283 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 20:42:07,284 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@33c911a1: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@ba1f559
2016-10-23 20:42:07,285 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@14838b9f ).size(): 1
2016-10-23 20:42:07,286 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 20:42:07,287 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 20:42:07,288 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,290 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 20:42:07,290 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:42:07,291 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,291 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 20:42:07,292 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:42:07,292 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 20:42:07,293 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 20:42:07,297 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:09:00,926 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 22:09:00,968 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 22:09:01,030 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 22:09:01,030 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 22:09:01,031 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 22:09:01,041 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 22:09:01,050 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 22:09:01,051 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 22:09:01,056 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 22:09:01,056 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 22:09:01,186 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 22:09:01,189 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 22:09:01,190 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 22:09:01,201 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 22:09:01,238 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 22:09:01,250 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 22:09:01,329 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@78047b92
2016-10-23 22:09:01,330 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@78047b92
2016-10-23 22:09:01,330 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78047b92
2016-10-23 22:09:01,331 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4387b79e
2016-10-23 22:09:01,333 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@add0edd
2016-10-23 22:09:01,333 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@4b44655e
2016-10-23 22:09:01,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@6b4a4e18
2016-10-23 22:09:01,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@6b4a4e18
2016-10-23 22:09:01,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b4a4e18
2016-10-23 22:09:01,339 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@1df82230
2016-10-23 22:09:01,339 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@1df82230
2016-10-23 22:09:01,340 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1df82230
2016-10-23 22:09:01,341 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7fc2413d
2016-10-23 22:09:01,343 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@7fc2413d
2016-10-23 22:09:01,343 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fc2413d
2016-10-23 22:09:01,344 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@23986957
2016-10-23 22:09:01,344 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@23986957
2016-10-23 22:09:01,344 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23986957
2016-10-23 22:09:01,346 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2a32de6c
2016-10-23 22:09:01,346 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@2a32de6c
2016-10-23 22:09:01,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a32de6c
2016-10-23 22:09:01,349 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@2fd6b6c7
2016-10-23 22:09:01,350 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@2fd6b6c7
2016-10-23 22:09:01,350 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd6b6c7
2016-10-23 22:09:01,351 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@233fe9b6
2016-10-23 22:09:01,353 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@233fe9b6
2016-10-23 22:09:01,353 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@233fe9b6
2016-10-23 22:09:01,355 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11a9e7c8
2016-10-23 22:09:01,355 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11a9e7c8
2016-10-23 22:09:01,356 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b227d8d
2016-10-23 22:09:01,358 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b227d8d
2016-10-23 22:09:01,359 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:01,359 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:01,360 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f177a4b
2016-10-23 22:09:01,361 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15b204a1
2016-10-23 22:09:01,363 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@2ddc8ecb
2016-10-23 22:09:01,363 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ddc8ecb
2016-10-23 22:09:01,364 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@309e345f
2016-10-23 22:09:01,364 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@309e345f
2016-10-23 22:09:01,380 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@51e5fc98
2016-10-23 22:09:01,381 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51e5fc98
2016-10-23 22:09:01,384 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48fa0f47
2016-10-23 22:09:01,384 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48fa0f47
2016-10-23 22:09:01,385 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f010382
2016-10-23 22:09:01,385 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f010382
2016-10-23 22:09:01,388 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56528192
2016-10-23 22:09:01,388 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56528192
2016-10-23 22:09:01,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f3f4916
2016-10-23 22:09:01,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f3f4916
2016-10-23 22:09:01,390 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@20d28811
2016-10-23 22:09:01,391 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@20d28811
2016-10-23 22:09:01,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79b06cab
2016-10-23 22:09:01,395 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79b06cab
2016-10-23 22:09:01,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@3aefe5e5
2016-10-23 22:09:01,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@3aefe5e5
2016-10-23 22:09:01,399 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@ef9296d
2016-10-23 22:09:01,399 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ef9296d
2016-10-23 22:09:01,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:01,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:01,401 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:01,403 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@78b66d36
2016-10-23 22:09:01,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@6fe7aac8
2016-10-23 22:09:01,405 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6fe7aac8
2016-10-23 22:09:01,405 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6fe7aac8
2016-10-23 22:09:01,406 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76908cc0
2016-10-23 22:09:01,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@4c9f8c13
2016-10-23 22:09:01,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4c9f8c13
2016-10-23 22:09:01,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@49d904ec
2016-10-23 22:09:01,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49d904ec
2016-10-23 22:09:01,410 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c419631
2016-10-23 22:09:01,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c419631
2016-10-23 22:09:01,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@3e2e18f2
2016-10-23 22:09:01,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e2e18f2
2016-10-23 22:09:01,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17046283
2016-10-23 22:09:01,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17046283
2016-10-23 22:09:01,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5a63f509
2016-10-23 22:09:01,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@19bb07ed
2016-10-23 22:09:01,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@19bb07ed
2016-10-23 22:09:01,416 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@19bb07ed
2016-10-23 22:09:01,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57c758ac
2016-10-23 22:09:01,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57c758ac
2016-10-23 22:09:01,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57c758ac
2016-10-23 22:09:01,419 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@654f0d9c
2016-10-23 22:09:01,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@9353778
2016-10-23 22:09:01,420 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@c267ef4
2016-10-23 22:09:01,421 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@c267ef4
2016-10-23 22:09:01,421 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@c267ef4
2016-10-23 22:09:01,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ddf84b8
2016-10-23 22:09:01,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ddf84b8
2016-10-23 22:09:01,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ddf84b8
2016-10-23 22:09:01,424 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@636be97c
2016-10-23 22:09:01,424 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@31368b99
2016-10-23 22:09:01,429 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@c33b74f
2016-10-23 22:09:01,429 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c33b74f
2016-10-23 22:09:01,429 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@619713e5
2016-10-23 22:09:01,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@5f058f00
2016-10-23 22:09:01,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f058f00
2016-10-23 22:09:01,438 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@7334aada
2016-10-23 22:09:01,438 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7334aada
2016-10-23 22:09:01,439 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@42e99e4a
2016-10-23 22:09:01,440 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c80d78a
2016-10-23 22:09:01,443 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@5e0826e7
2016-10-23 22:09:01,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@44ebcd03
2016-10-23 22:09:01,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44ebcd03
2016-10-23 22:09:01,448 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 22:09:01,448 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 22:09:01,448 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 22:09:01,448 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 22:09:01,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 22:09:01,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1fa268de
2016-10-23 22:09:01,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f6ee6e4
2016-10-23 22:09:01,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4466af20
2016-10-23 22:09:01,461 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 22:09:01,461 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 22:09:01,463 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 22:09:01,488 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 22:09:01,960 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 22:09:01,975 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vgv3ww1izc4hr|2638011,name=1hgel1d9j1vgv3ww1izc4hr|2638011 registered.
2016-10-23 22:09:01,998 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vgv3ww1izc4hr|2638011,name=1hgel1d9j1vgv3ww1izc4hr|2638011 unregistered, in order to be reregistered after update.
2016-10-23 22:09:01,998 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vgv3ww1izc4hr|2638011,name=1hgel1d9j1vgv3ww1izc4hr|2638011 registered.
2016-10-23 22:09:02,004 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 22:09:02,024 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@4978ebb [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@fb0649b3 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vgv3ww1izc4hr|77f80c04, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@e940f29d [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vgv3ww1izc4hr|5bda8e08, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vgv3ww1izc4hr|2638011, numHelperThreads -> 3 ]
2016-10-23 22:09:02,040 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:09:02,041 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:09:02,041 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 22:09:02,041 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:09:02,041 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:09:02,043 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 22:09:02,043 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:09:02,043 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:09:02,043 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@1649b0e6
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@865dd6
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 22:09:02,044 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4da4253
2016-10-23 22:09:02,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@3972a855 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 22:09:02,045 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 22:09:02,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 22:09:02,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 22:09:02,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 0, unused: 0, excluded: 0]
2016-10-23 22:09:02,415 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,415 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 1, unused: 1, excluded: 0]
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:09:02,416 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,417 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 22:09:02,417 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:09:02,417 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,417 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:09:02,417 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:09:02,417 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,425 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 22:09:02,425 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 22:09:02,426 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 22:09:02,427 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,427 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,427 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:02,427 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,427 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:09:02,429 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:09:02,429 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:02,429 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,429 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:09:02,429 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:09:02,441 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 22:09:02,483 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 22:09:02,485 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 22:09:02,498 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 22:09:02,499 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,500 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@82de64a
2016-10-23 22:09:02,500 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:02,500 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:02,529 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 22:09:02,529 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 22:09:02,530 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:09:02,530 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:09:02,531 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 22:09:02,533 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 22:09:02,533 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 22:09:02,534 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:09:02,535 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 22:09:02,536 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 22:09:02,538 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 22:09:02,538 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 22:09:02,538 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:09:02,539 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 22:09:02,570 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 22:09:02,640 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 22:09:02,665 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 22:09:02,672 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 22:09:02,677 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 22:09:02,700 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,702 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 22:09:02,705 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 22:09:02,706 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 22:09:02,710 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 22:09:02,714 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,714 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 22:09:02,714 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 22:09:02,715 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 22:09:02,716 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 22:09:02,716 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,716 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 22:09:02,716 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 22:09:02,716 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 22:09:02,717 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 22:09:02,717 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,717 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 22:09:02,717 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 22:09:02,719 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 22:09:02,719 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 22:09:02,719 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,719 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 22:09:02,720 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 22:09:02,720 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 22:09:02,720 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 22:09:02,720 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,721 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 22:09:02,721 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 22:09:02,721 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 22:09:02,721 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 22:09:02,721 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,722 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 22:09:02,724 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 22:09:02,724 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 22:09:02,724 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 22:09:02,724 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,725 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 22:09:02,725 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 22:09:02,725 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 22:09:02,725 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 22:09:02,726 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 22:09:02,726 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 22:09:02,726 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 22:09:02,727 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 22:09:02,727 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,727 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 22:09:02,727 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 22:09:02,729 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 22:09:02,729 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 22:09:02,729 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,730 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 22:09:02,730 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 22:09:02,730 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 22:09:02,730 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 22:09:02,731 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:09:02,731 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 22:09:02,731 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 22:09:02,731 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 22:09:02,731 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 22:09:02,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 22:09:02,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 22:09:02,737 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 22:09:02,774 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 22:09:02,775 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 22:09:02,775 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 22:09:02,775 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 22:09:02,776 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 22:09:02,777 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@63611043
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 22:09:02,779 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 22:09:02,780 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 22:09:02,780 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 22:09:02,780 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 22:09:02,780 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 22:09:02,780 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 22:09:02,781 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 22:09:02,781 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 22:09:02,840 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 22:09:02,841 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter9102976947976015195.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire4708983774481764965tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_0622414590315587822tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter9102976947976015195.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@31dadd46, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 22:09:02,911 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:09:02,911 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:09:02,927 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 22:09:02,932 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 22:09:02,952 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 22:09:02,988 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:09:02,990 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:09:03,001 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:09:03,001 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:09:03,048 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 22:09:03,048 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 22:09:03,048 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 22:09:03,048 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:09:03,048 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 22:09:03,050 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 22:09:03,071 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40499e4f]
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,072 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,073 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,087 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,092 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,096 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,096 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8c1f44]
2016-10-23 22:09:03,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,097 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,100 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,100 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,101 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,101 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,101 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,102 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c435123]
2016-10-23 22:09:03,102 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,102 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,102 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,103 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,103 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,103 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,103 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,103 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,106 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,106 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,106 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,107 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a62c01e]
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,107 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,108 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,110 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,110 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,110 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,110 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce33a58]
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,112 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,113 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,113 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,115 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,115 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,115 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546ccad7]
2016-10-23 22:09:03,116 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,116 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,116 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,116 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,116 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,117 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,118 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,118 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,118 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,118 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,120 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,120 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,120 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1623134f]
2016-10-23 22:09:03,120 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,121 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,122 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,123 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,123 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 22:09:03,123 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485a3466]
2016-10-23 22:09:03,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,123 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,126 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,126 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,126 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,127 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b43529a]
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,128 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,130 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,131 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,131 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:09:03,131 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b04476e]
2016-10-23 22:09:03,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,133 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,138 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,138 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,140 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,141 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,141 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,141 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb75258]
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:09:03,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:09:03,143 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:09:03,145 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:09:03,145 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:09:03,145 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,171 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,171 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:09:03,213 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:03,216 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@29ef6856] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 22:09:03,297 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:03,297 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@52b56a3e
2016-10-23 22:09:03,298 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:03,298 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:09:03,298 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 22:09:03,300 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 22:09:03,303 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 22:09:03,306 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 22:09:03,307 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 22:09:03,310 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@165b8a71
2016-10-23 22:09:03,311 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 89a96c60-7940-49e0-ba37-0ced6450f278 (<unnamed>)
2016-10-23 22:09:03,312 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 22:09:03,398 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 22:09:03,407 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:03,407 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:03,423 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@16423501
2016-10-23 22:09:03,423 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 22:09:03,461 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:09:03,471 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 22:09:03,471 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:03,507 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:03,530 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:03,532 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:03,535 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:03,535 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 22:09:03,548 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:03,550 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:03,551 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 22:09:03,551 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:03,561 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:09:03,562 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 22:09:03,562 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:03,587 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 22:09:03,593 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@82c57b3
2016-10-23 22:09:03,608 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@132744b0 ).size(): 1
2016-10-23 22:09:03,608 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 22:09:03,615 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:03,619 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:03,633 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:09:03,634 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:03,634 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:09:03,634 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:03,635 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:09:03,635 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:03,635 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:09:03,635 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:09:03,636 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:09:03,636 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,636 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:09:03,638 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,638 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:09:03,638 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,638 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:09:03,639 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,639 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:09:03,639 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,639 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:09:03,640 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,640 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:09:03,641 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,641 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:09:03,641 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,641 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:09:03,643 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,643 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 22:09:03,643 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,643 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 22:09:03,644 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,645 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:03,650 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:03,650 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:03,651 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:03,651 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:09:03,651 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:09:03,651 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,653 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:03,653 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:09:03,915 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:09:04,006 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,006 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,009 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:09:04,013 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 22:09:04,013 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,013 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,014 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,014 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,018 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,020 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,021 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,024 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,024 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 22:09:04,025 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,025 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,026 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 22:09:04,026 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,026 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:09:04,028 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 22:09:04,028 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,029 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 22:09:04,030 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@d400943
2016-10-23 22:09:04,030 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4fbe452d ).size(): 1
2016-10-23 22:09:04,031 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 22:09:04,033 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:04,033 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,034 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:09:04,034 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,035 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:09:04,035 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,035 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:09:04,035 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,036 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:09:04,036 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,036 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:09:04,036 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,036 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:09:04,038 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,038 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:09:04,038 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,038 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:09:04,038 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,039 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:09:04,039 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,039 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:09:04,039 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,039 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,040 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:09:04,040 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 22:09:04,048 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:09:04,068 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,068 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,076 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:09:04,079 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:09:04,080 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,080 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,081 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,082 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,082 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,083 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,083 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,085 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,086 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,086 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,087 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,087 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,088 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,088 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,088 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:09:04,089 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,089 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,090 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:09:04,092 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,094 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:09:04,094 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:09:04,094 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,097 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:09:04,098 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@203dd56b
2016-10-23 22:09:04,099 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7e04ceb0 ).size(): 1
2016-10-23 22:09:04,100 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 22:09:04,101 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 22:09:04,102 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 22:09:04,105 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,105 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,113 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 22:09:04,124 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 22:09:04,125 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 22:09:04,127 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 22:09:04,130 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 22:09:04,130 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 22:09:04,133 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 22:09:04,138 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 22:09:04 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 22:09:04 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 22:09:04 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 22:09:04 CEST 2016}
2016-10-23 22:09:04,165 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:09:04,167 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@18fdb6cf
2016-10-23 22:09:04,168 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1657bca7 ).size(): 1
2016-10-23 22:09:04,168 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 4; num keys: 4
2016-10-23 22:09:04,235 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 22:09:04,240 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:09:04,240 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 22:09:04,241 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@4565a70a
2016-10-23 22:09:04,241 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,241 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 22:09:04,241 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:09:04,246 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:09:04,251 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 22:09:04,322 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 22:09:04,322 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:09:04,324 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:09:04,325 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,325 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,334 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:09:04,349 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:09:04,349 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,350 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,352 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,353 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,353 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,354 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,354 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,355 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,356 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,356 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,357 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,358 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,358 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,358 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,359 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:09:04,359 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,360 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,361 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:09:04,361 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,362 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:09:04,362 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:09:04,362 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,364 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:09:04,365 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4b1c0397
2016-10-23 22:09:04,365 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1657bca7 ).size(): 2
2016-10-23 22:09:04,366 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 22:09:04,368 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:04,369 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,370 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,370 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,371 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 22:09:04,385 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:09:04,388 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 22:09:04,388 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:09:04,392 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:09:04,392 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,392 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,396 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:09:04,398 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 22:09:04,398 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,399 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,399 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,400 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,400 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,401 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,401 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,401 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,402 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,402 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,403 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,403 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@6ef888f6
2016-10-23 22:09:04,403 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:09:04,404 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,404 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,405 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 22:09:04,405 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,405 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 22:09:04,406 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,406 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,408 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 22:09:04,408 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,409 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:09:04,409 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:09:04,409 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,411 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:09:04,412 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7c28c1
2016-10-23 22:09:04,415 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@2be8ff5f ).size(): 1
2016-10-23 22:09:04,416 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 22:09:04,418 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:04,429 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,430 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,431 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,431 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:09:04,443 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:09:04,448 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 22:09:04,448 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:09:04,449 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:09:04,449 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,449 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 22:09:04,449 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:09:04,450 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:09:04,450 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5b3f3ba0
2016-10-23 22:09:04,450 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:09:04,451 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:09:04,451 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@ddf20fd
2016-10-23 22:09:04,451 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:09:04,451 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:09:04,451 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@278f8425
2016-10-23 22:09:04,452 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9
2016-10-23 22:09:04,452 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,487 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:09:04,487 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:04,487 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,487 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:09:04,487 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:09:04,487 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,489 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:09:04,490 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 22:09:04,492 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,492 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,493 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,493 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,494 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,494 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,494 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,495 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,495 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,495 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 22:09:04,495 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,497 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 22:09:04,497 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,497 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,498 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 22:09:04,498 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,498 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:09:04,499 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 22:09:04,499 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,500 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 22:09:04,500 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@5eeedb60
2016-10-23 22:09:04,503 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7b0f2e5e ).size(): 1
2016-10-23 22:09:04,503 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 22:09:04,504 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:04,505 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,507 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:09:04,507 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,508 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,508 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,508 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,509 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,509 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:09:04,513 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:09:04,516 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:09:04,520 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:04,522 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,522 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:09:04,523 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:09:04,522 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 22:09:04,523 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:09:04,523 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 22:09:04,524 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:09:04,524 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 7, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,530 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:09:04,531 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@6c80f82.acquireResource() returning. 
2016-10-23 22:09:04,531 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@3972a855 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1f7713b9)
2016-10-23 22:09:04,531 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:09:04,531 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vgv3ww1izc4hr|2638011]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:09:04,534 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:09:04,537 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 22:09:04,538 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,538 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:09:04,539 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:09:04,539 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:09:04,540 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:09:04,540 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@30b7c004
2016-10-23 22:09:04,540 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:09:04,541 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:09:04,541 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 22:09:04,542 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:09:04,542 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:09:04,543 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 22:09:04,543 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,544 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:09:04,544 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 22:09:04,545 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:09:04,547 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 22:09:04,549 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@482bce4f: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@19593091
2016-10-23 22:09:04,550 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@5803827e ).size(): 1
2016-10-23 22:09:04,551 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 22:09:04,567 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:09:04,569 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,570 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:09:04,570 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,571 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,572 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:09:04,572 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,572 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:09:04,572 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 22:09:04,576 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:16:23,526 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 22:16:23,602 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 22:16:23,667 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 22:16:23,667 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 22:16:23,668 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 22:16:23,680 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 22:16:23,693 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 22:16:23,697 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 22:16:23,706 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 22:16:23,706 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 22:16:23,860 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 22:16:23,862 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 22:16:23,865 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 22:16:23,877 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 22:16:23,911 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 22:16:23,927 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 22:16:24,152 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:16:24,152 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:16:24,152 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:16:24,153 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 22:16:24,155 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 22:16:24,156 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 22:16:24,157 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:16:24,158 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:16:24,158 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:16:24,160 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:16:24,160 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:16:24,161 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:16:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:16:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:16:24,163 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:16:24,165 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:16:24,165 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:16:24,166 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:16:24,167 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:16:24,167 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:16:24,167 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:16:24,170 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:16:24,170 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:16:24,170 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:16:24,172 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:16:24,172 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:16:24,172 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:16:24,175 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:16:24,175 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:16:24,177 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:16:24,177 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:16:24,178 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:24,178 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:24,180 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 22:16:24,181 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 22:16:24,182 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:16:24,182 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:16:24,185 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:16:24,185 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:16:24,203 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:16:24,203 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:16:24,205 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:16:24,206 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:16:24,207 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:16:24,212 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:16:24,215 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:16:24,215 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:16:24,221 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:16:24,222 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:16:24,225 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:16:24,225 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:16:24,230 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:16:24,231 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:16:24,233 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:16:24,233 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:16:24,236 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:16:24,236 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:16:24,237 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:24,238 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:24,238 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:24,245 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 22:16:24,248 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:16:24,248 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:16:24,248 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:16:24,251 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 22:16:24,252 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:16:24,252 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:16:24,255 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:16:24,255 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:16:24,257 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:16:24,258 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:16:24,260 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:16:24,260 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:16:24,262 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:16:24,262 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:16:24,263 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 22:16:24,266 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:16:24,266 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:16:24,266 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:16:24,268 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:16:24,268 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:16:24,268 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:16:24,271 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 22:16:24,272 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 22:16:24,273 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:16:24,273 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:16:24,275 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:16:24,276 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:16:24,276 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:16:24,277 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:16:24,278 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 22:16:24,280 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 22:16:24,286 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:16:24,287 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:16:24,288 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 22:16:24,296 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:16:24,297 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:16:24,302 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:16:24,303 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:16:24,303 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 22:16:24,305 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 22:16:24,307 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 22:16:24,312 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:16:24,312 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:16:24,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 22:16:24,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 22:16:24,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 22:16:24,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 22:16:24,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 22:16:24,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 22:16:24,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 22:16:24,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 22:16:24,332 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 22:16:24,333 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 22:16:24,333 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 22:16:24,367 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 22:16:24,848 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 22:16:24,867 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh4ln1av367r|2898ac89,name=1hgel1d9j1vh4ln1av367r|2898ac89 registered.
2016-10-23 22:16:24,886 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh4ln1av367r|2898ac89,name=1hgel1d9j1vh4ln1av367r|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 22:16:24,886 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh4ln1av367r|2898ac89,name=1hgel1d9j1vh4ln1av367r|2898ac89 registered.
2016-10-23 22:16:24,892 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 22:16:24,915 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@c16d1af1 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@903beea8 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vh4ln1av367r|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@4c99cb22 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vh4ln1av367r|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vh4ln1av367r|2898ac89, numHelperThreads -> 3 ]
2016-10-23 22:16:24,931 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:16:24,932 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:16:24,932 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 22:16:24,932 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:16:24,932 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:16:24,933 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 22:16:24,933 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:16:24,933 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:16:24,933 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 22:16:24,933 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 22:16:24,935 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:16:24,935 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 22:16:24,935 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 22:16:24,935 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 22:16:24,935 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 22:16:24,936 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 22:16:24,936 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 22:16:24,936 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 22:16:24,937 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 22:16:24,937 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 22:16:25,216 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,216 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,217 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 22:16:25,218 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:16:25,218 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,218 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:16:25,218 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:16:25,218 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,226 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 22:16:25,226 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 22:16:25,231 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,231 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:25,231 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,231 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:16:25,231 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:16:25,237 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 22:16:25,246 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,246 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:25,246 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,246 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:16:25,246 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:16:25,256 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 22:16:25,306 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 22:16:25,308 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 22:16:25,321 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 22:16:25,321 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,322 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 22:16:25,323 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:25,323 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:25,353 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 22:16:25,353 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 22:16:25,355 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:16:25,355 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:16:25,356 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 22:16:25,357 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 22:16:25,357 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 22:16:25,358 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:16:25,360 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 22:16:25,360 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 22:16:25,361 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 22:16:25,362 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 22:16:25,362 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:16:25,363 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 22:16:25,395 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 22:16:25,458 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 22:16:25,482 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 22:16:25,488 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 22:16:25,493 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 22:16:25,515 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,517 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 22:16:25,520 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 22:16:25,521 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 22:16:25,523 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 22:16:25,528 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,530 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 22:16:25,530 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 22:16:25,530 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 22:16:25,530 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 22:16:25,530 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,531 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 22:16:25,531 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 22:16:25,531 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 22:16:25,531 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 22:16:25,531 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,532 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 22:16:25,532 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 22:16:25,532 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 22:16:25,532 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 22:16:25,533 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,533 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 22:16:25,533 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 22:16:25,533 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 22:16:25,535 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 22:16:25,535 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,535 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 22:16:25,536 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 22:16:25,537 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 22:16:25,537 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 22:16:25,537 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,537 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 22:16:25,538 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 22:16:25,538 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 22:16:25,538 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 22:16:25,540 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,540 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 22:16:25,542 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 22:16:25,542 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 22:16:25,543 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 22:16:25,543 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,543 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 22:16:25,543 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 22:16:25,545 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 22:16:25,545 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 22:16:25,545 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,546 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 22:16:25,546 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 22:16:25,546 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 22:16:25,546 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 22:16:25,547 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,547 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 22:16:25,547 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 22:16:25,548 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 22:16:25,548 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 22:16:25,550 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:16:25,550 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 22:16:25,550 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 22:16:25,550 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 22:16:25,550 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 22:16:25,552 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 22:16:25,552 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 22:16:25,552 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 22:16:25,552 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 22:16:25,552 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 22:16:25,553 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 22:16:25,555 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 22:16:25,556 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 22:16:25,595 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 22:16:25,596 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 22:16:25,596 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 22:16:25,596 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 22:16:25,596 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 22:16:25,596 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 22:16:25,597 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 22:16:25,598 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 22:16:25,600 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 22:16:25,601 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 22:16:25,601 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 22:16:25,601 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 22:16:25,601 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 22:16:25,601 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 22:16:25,662 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 22:16:25,662 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2324762143126276199.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire5985103194248414419tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_03605496695110599073tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2324762143126276199.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 22:16:25,759 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:16:25,759 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:16:25,774 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 22:16:25,779 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 22:16:25,799 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 22:16:25,843 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:16:25,844 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:16:25,857 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:16:25,857 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:16:25,907 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 22:16:25,907 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 22:16:25,908 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 22:16:25,908 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:16:25,908 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 22:16:25,908 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 22:16:25,933 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 22:16:25,934 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,936 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,937 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,937 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,937 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,937 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,937 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,952 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,959 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,962 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:25,963 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 22:16:25,963 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,963 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,963 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,964 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,964 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,964 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,964 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,964 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,966 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,966 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,967 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,967 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,967 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,967 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,968 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,968 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,969 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:25,969 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 22:16:25,969 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,969 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,971 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,971 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,971 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,971 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,971 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,972 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,973 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,973 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,974 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,974 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:25,974 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 22:16:25,976 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,976 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,976 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,976 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,976 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,977 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,978 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,978 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,978 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,978 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,979 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,979 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:25,979 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 22:16:25,981 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,981 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,981 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,981 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,981 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,982 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,983 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,983 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,983 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,984 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,984 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,986 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:25,986 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 22:16:25,986 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,987 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,988 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,988 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,988 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,988 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,988 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,989 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,989 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:25,989 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 22:16:25,989 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,991 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,992 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,993 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,993 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,994 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,994 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 22:16:25,994 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:25,996 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:25,997 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:25,997 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:25,997 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:25,997 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:25,997 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:25,998 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:25,998 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:25,998 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:25,998 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:25,998 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:25,999 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:25,999 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:26,001 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:26,002 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:26,002 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:26,002 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:26,003 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:26,003 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:26,004 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:16:26,004 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 22:16:26,004 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:26,006 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:26,006 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:26,006 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:26,006 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:26,006 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:26,007 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:26,007 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:26,007 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:26,007 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:26,007 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:26,008 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:26,008 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:26,008 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:26,009 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:26,009 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:26,011 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:26,011 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 22:16:26,011 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:16:26,011 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:16:26,011 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:16:26,012 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:16:26,012 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:16:26,012 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:16:26,012 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:16:26,012 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:16:26,013 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:16:26,014 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:16:26,014 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:16:26,016 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:26,044 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:26,046 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:16:26,096 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:26,098 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 22:16:26,183 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:26,184 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@649725e3
2016-10-23 22:16:26,184 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:26,184 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 22:16:26,186 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 22:16:26,186 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:16:26,188 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 22:16:26,189 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 22:16:26,191 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 22:16:26,192 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1da881
2016-10-23 22:16:26,194 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 280e446e-aecb-47e1-aca4-609437581826 (<unnamed>)
2016-10-23 22:16:26,194 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 22:16:26,314 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 22:16:26,328 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:26,328 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:26,343 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 22:16:26,363 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 22:16:26,365 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 22:16:26,366 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 22:16:26,369 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 22:16:26,370 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 22:16:26,371 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 22:16:26,376 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 22:16:23 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 22:16:23 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 22:16:23 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 22:16:23 CEST 2016}
2016-10-23 22:16:26,411 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:16:26,418 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 22:16:26,440 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@960eac3 ).size(): 1
2016-10-23 22:16:26,440 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 22:16:26,485 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:16:26,517 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:16:26,517 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:16:26,518 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 22:16:26,519 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:26,519 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:16:26,520 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:16:26,524 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:16:26,895 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 22:16:26,944 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:26,945 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:26,968 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 22:16:26,969 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 22:16:27,023 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:16:27,035 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 22:16:27,036 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,095 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,142 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,145 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,149 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,149 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 22:16:27,165 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,165 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,166 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 22:16:27,167 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,178 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:16:27,178 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 22:16:27,179 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,202 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 22:16:27,205 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 22:16:27,219 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@960eac3 ).size(): 2
2016-10-23 22:16:27,219 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 22:16:27,222 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,226 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,231 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:16:27,232 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,233 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:16:27,233 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,233 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:16:27,234 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,234 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:16:27,234 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:16:27,235 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:16:27,236 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,236 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:16:27,237 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,237 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:16:27,237 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,238 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:16:27,238 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,238 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:16:27,238 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,239 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:16:27,239 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,239 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:16:27,239 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,239 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:16:27,240 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,240 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:16:27,240 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,241 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 22:16:27,241 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,241 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 22:16:27,241 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,241 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 22:16:27,242 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,242 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 22:16:27,242 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,244 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,245 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,246 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,246 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,247 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:16:27,247 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:16:27,247 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,248 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,248 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 22:16:27,265 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:16:27,419 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,419 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,420 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:16:27,427 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 22:16:27,428 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,428 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,429 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,429 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,432 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,434 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,435 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,438 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,438 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 22:16:27,439 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,439 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,440 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 22:16:27,440 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,440 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:16:27,441 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 22:16:27,441 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,442 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 22:16:27,443 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 22:16:27,449 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@63e873ab ).size(): 1
2016-10-23 22:16:27,450 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 22:16:27,466 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,467 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,467 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:16:27,468 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,468 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:16:27,468 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,468 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:16:27,470 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,470 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:16:27,470 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,470 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:16:27,470 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,471 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:16:27,471 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,472 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:16:27,472 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,472 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:16:27,473 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,473 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:16:27,475 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,475 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:16:27,475 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,476 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:16:27,476 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,476 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:16:27,476 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,476 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,477 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:16:27,477 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 22:16:27,486 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:16:27,512 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,512 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,514 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:16:27,517 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:16:27,517 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,518 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,519 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,519 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,520 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,520 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,521 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,523 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,524 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,524 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,525 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,526 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,526 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,527 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,527 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:16:27,528 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,528 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,529 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:16:27,529 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,531 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:16:27,532 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:16:27,532 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,533 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:16:27,534 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 22:16:27,535 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@21f58275 ).size(): 1
2016-10-23 22:16:27,535 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 22:16:27,538 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 22:16:27,539 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 22:16:27,604 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 22:16:27,604 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:16:27,626 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 22:16:27,627 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,627 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,631 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:16:27,633 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 22:16:27,634 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,636 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,639 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,640 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,641 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,642 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,642 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,642 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,643 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 22:16:27,644 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,645 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,647 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 22:16:27,647 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,648 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:16:27,648 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 22:16:27,648 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,649 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 22:16:27,650 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@47c64cfe
2016-10-23 22:16:27,652 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@6bc2568c ).size(): 1
2016-10-23 22:16:27,652 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 22:16:27,654 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,654 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,655 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:16:27,655 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,656 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,657 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,657 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,657 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,658 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 22:16:27,661 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:16:27,665 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 22:16:27,665 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:16:27,666 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:16:27,666 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,666 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,668 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:16:27,670 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 22:16:27,671 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,671 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,671 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,672 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,672 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,673 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,673 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,673 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,674 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,674 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 22:16:27,674 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,674 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 22:16:27,675 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,675 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,676 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 22:16:27,676 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,677 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:16:27,677 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 22:16:27,677 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,678 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 22:16:27,679 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7004e3d
2016-10-23 22:16:27,679 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1f7e942b ).size(): 1
2016-10-23 22:16:27,680 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 22:16:27,681 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,682 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,683 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:16:27,684 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,686 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,687 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,687 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,687 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:16:27,688 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:16:27,692 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:16:27,696 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 22:16:27,696 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:16:27,709 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:16:27,709 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,709 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 22:16:27,710 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:16:27,710 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:16:27,711 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4482469c
2016-10-23 22:16:27,711 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:16:27,711 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:16:27,711 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@3703bf3c
2016-10-23 22:16:27,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:16:27,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:16:27,712 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@34cf5a97
2016-10-23 22:16:27,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6
2016-10-23 22:16:27,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,785 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:16:27,787 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:27,787 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,787 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:16:27,787 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:16:27,789 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,790 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:16:27,793 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 22:16:27,794 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,794 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,795 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,796 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,796 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,797 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,797 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,798 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,798 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,798 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,799 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,799 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,800 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,800 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,800 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,801 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 22:16:27,801 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,801 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 22:16:27,802 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,802 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,803 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 22:16:27,804 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,804 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:16:27,804 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:16:27,805 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,806 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:16:27,806 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4b1abd11
2016-10-23 22:16:27,808 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@708077a8 ).size(): 1
2016-10-23 22:16:27,808 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 22:16:27,809 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,813 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,814 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,814 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,815 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:16:27,827 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:16:27,830 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:16:27,832 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:27,832 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,832 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:16:27,832 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:16:27,831 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 22:16:27,833 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:16:27,833 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:16:27,833 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:16:27,834 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,836 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:16:27,839 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:16:27,840 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,840 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:16:27,841 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:16:27,841 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:16:27,842 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,842 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:16:27,843 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:16:27,844 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,844 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,845 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,845 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:16:27,845 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:16:27,846 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:16:27,846 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:16:27,847 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:16:27,847 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:16:27,848 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:16:27,849 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:16:27,849 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,850 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:16:27,850 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:16:27,850 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:16:27,853 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:16:27,853 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@2b9b7f1f
2016-10-23 22:16:27,856 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7d3a22e2 ).size(): 1
2016-10-23 22:16:27,856 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 22:16:27,857 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:16:27,858 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,860 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,860 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:16:27,861 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 22:16:27,864 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:16:27,871 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 22:16:27,874 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@1328a27e.acquireResource() returning. 
2016-10-23 22:16:27,874 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@532c62c6)
2016-10-23 22:16:27,874 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:16:27,874 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh4ln1av367r|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:18:30,651 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 22:18:30,716 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 22:18:30,786 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 22:18:30,787 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 22:18:30,787 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 22:18:30,798 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 22:18:30,808 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 22:18:30,812 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 22:18:30,820 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 22:18:30,820 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 22:18:30,960 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 22:18:30,963 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 22:18:30,965 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 22:18:30,979 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 22:18:31,017 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 22:18:31,032 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 22:18:31,263 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:18:31,263 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:18:31,264 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:18:31,267 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 22:18:31,269 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 22:18:31,270 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 22:18:31,272 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:18:31,273 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:18:31,273 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:18:31,274 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:18:31,274 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:18:31,275 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:18:31,277 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:18:31,277 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:18:31,278 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:18:31,278 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:18:31,279 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:18:31,279 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:18:31,280 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:18:31,282 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:18:31,282 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:18:31,283 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:18:31,284 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:18:31,284 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:18:31,285 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:18:31,287 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:18:31,287 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:18:31,288 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:18:31,289 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:18:31,290 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:18:31,290 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:18:31,292 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:31,292 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:31,293 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 22:18:31,294 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 22:18:31,295 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:18:31,297 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:18:31,298 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:18:31,298 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:18:31,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:18:31,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:18:31,318 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:18:31,318 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:18:31,320 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:18:31,320 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:18:31,323 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:18:31,323 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:18:31,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:18:31,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:18:31,327 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:18:31,328 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:18:31,332 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:18:31,333 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:18:31,334 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:18:31,334 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:18:31,335 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:18:31,337 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:18:31,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:31,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:31,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:31,340 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 22:18:31,343 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:18:31,343 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:18:31,344 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:18:31,345 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 22:18:31,347 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:18:31,347 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:18:31,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:18:31,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:18:31,349 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:18:31,349 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:18:31,352 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:18:31,352 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:18:31,354 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:18:31,354 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:18:31,355 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 22:18:31,357 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:18:31,357 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:18:31,357 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:18:31,359 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:18:31,359 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:18:31,359 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:18:31,360 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 22:18:31,362 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 22:18:31,363 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:18:31,364 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:18:31,364 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:18:31,365 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:18:31,365 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:18:31,365 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:18:31,367 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 22:18:31,368 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 22:18:31,372 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:18:31,372 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:18:31,373 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 22:18:31,377 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:18:31,377 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:18:31,380 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:18:31,382 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:18:31,382 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 22:18:31,383 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 22:18:31,385 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 22:18:31,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:18:31,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:18:31,390 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 22:18:31,390 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 22:18:31,392 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 22:18:31,404 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 22:18:31,405 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 22:18:31,405 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 22:18:31,434 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 22:18:31,937 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 22:18:31,956 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh7boy1757yy5|2898ac89,name=1hgel1d9j1vh7boy1757yy5|2898ac89 registered.
2016-10-23 22:18:31,977 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh7boy1757yy5|2898ac89,name=1hgel1d9j1vh7boy1757yy5|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 22:18:31,979 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vh7boy1757yy5|2898ac89,name=1hgel1d9j1vh7boy1757yy5|2898ac89 registered.
2016-10-23 22:18:31,986 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 22:18:32,007 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@7afda3ab [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@49cc7762 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vh7boy1757yy5|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@5ad84328 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vh7boy1757yy5|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vh7boy1757yy5|2898ac89, numHelperThreads -> 3 ]
2016-10-23 22:18:32,027 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:18:32,027 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:18:32,027 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 22:18:32,029 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:18:32,029 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:18:32,029 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 22:18:32,029 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:18:32,030 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:18:32,030 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 22:18:32,030 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 22:18:32,030 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:18:32,031 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 22:18:32,031 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 22:18:32,031 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 22:18:32,031 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 22:18:32,032 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 22:18:32,032 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 22:18:32,034 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 22:18:32,034 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 22:18:32,035 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:32,375 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:18:32,376 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:18:32,377 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,386 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,386 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:32,386 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,386 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:18:32,386 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:18:32,387 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 22:18:32,387 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 22:18:32,389 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 22:18:32,390 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,391 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:32,391 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,391 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:18:32,391 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:18:32,402 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 22:18:32,450 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 22:18:32,452 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 22:18:32,471 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 22:18:32,471 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,472 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 22:18:32,474 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:32,474 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:32,504 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 22:18:32,505 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 22:18:32,506 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:18:32,506 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:18:32,506 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 22:18:32,507 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 22:18:32,509 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 22:18:32,510 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:18:32,510 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 22:18:32,511 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 22:18:32,511 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 22:18:32,512 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 22:18:32,512 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:18:32,514 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 22:18:32,545 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 22:18:32,615 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 22:18:32,640 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 22:18:32,647 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 22:18:32,651 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 22:18:32,674 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,679 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 22:18:32,681 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 22:18:32,684 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 22:18:32,689 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 22:18:32,694 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,694 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 22:18:32,695 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 22:18:32,695 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 22:18:32,695 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 22:18:32,695 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,695 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 22:18:32,696 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 22:18:32,696 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 22:18:32,696 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 22:18:32,696 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,696 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 22:18:32,697 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 22:18:32,697 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 22:18:32,697 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 22:18:32,697 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,699 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 22:18:32,699 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 22:18:32,699 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 22:18:32,699 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 22:18:32,699 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,700 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 22:18:32,700 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 22:18:32,700 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 22:18:32,700 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 22:18:32,701 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,701 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 22:18:32,701 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 22:18:32,702 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 22:18:32,702 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 22:18:32,702 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,702 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 22:18:32,704 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 22:18:32,704 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 22:18:32,704 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 22:18:32,705 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,705 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 22:18:32,705 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 22:18:32,705 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 22:18:32,706 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 22:18:32,706 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,706 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 22:18:32,707 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 22:18:32,707 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 22:18:32,707 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 22:18:32,707 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,709 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 22:18:32,709 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 22:18:32,709 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 22:18:32,709 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 22:18:32,710 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,710 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 22:18:32,710 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 22:18:32,710 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 22:18:32,711 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 22:18:32,711 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,711 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 22:18:32,711 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 22:18:32,712 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 22:18:32,712 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 22:18:32,712 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:18:32,712 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 22:18:32,714 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 22:18:32,714 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 22:18:32,714 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 22:18:32,716 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 22:18:32,716 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 22:18:32,716 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 22:18:32,717 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 22:18:32,719 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 22:18:32,719 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 22:18:32,719 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 22:18:32,719 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 22:18:32,721 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 22:18:32,765 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 22:18:32,767 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 22:18:32,769 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 22:18:32,770 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 22:18:32,770 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 22:18:32,770 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 22:18:32,770 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 22:18:32,771 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 22:18:32,771 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 22:18:32,771 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 22:18:32,771 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 22:18:32,771 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 22:18:32,772 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 22:18:32,772 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 22:18:32,772 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 22:18:32,772 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 22:18:32,772 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 22:18:32,774 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 22:18:32,837 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 22:18:32,837 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter8390874344060432545.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire3882531188581803568tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_02028899953353342202tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter8390874344060432545.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 22:18:32,918 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:18:32,920 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:18:32,935 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 22:18:32,940 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 22:18:32,962 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 22:18:33,004 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:18:33,004 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:18:33,019 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:18:33,020 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:18:33,071 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 22:18:33,071 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 22:18:33,071 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 22:18:33,071 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:18:33,071 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 22:18:33,072 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 22:18:33,092 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,096 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,114 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,121 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,125 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,125 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 22:18:33,125 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,126 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,127 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,129 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,130 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,130 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,131 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,132 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,132 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 22:18:33,132 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,134 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,135 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,136 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,136 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,136 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,136 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,137 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,137 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,139 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,140 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,140 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,140 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 22:18:33,141 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,141 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,142 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,144 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,145 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,145 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,146 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,146 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,147 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,147 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 22:18:33,147 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,149 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,149 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,149 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,149 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,149 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,150 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,150 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,150 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,150 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,151 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,151 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,151 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,152 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,154 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,154 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,155 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,155 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 22:18:33,156 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,156 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,156 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,156 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,156 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,157 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,157 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,157 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,157 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,157 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,159 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,159 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,159 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,159 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,160 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,160 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,161 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,161 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 22:18:33,161 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,161 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,162 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,162 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,162 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,162 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,162 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,164 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,164 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,164 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,164 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,164 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,165 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,165 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,165 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,166 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,166 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 22:18:33,166 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 22:18:33,167 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,167 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,167 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,167 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,169 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,170 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,170 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,170 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,170 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,171 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,171 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,172 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,172 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 22:18:33,174 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,174 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,174 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,174 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,174 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,175 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,175 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,175 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,175 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,176 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,176 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,176 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,176 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,176 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,179 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,179 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,180 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:18:33,180 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 22:18:33,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,184 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,184 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,184 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,184 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,185 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,185 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,185 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,186 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,186 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,186 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 22:18:33,187 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:18:33,187 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:18:33,187 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:18:33,187 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:18:33,189 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:18:33,189 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:18:33,189 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:18:33,189 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:18:33,189 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:18:33,190 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:18:33,190 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:18:33,190 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:18:33,190 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:18:33,190 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:18:33,191 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:18:33,191 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:18:33,192 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,216 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,216 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:18:33,284 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:33,287 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 22:18:33,369 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:33,369 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@649725e3
2016-10-23 22:18:33,369 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:33,370 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:18:33,370 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 22:18:33,371 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 22:18:33,375 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 22:18:33,376 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 22:18:33,376 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 22:18:33,379 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1da881
2016-10-23 22:18:33,383 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 5329d0ca-1648-4ae0-9d8d-1472d64cc7f2 (<unnamed>)
2016-10-23 22:18:33,383 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 22:18:33,511 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 22:18:33,525 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:33,526 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:33,538 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 22:18:33,563 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 22:18:33,565 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 22:18:33,567 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 22:18:33,570 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 22:18:33,570 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 22:18:33,572 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 22:18:33,578 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 22:18:30 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 22:18:30 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 22:18:30 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 22:18:30 CEST 2016}
2016-10-23 22:18:33,617 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:18:33,625 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 22:18:33,643 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@38afb296 ).size(): 1
2016-10-23 22:18:33,644 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 22:18:33,688 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:18:33,693 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:18:33,693 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:18:33,694 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 22:18:33,694 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:33,694 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:18:33,694 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:18:33,699 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:18:34,015 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 22:18:34,064 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,064 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,086 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 22:18:34,088 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 22:18:34,140 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:18:34,154 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 22:18:34,154 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,195 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,251 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,252 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,255 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,256 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 22:18:34,270 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,271 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,271 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 22:18:34,272 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,282 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:18:34,282 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 22:18:34,282 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,300 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 22:18:34,303 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 22:18:34,304 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@38afb296 ).size(): 2
2016-10-23 22:18:34,304 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 22:18:34,309 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,313 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,318 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:18:34,319 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,320 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:18:34,320 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,322 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:18:34,322 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:18:34,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:18:34,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:18:34,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,328 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:18:34,328 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,328 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:18:34,329 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,329 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:18:34,329 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,329 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:18:34,330 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,330 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:18:34,330 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,330 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:18:34,330 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,332 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:18:34,332 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,332 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:18:34,333 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,333 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 22:18:34,333 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,333 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 22:18:34,334 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,334 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 22:18:34,334 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,335 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 22:18:34,335 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,336 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 22:18:34,336 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,337 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,338 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,339 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,339 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,339 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:18:34,340 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:18:34,340 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,341 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,342 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 22:18:34,382 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:18:34,487 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,487 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,496 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:18:34,499 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 22:18:34,499 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,500 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,500 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,501 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,504 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,506 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,507 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,509 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,509 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 22:18:34,510 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,510 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,511 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 22:18:34,511 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,512 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:18:34,512 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 22:18:34,512 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,513 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 22:18:34,514 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 22:18:34,516 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@2f33b017 ).size(): 1
2016-10-23 22:18:34,516 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 22:18:34,518 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,518 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,519 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:18:34,520 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,520 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:18:34,520 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,520 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:18:34,521 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,521 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:18:34,521 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,521 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:18:34,522 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,522 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:18:34,522 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,522 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:18:34,523 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,523 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:18:34,523 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,523 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:18:34,524 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,524 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:18:34,524 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,524 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:18:34,525 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,525 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:18:34,525 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,525 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:18:34,526 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,526 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,526 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:18:34,527 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 22:18:34,536 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:18:34,567 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,567 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,568 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:18:34,573 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:18:34,573 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,573 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,574 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,575 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,575 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,576 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,576 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,583 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,584 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,584 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,585 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,585 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,586 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,586 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,587 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:18:34,587 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,587 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,589 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:18:34,589 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,591 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:18:34,591 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:18:34,592 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,593 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:18:34,594 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 22:18:34,595 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@251dee17 ).size(): 1
2016-10-23 22:18:34,596 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 22:18:34,597 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 22:18:34,598 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 22:18:34,617 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 22:18:34,617 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:18:34,638 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:18:34,639 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,639 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,642 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:18:34,647 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:18:34,647 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,647 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,648 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,649 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,649 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,649 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,651 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,651 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,651 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,652 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,653 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,653 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,653 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,654 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,654 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:18:34,656 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,657 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,658 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:18:34,658 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,658 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:18:34,659 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:18:34,659 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,659 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:18:34,661 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@47c64cfe
2016-10-23 22:18:34,662 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@65bd6d2f ).size(): 1
2016-10-23 22:18:34,662 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 22:18:34,664 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,664 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,666 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,667 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,667 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 22:18:34,671 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:18:34,682 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 22:18:34,682 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:18:34,683 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 22:18:34,683 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,683 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,693 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:18:34,698 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 22:18:34,699 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,700 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,701 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,701 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,702 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,703 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,703 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,704 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,704 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 22:18:34,707 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,707 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,708 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 22:18:34,708 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,708 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:18:34,709 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 22:18:34,709 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,711 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 22:18:34,712 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7c211fd0
2016-10-23 22:18:34,718 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@6d7d295d ).size(): 1
2016-10-23 22:18:34,719 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 22:18:34,720 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,721 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,721 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:18:34,722 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,722 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,723 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,723 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,723 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,723 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:18:34,730 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:18:34,737 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 22:18:34,737 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:18:34,738 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:18:34,738 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,738 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 22:18:34,739 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:18:34,739 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:18:34,739 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@25d958c6
2016-10-23 22:18:34,739 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:18:34,739 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:18:34,740 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@4482469c
2016-10-23 22:18:34,740 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:18:34,740 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:18:34,740 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@3703bf3c
2016-10-23 22:18:34,740 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08
2016-10-23 22:18:34,741 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,779 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:18:34,779 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:34,780 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,780 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:18:34,780 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:18:34,788 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,790 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:18:34,796 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 22:18:34,796 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,797 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,798 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,798 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,799 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,799 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,800 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,800 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,800 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,801 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 22:18:34,801 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,801 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 22:18:34,802 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,803 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,804 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:18:34,805 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:34,806 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,807 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:18:34,807 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:18:34,805 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 22:18:34,807 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,808 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:18:34,808 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 22:18:34,808 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,810 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 22:18:34,812 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@695a69a1
2016-10-23 22:18:34,814 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4b75f018 ).size(): 1
2016-10-23 22:18:34,815 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 22:18:34,822 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 22:18:34,822 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@d5691e7.acquireResource() returning. 
2016-10-23 22:18:34,822 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,823 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:18:34,823 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vh7boy1757yy5|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:18:34,823 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,824 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,825 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:18:34,825 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,826 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,827 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,827 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,827 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:18:34,828 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 22:18:34,832 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:18:34,836 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 22:18:34,836 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:18:34,843 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:18:34,843 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:18:34,844 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3d986b08)
2016-10-23 22:18:34,854 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:18:34,863 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 22:18:34,863 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,864 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:18:34,864 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:18:34,865 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:18:34,865 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,866 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,866 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:18:34,867 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,867 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,868 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,868 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,869 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:18:34,869 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:18:34,870 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:18:34,870 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 22:18:34,870 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 22:18:34,871 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:18:34,871 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 22:18:34,872 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:18:34,872 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:18:34,874 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 22:18:34,874 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,875 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 22:18:34,875 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:18:34,875 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:18:34,877 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 22:18:34,878 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@2b9b7f1f
2016-10-23 22:18:34,879 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@5798215 ).size(): 1
2016-10-23 22:18:34,880 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 22:18:34,882 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:18:34,882 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,883 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,884 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:18:34,884 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 22:18:34,887 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:20:48,311 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 22:20:48,367 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 22:20:48,447 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 22:20:48,449 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 22:20:48,450 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 22:20:48,466 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 22:20:48,481 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 22:20:48,485 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 22:20:48,492 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 22:20:48,494 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 22:20:48,690 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 22:20:48,694 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 22:20:48,696 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 22:20:48,715 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 22:20:48,761 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 22:20:48,782 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 22:20:48,944 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:20:48,945 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:20:48,945 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 22:20:48,947 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 22:20:48,950 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 22:20:48,951 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 22:20:48,955 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:20:48,955 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:20:48,955 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 22:20:48,959 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:20:48,960 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:20:48,960 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 22:20:48,962 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:20:48,964 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:20:48,964 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 22:20:48,966 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:20:48,966 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:20:48,966 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 22:20:48,970 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:20:48,970 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:20:48,970 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 22:20:48,974 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:20:48,974 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:20:48,975 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 22:20:48,976 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:20:48,977 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:20:48,977 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 22:20:48,981 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:20:48,981 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 22:20:48,984 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:20:48,984 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 22:20:48,986 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:48,986 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:48,989 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 22:20:48,991 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 22:20:48,992 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:20:48,994 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 22:20:48,996 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:20:48,996 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 22:20:49,022 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:20:49,022 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 22:20:49,025 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:20:49,026 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 22:20:49,029 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:20:49,030 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 22:20:49,032 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:20:49,034 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 22:20:49,036 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:20:49,036 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 22:20:49,039 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:20:49,040 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 22:20:49,046 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:20:49,046 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 22:20:49,050 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:20:49,051 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 22:20:49,052 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:20:49,054 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 22:20:49,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:49,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:49,061 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:49,066 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 22:20:49,068 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:20:49,069 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:20:49,069 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 22:20:49,071 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 22:20:49,073 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:20:49,073 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 22:20:49,076 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:20:49,077 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 22:20:49,079 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:20:49,079 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 22:20:49,081 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:20:49,082 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 22:20:49,085 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:20:49,086 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 22:20:49,086 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 22:20:49,088 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:20:49,088 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:20:49,089 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 22:20:49,091 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:20:49,092 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:20:49,092 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 22:20:49,093 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 22:20:49,096 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 22:20:49,097 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:20:49,098 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:20:49,098 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 22:20:49,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:20:49,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:20:49,101 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 22:20:49,102 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 22:20:49,104 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 22:20:49,113 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:20:49,113 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 22:20:49,114 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 22:20:49,122 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:20:49,123 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 22:20:49,129 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:20:49,129 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 22:20:49,131 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 22:20:49,132 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 22:20:49,134 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 22:20:49,141 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:20:49,142 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 22:20:49,143 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 22:20:49,143 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 22:20:49,143 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 22:20:49,144 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 22:20:49,144 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 22:20:49,144 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 22:20:49,144 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 22:20:49,146 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 22:20:49,170 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 22:20:49,171 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 22:20:49,171 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 22:20:49,214 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 22:20:49,857 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 22:20:49,877 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vhaa1muu8lhp|2898ac89,name=1hgel1d9j1vhaa1muu8lhp|2898ac89 registered.
2016-10-23 22:20:49,900 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vhaa1muu8lhp|2898ac89,name=1hgel1d9j1vhaa1muu8lhp|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 22:20:49,900 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vhaa1muu8lhp|2898ac89,name=1hgel1d9j1vhaa1muu8lhp|2898ac89 registered.
2016-10-23 22:20:49,909 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 22:20:49,930 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@6486ae9b [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@33558252 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vhaa1muu8lhp|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@78a1a38 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vhaa1muu8lhp|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vhaa1muu8lhp|2898ac89, numHelperThreads -> 3 ]
2016-10-23 22:20:49,952 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:20:49,954 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:20:49,954 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 22:20:49,955 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:20:49,955 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:20:49,955 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 22:20:49,955 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:20:49,956 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:20:49,959 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 22:20:49,959 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 22:20:49,959 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:20:49,960 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 22:20:49,960 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 22:20:49,960 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 22:20:49,961 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 22:20:49,961 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 22:20:49,961 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 22:20:49,962 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 22:20:49,962 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 22:20:49,962 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7e293679.acquireResource() returning. 
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7e293679.acquireResource() returning. 
2016-10-23 22:20:50,367 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7e293679.acquireResource() returning. 
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,369 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 22:20:50,370 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:20:50,370 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,375 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 22:20:50,375 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 22:20:50,376 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 22:20:50,391 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,392 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7e293679.acquireResource() returning. 
2016-10-23 22:20:50,392 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,392 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 22:20:50,392 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:20:50,395 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 22:20:50,396 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,397 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@7e293679.acquireResource() returning. 
2016-10-23 22:20:50,397 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,397 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 22:20:50,397 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 22:20:50,445 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 22:20:50,449 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 22:20:50,464 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 22:20:50,464 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,467 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 22:20:50,469 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:50,469 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:50,502 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 22:20:50,504 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 22:20:50,504 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:20:50,505 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 22:20:50,505 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 22:20:50,506 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 22:20:50,506 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 22:20:50,507 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:20:50,509 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 22:20:50,510 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 22:20:50,511 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 22:20:50,511 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 22:20:50,512 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 22:20:50,514 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 22:20:50,557 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 22:20:50,631 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 22:20:50,661 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 22:20:50,670 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 22:20:50,675 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 22:20:50,709 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,713 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 22:20:50,715 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 22:20:50,718 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 22:20:50,720 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 22:20:50,724 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,725 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 22:20:50,725 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 22:20:50,725 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 22:20:50,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 22:20:50,726 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,726 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 22:20:50,728 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 22:20:50,728 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 22:20:50,728 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 22:20:50,728 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,728 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 22:20:50,729 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 22:20:50,729 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 22:20:50,729 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 22:20:50,729 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,730 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 22:20:50,730 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 22:20:50,730 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 22:20:50,730 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 22:20:50,731 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,731 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 22:20:50,731 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 22:20:50,733 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 22:20:50,733 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 22:20:50,733 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,734 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 22:20:50,735 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 22:20:50,735 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 22:20:50,735 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 22:20:50,735 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,736 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 22:20:50,736 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 22:20:50,736 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 22:20:50,736 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 22:20:50,738 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,738 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 22:20:50,738 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 22:20:50,738 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 22:20:50,739 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 22:20:50,739 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,739 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 22:20:50,739 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 22:20:50,740 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 22:20:50,740 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 22:20:50,740 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,741 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 22:20:50,741 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 22:20:50,745 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 22:20:50,745 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 22:20:50,745 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,746 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 22:20:50,746 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 22:20:50,746 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 22:20:50,748 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 22:20:50,748 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 22:20:50,748 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 22:20:50,748 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 22:20:50,748 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 22:20:50,749 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 22:20:50,750 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 22:20:50,750 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 22:20:50,751 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 22:20:50,753 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 22:20:50,753 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 22:20:50,753 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 22:20:50,753 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 22:20:50,753 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 22:20:50,755 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 22:20:50,799 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 22:20:50,800 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 22:20:50,801 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 22:20:50,803 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 22:20:50,803 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 22:20:50,803 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 22:20:50,803 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 22:20:50,804 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 22:20:50,805 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 22:20:50,806 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 22:20:50,806 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 22:20:50,878 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 22:20:50,883 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter6649540816158932225.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire8479038076665563549tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_08106039896451057542tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter6649540816158932225.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_111/bin/server;C:/Program Files/Java/jre1.8.0_111/bin;C:/Program Files/Java/jre1.8.0_111/lib/amd64;C:/Program Files/Java/jre1.8.0_91/bin/server;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/amd64;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;C:\Outlook\eclipse;;C:\Outlook\eclipse;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 22:20:50,970 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:20:50,970 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:20:50,992 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 22:20:51,000 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 22:20:51,024 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 22:20:51,074 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:20:51,074 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:20:51,090 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 22:20:51,090 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 22:20:51,149 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 22:20:51,149 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 22:20:51,150 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 22:20:51,150 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:20:51,150 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 22:20:51,150 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 22:20:51,177 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 22:20:51,180 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,180 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,181 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,182 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,182 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,206 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,215 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,219 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,219 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 22:20:51,220 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,220 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,220 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,221 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,221 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,221 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,221 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,222 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,222 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,222 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,222 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,224 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,224 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,224 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,225 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,225 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,226 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,226 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 22:20:51,226 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,227 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,227 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,227 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,229 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,230 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,230 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,230 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,230 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,231 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,231 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,232 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,232 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,232 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 22:20:51,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,234 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,235 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,235 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,235 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,235 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,236 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,236 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,237 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,237 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,239 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,239 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 22:20:51,239 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,240 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,240 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,240 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,240 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,240 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,241 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,245 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,245 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,246 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,246 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,246 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,246 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,247 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,249 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,249 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,249 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 22:20:51,250 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,250 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,250 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,251 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,252 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,252 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,252 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,252 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,252 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,254 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,254 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,255 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,255 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 22:20:51,255 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,256 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,256 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,256 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,256 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,257 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,257 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,262 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,264 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,264 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,264 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,264 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,265 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,265 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,266 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,266 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,267 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 22:20:51,267 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 22:20:51,268 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,268 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,268 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,269 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,269 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,269 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,270 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,270 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,270 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,270 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,271 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,271 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,271 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,272 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,272 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,272 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,273 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,273 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 22:20:51,274 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,274 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,274 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,274 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,275 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,275 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,275 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,276 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,276 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,278 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,278 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,279 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,279 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,280 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,281 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,282 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,283 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 22:20:51,283 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 22:20:51,284 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,284 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,284 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,284 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,285 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,285 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,285 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,286 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,286 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,286 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,286 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,287 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,287 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,287 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,288 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,288 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,288 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,289 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 22:20:51,289 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 22:20:51,289 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 22:20:51,291 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 22:20:51,291 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 22:20:51,291 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 22:20:51,291 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 22:20:51,291 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 22:20:51,292 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 22:20:51,292 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 22:20:51,292 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 22:20:51,292 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 22:20:51,293 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 22:20:51,293 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 22:20:51,293 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 22:20:51,293 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 22:20:51,294 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 22:20:51,294 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,329 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,331 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 22:20:51,388 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:51,392 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 22:20:51,456 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:51,456 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3c0fae6c
2016-10-23 22:20:51,456 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:51,456 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 22:20:51,457 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 22:20:51,458 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 22:20:51,461 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 22:20:51,463 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 22:20:51,463 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 22:20:51,466 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b970f7
2016-10-23 22:20:51,468 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 0f9bca1f-648e-48e3-af50-d5d44dc15908 (<unnamed>)
2016-10-23 22:20:51,468 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 22:20:51,579 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 22:20:51,588 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:51,588 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:51,597 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 22:20:51,614 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 22:20:51,616 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 22:20:51,617 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 22:20:51,618 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 22:20:51,619 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 22:20:51,621 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 22:20:51,627 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 22:20:48 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 22:20:48 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 22:20:48 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 22:20:48 CEST 2016}
2016-10-23 22:20:51,654 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 22:20:51,662 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 22:20:51,682 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4201e17c ).size(): 1
2016-10-23 22:20:51,683 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 22:20:51,735 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:20:51,739 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:20:51,739 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:20:51,740 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 22:20:51,740 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:51,740 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 22:20:51,741 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:20:51,745 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 22:20:52,025 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 22:20:52,081 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,082 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,102 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 22:20:52,102 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 22:20:52,142 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:20:52,154 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 22:20:52,155 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,186 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:20:52,223 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:20:52,225 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:20:52,228 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:20:52,228 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 22:20:52,273 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:20:52,273 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:20:52,274 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 22:20:52,274 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,287 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 22:20:52,287 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 22:20:52,287 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,306 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 22:20:52,307 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 22:20:52,308 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4201e17c ).size(): 2
2016-10-23 22:20:52,309 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 22:20:52,312 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:20:52,316 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,321 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:20:52,321 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:20:52,324 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,324 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:20:52,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,325 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:20:52,325 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:20:52,326 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:20:52,326 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,334 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:20:52,334 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,335 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:20:52,335 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,335 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:20:52,336 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,336 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:20:52,337 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,337 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:20:52,337 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,338 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:20:52,338 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,338 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:20:52,339 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,339 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:20:52,341 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,342 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 22:20:52,342 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,342 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 22:20:52,342 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,343 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 22:20:52,343 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,343 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 22:20:52,343 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,344 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 22:20:52,347 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,348 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 22:20:52,348 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,349 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,350 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,351 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,351 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,351 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:20:52,352 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 22:20:52,352 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,353 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,353 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 22:20:52,386 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:20:52,526 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,526 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,533 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:20:52,537 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 22:20:52,537 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,538 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:20:52,538 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:20:52,539 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:20:52,542 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,544 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:52,546 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:20:52,548 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:20:52,548 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 22:20:52,549 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:20:52,549 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:20:52,550 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 22:20:52,551 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,551 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 22:20:52,552 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 22:20:52,552 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,554 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 22:20:52,555 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 22:20:52,561 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@8b09a6c ).size(): 1
2016-10-23 22:20:52,561 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 22:20:52,563 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:20:52,564 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,565 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:20:52,565 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,566 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 22:20:52,566 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,566 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 22:20:52,566 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,567 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 22:20:52,567 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,567 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 22:20:52,567 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,568 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 22:20:52,568 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,568 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 22:20:52,569 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,569 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 22:20:52,569 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,569 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 22:20:52,570 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,570 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 22:20:52,570 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,570 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 22:20:52,570 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,571 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 22:20:52,571 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,571 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 22:20:52,571 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,572 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 22:20:52,572 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,572 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,572 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 22:20:52,573 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 22:20:52,596 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:20:52,617 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,617 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,619 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:20:52,621 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:20:52,622 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,622 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:20:52,623 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:20:52,624 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:20:52,625 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,625 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:52,626 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:20:52,628 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,629 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:52,629 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:20:52,630 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,631 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:52,631 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:20:52,631 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:20:52,632 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:20:52,632 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:20:52,633 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:20:52,634 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:20:52,635 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,636 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 22:20:52,637 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:20:52,637 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,638 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:20:52,638 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 22:20:52,640 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1ff65acb ).size(): 1
2016-10-23 22:20:52,640 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 22:20:52,642 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 22:20:52,642 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 22:20:52,685 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 22:20:52,686 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:20:52,688 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:20:52,688 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,689 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,694 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:20:52,701 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 22:20:52,701 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,702 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:20:52,703 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:20:52,704 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:20:52,704 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,705 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:52,705 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:20:52,705 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,706 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:52,706 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:20:52,706 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,707 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 22:20:52,707 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 22:20:52,707 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:20:52,708 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 22:20:52,708 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:20:52,709 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:20:52,710 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 22:20:52,710 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,710 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 22:20:52,711 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 22:20:52,711 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,712 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 22:20:52,712 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4525d1d3
2016-10-23 22:20:52,722 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@2635fad ).size(): 1
2016-10-23 22:20:52,723 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 22:20:52,732 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:20:52,733 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,734 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,734 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,734 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 22:20:52,742 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 22:20:52,758 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 22:20:52,758 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:20:52,759 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 22:20:52,759 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,759 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,761 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:20:52,766 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 22:20:52,766 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,767 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 22:20:52,768 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 22:20:52,769 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 22:20:52,769 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 22:20:52,769 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 22:20:52,770 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 22:20:52,770 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 22:20:52,770 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 22:20:52,771 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 22:20:52,771 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 22:20:52,773 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 22:20:52,773 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,774 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 22:20:52,774 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 22:20:52,774 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 22:20:52,776 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 22:20:52,777 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@6e6fce47
2016-10-23 22:20:52,778 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4f418127 ).size(): 1
2016-10-23 22:20:52,778 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 22:20:52,780 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 22:20:52,780 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,781 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 22:20:52,782 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,785 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,786 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 22:20:52,786 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,787 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 22:20:52,787 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 22:20:52,794 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 22:20:52,804 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 22:20:52,805 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 22:20:52,805 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 22:20:52,805 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 22:20:52,806 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 22:20:52,806 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 22:20:52,806 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 22:20:52,807 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@34b9fc7d
2016-10-23 22:20:52,807 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 22:20:52,807 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 22:20:52,807 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@27f1bbe0
2016-10-23 22:20:52,807 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 22:20:52,808 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 22:20:52,808 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@cda0432
2016-10-23 22:20:52,808 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3
2016-10-23 22:20:52,808 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@a882cf3)
2016-10-23 22:20:52,837 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vhaa1muu8lhp|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
