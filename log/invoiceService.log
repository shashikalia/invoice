2016-10-23 23:19:48,513 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:19:48,513 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:19:48,515 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:19:48,515 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:19:48,515 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:19:48,516 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:19:48,516 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:19:48,516 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:19:48,517 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:19:48,598 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:19:48,598 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2718230620804705147.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire855161739526932080tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_05165048918409964683tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter2718230620804705147.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:19:48,675 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:19:48,675 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:19:48,691 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:19:48,696 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:19:48,716 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:19:48,753 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:19:48,755 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:19:48,767 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:19:48,767 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:19:48,813 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:19:48,813 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:19:48,815 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:19:48,815 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:19:48,815 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:19:48,815 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:19:48,835 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,837 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,838 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,840 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,852 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,857 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,860 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,861 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 23:19:48,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,861 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,862 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,863 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,863 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,863 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,863 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,865 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,865 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 23:19:48,865 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,865 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,865 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,865 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,866 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,867 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,867 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,867 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,867 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,868 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,868 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,870 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,871 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,871 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,871 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,872 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,872 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,873 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 23:19:48,873 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,873 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,873 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,875 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,875 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,875 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,875 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,875 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,876 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,876 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,876 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,876 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,876 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,877 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,877 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,878 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,878 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,878 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 23:19:48,880 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,880 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,880 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,880 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,880 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,881 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,882 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,882 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,882 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,882 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,883 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,883 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,883 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 23:19:48,883 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,885 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,886 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,886 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,886 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,886 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,886 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,887 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,887 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,887 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,888 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,888 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:19:48,888 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 23:19:48,888 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,888 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,890 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,891 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,891 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,891 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,891 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,891 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,892 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,892 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,893 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,895 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,895 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,895 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:19:48,897 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 23:19:48,898 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,898 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,898 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,898 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,900 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,900 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,900 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,900 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,901 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,901 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,901 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,901 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,902 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,902 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,902 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,903 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,903 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,905 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 23:19:48,905 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:19:48,905 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:19:48,905 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:19:48,906 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:19:48,907 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:19:48,907 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:19:48,907 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:19:48,907 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:19:48,907 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:19:48,908 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,926 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,926 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:19:48,980 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:48,982 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:19:49,055 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:49,055 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@649725e3
2016-10-23 23:19:49,057 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:49,057 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:19:49,057 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:19:49,058 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:19:49,062 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:19:49,064 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:19:49,064 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:19:49,065 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1da881
2016-10-23 23:19:49,068 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 0c4d80f3-96d6-455a-bb5e-8c7ddc385e04 (<unnamed>)
2016-10-23 23:19:49,069 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:19:49,177 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:19:49,188 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:49,188 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:49,207 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@29876704
2016-10-23 23:19:49,208 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:19:49,249 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:19:49,259 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 23:19:49,260 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:49,301 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:49,336 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:49,338 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:49,341 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:49,342 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:19:49,358 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:49,358 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:49,359 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:19:49,360 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:49,372 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:19:49,372 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:19:49,372 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:49,401 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:19:49,407 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@6ab72419
2016-10-23 23:19:49,430 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@7fb0327e ).size(): 1
2016-10-23 23:19:49,431 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:19:49,442 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:49,447 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:49,476 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:19:49,477 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:49,478 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:19:49,478 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:49,478 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:19:49,479 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:49,479 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:19:49,479 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:19:49,482 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:19:49,482 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,488 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:19:49,489 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,489 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:19:49,490 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,491 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:19:49,491 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,491 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:19:49,492 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,492 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:19:49,493 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,493 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:19:49,493 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,494 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:19:49,494 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,494 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:19:49,494 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,495 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:19:49,495 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,495 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:19:49,495 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,496 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:19:49,496 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,497 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:19:49,497 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,498 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:19:49,498 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,499 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:19:49,499 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,500 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:19:49,500 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,500 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:19:49,501 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,501 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:19:49,504 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,505 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:19:49,505 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,505 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:19:49,506 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,521 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:19:49,522 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,522 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:19:49,522 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,523 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:19:49,523 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,523 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:19:49,524 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,524 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 29
2016-10-23 23:19:49,524 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,524 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 30
2016-10-23 23:19:49,525 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,527 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:49,532 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:49,533 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:49,533 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:49,533 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:19:49,535 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:19:49,536 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,536 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:49,537 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:19:49,899 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:19:50,190 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,193 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,195 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:19:50,198 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 23:19:50,199 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,199 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,200 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,200 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,203 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,205 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,206 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,208 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,209 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 23:19:50,209 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,209 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,210 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 23:19:50,210 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,211 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:19:50,211 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 23:19:50,211 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,212 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 23:19:50,213 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34237b90
2016-10-23 23:19:50,214 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@56160d27 ).size(): 1
2016-10-23 23:19:50,214 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 2; num keys: 2
2016-10-23 23:19:50,218 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:50,218 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,219 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:19:50,220 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,220 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:19:50,221 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,221 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:19:50,221 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,221 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:19:50,222 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,222 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:19:50,222 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,222 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:19:50,223 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,223 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:19:50,223 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,223 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:19:50,223 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,224 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:19:50,224 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,224 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:19:50,224 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,225 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:19:50,225 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,225 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:19:50,225 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,225 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:19:50,226 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,226 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:19:50,227 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,227 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:19:50,227 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,228 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:19:50,228 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,228 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:19:50,228 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,229 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:19:50,229 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,229 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:19:50,229 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,229 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:19:50,230 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,230 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:19:50,230 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,230 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:19:50,231 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,231 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:19:50,231 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,231 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:19:50,231 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,232 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:19:50,232 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,232 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,233 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:19:50,233 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 2; num keys: 2
2016-10-23 23:19:50,249 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:19:50,282 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,283 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,286 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:19:50,290 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:19:50,290 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,291 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,292 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,292 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,293 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,293 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,293 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,296 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,296 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,296 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,297 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,297 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,298 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,298 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,298 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:19:50,299 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,299 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,300 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:19:50,300 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,302 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:19:50,302 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:19:50,303 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,304 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:19:50,305 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@469d003c
2016-10-23 23:19:50,326 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@108e0053 ).size(): 1
2016-10-23 23:19:50,327 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 3; num keys: 3
2016-10-23 23:19:50,329 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 3; num keys: 3
2016-10-23 23:19:50,329 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 23:19:50,331 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,331 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,352 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 23:19:50,363 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 23:19:50,365 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 23:19:50,367 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 23:19:50,369 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 23:19:50,370 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 23:19:50,372 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 23:19:50,377 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 23:19:50 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 23:19:50 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 23:19:50 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 23:19:50 CEST 2016}
2016-10-23 23:19:50,401 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:19:50,403 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@69ce2f62
2016-10-23 23:19:50,403 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@32a5faac ).size(): 1
2016-10-23 23:19:50,404 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 4; num keys: 4
2016-10-23 23:19:50,427 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 23:19:50,432 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:19:50,432 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 23:19:50,433 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@4fe01803
2016-10-23 23:19:50,433 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,433 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:19:50,437 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:19:50,439 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 4; num keys: 4
2016-10-23 23:19:50,442 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 23:19:50,553 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 23:19:50,554 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:19:50,583 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 23:19:50,584 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,584 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,588 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:19:50,590 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 23:19:50,590 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,591 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,592 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,592 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,593 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,593 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,593 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,594 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,594 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 23:19:50,594 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,595 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,595 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 23:19:50,595 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,596 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:19:50,596 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 23:19:50,596 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,597 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 23:19:50,598 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7808fb9
2016-10-23 23:19:50,600 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@32a5faac ).size(): 2
2016-10-23 23:19:50,600 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 23:19:50,617 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:50,618 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,620 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:19:50,621 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,623 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,624 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,624 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,625 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,626 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 23:19:50,631 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:19:50,641 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 23:19:50,641 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:19:50,641 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:19:50,641 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,642 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,647 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:19:50,649 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 23:19:50,650 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,650 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,651 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,651 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,652 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,652 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,652 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,653 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,653 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,653 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 23:19:50,654 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,654 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 23:19:50,655 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,655 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,657 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 23:19:50,657 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,658 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:19:50,658 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 23:19:50,658 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,659 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 23:19:50,660 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@72805168
2016-10-23 23:19:50,693 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1f3863f3 ).size(): 1
2016-10-23 23:19:50,693 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 23:19:50,695 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:50,695 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,696 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:19:50,697 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,698 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,698 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,699 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,699 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:19:50,700 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:19:50,703 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:19:50,707 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 23:19:50,707 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:19:50,710 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:19:50,711 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,711 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 23:19:50,711 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:19:50,711 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:19:50,711 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@588ffeb
2016-10-23 23:19:50,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:19:50,712 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:19:50,712 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7c28c1
2016-10-23 23:19:50,713 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:19:50,713 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:19:50,713 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@baf1bb3
2016-10-23 23:19:50,713 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b
2016-10-23 23:19:50,714 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,735 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:19:50,736 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:50,736 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,736 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:19:50,736 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:19:50,736 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,739 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:19:50,741 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 23:19:50,741 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,742 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,743 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,743 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,744 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,744 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,744 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,745 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,745 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,745 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,746 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,746 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,747 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,747 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:19:50,747 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:50,748 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,748 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:19:50,748 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:19:50,747 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,749 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,749 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 23:19:50,750 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,750 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 23:19:50,750 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:19:50,750 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@525285b4.acquireResource() returning. 
2016-10-23 23:19:50,751 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,751 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:19:50,751 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vje3vqi5la97|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:19:50,750 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,751 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,752 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 23:19:50,753 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,753 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:19:50,754 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:19:50,754 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,755 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:19:50,755 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34cf5a97
2016-10-23 23:19:50,761 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@e6fa0e7 ).size(): 1
2016-10-23 23:19:50,762 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 23:19:50,765 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:50,769 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,771 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,772 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,773 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:19:50,782 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:19:50,784 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:19:50,784 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:19:50,785 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:19:50,785 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:19:50,786 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@1b62c55b)
2016-10-23 23:19:50,788 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:19:50,794 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:19:50,794 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,795 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:19:50,795 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:19:50,795 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:19:50,796 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,797 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:19:50,797 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:19:50,798 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,798 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,798 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,799 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:19:50,799 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:19:50,799 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:19:50,800 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:19:50,800 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:19:50,801 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:19:50,802 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:19:50,803 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:19:50,803 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,804 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:19:50,804 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:19:50,804 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:19:50,807 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:19:50,807 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4a1c0752
2016-10-23 23:19:50,839 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@282c0605 ).size(): 1
2016-10-23 23:19:50,840 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 23:19:50,841 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:19:50,841 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,842 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,843 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:19:50,843 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 23:19:50,869 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:20:02,714 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:20:02,765 ! DEBUG ! [main] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:20:02,834 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:20:02,834 ! DEBUG ! [main] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:20:02,835 ! DEBUG ! [main] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:20:02,845 ! DEBUG ! [main] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:20:02,855 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:20:02,859 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:20:02,864 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:20:02,865 ! DEBUG ! [main] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:20:03,113 !  INFO ! [main] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:20:03,116 !  INFO ! [main] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:20:03,117 !  INFO ! [main] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:20:03,130 ! DEBUG ! [main] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:20:03,177 ! DEBUG ! [main] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:20:03,195 !  INFO ! [main] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:20:03,309 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:20:03,309 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:20:03,309 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11dc3715
2016-10-23 23:20:03,310 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ca92b9
2016-10-23 23:20:03,313 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@527e5409
2016-10-23 23:20:03,314 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@add0edd
2016-10-23 23:20:03,315 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:20:03,316 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:20:03,316 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10db82ae
2016-10-23 23:20:03,318 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:20:03,319 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:20:03,319 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@197d671
2016-10-23 23:20:03,321 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:20:03,321 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:20:03,321 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a955565
2016-10-23 23:20:03,323 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:20:03,323 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:20:03,323 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70be0a2b
2016-10-23 23:20:03,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:20:03,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:20:03,325 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d082e88
2016-10-23 23:20:03,328 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:20:03,328 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:20:03,329 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fe767f3
2016-10-23 23:20:03,330 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:20:03,331 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:20:03,331 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38c5cc4c
2016-10-23 23:20:03,334 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:20:03,335 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16e7dcfd
2016-10-23 23:20:03,336 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:20:03,338 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14d3bc22
2016-10-23 23:20:03,339 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:03,340 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:03,341 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2928854b
2016-10-23 23:20:03,343 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@147ed70f
2016-10-23 23:20:03,345 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:20:03,345 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe20588
2016-10-23 23:20:03,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:20:03,348 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@47542153
2016-10-23 23:20:03,368 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:20:03,368 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78aab498
2016-10-23 23:20:03,370 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:20:03,370 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12e61fe6
2016-10-23 23:20:03,374 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:20:03,374 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75329a49
2016-10-23 23:20:03,376 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:20:03,376 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@670002
2016-10-23 23:20:03,379 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:20:03,379 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@96def03
2016-10-23 23:20:03,381 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:20:03,381 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b5a5ed1
2016-10-23 23:20:03,388 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:20:03,388 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4386f16
2016-10-23 23:20:03,389 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:20:03,390 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@460d0a57
2016-10-23 23:20:03,391 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:20:03,391 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b1473ab
2016-10-23 23:20:03,394 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:03,394 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:03,394 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:03,398 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ef888f6
2016-10-23 23:20:03,399 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:20:03,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:20:03,400 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bef2d72
2016-10-23 23:20:03,401 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fe7aac8
2016-10-23 23:20:03,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:20:03,404 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35047d03
2016-10-23 23:20:03,405 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:20:03,405 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f96c77
2016-10-23 23:20:03,406 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:20:03,408 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d680b5a
2016-10-23 23:20:03,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:20:03,409 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61230f6a
2016-10-23 23:20:03,410 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:20:03,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72a7c7e0
2016-10-23 23:20:03,411 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17046283
2016-10-23 23:20:03,413 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:20:03,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:20:03,414 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@34b7ac2f
2016-10-23 23:20:03,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:20:03,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:20:03,415 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@353d0772
2016-10-23 23:20:03,418 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@13e39c73
2016-10-23 23:20:03,419 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@6580cfdd
2016-10-23 23:20:03,421 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:20:03,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:20:03,423 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@48ae9b55
2016-10-23 23:20:03,425 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:20:03,425 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:20:03,425 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31d7b7bf
2016-10-23 23:20:03,426 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@7a69b07
2016-10-23 23:20:03,429 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@1817d444
2016-10-23 23:20:03,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:20:03,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41fbdac4
2016-10-23 23:20:03,434 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c33b74f
2016-10-23 23:20:03,439 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:20:03,439 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@56620197
2016-10-23 23:20:03,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:20:03,445 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2016-10-23 23:20:03,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2016-10-23 23:20:03,446 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2016-10-23 23:20:03,449 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2016-10-23 23:20:03,453 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:20:03,453 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2016-10-23 23:20:03,454 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2016-10-23 23:20:03,454 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2016-10-23 23:20:03,454 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2016-10-23 23:20:03,454 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2016-10-23 23:20:03,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2016-10-23 23:20:03,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2016-10-23 23:20:03,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2016-10-23 23:20:03,455 ! DEBUG ! [main] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2016-10-23 23:20:03,466 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:20:03,468 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:20:03,468 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:20:03,494 !  INFO ! [main] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:20:03,961 !  INFO ! [main] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:20:03,980 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjeghw96lzq2|2898ac89,name=1hgel1d9j1vjeghw96lzq2|2898ac89 registered.
2016-10-23 23:20:04,001 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjeghw96lzq2|2898ac89,name=1hgel1d9j1vjeghw96lzq2|2898ac89 unregistered, in order to be reregistered after update.
2016-10-23 23:20:04,003 ! DEBUG ! [main] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjeghw96lzq2|2898ac89,name=1hgel1d9j1vjeghw96lzq2|2898ac89 registered.
2016-10-23 23:20:04,008 !  INFO ! [main] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:20:04,026 !  INFO ! [main] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@536915e2 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@2237e999 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vjeghw96lzq2|37883b97, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@bcaa2e11 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vjeghw96lzq2|f5958c9, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vjeghw96lzq2|2898ac89, numHelperThreads -> 3 ]
2016-10-23 23:20:04,044 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:20:04,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:04,045 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5fa07e12
2016-10-23 23:20:04,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:20:04,045 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:04,046 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@55b53d44
2016-10-23 23:20:04,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:20:04,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:20:04,046 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@482bce4f
2016-10-23 23:20:04,046 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:20:04,048 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:20:04,048 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@366647c2
2016-10-23 23:20:04,048 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:20:04,048 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:20:04,048 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@6a6afff2
2016-10-23 23:20:04,049 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:20:04,049 ! DEBUG ! [main] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:20:04,049 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:20:04,049 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:20:04,049 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:20:04,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,348 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:20:04,349 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:20:04,349 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:04,355 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:20:04,356 ! DEBUG ! [main] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:20:04,356 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:20:04,370 !  INFO ! [main] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:20:04,413 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:20:04,416 ! DEBUG ! [main] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:20:04,431 !  INFO ! [main] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:20:04,433 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,434 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@49049a04
2016-10-23 23:20:04,434 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:04,463 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:20:04,463 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:20:04,464 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:20:04,464 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:20:04,465 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:20:04,466 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:20:04,466 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:20:04,468 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:20:04,469 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:20:04,470 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:20:04,470 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:20:04,471 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:20:04,471 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:20:04,473 ! DEBUG ! [main] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:20:04,500 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,501 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:04,501 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:04,501 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:20:04,501 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:04,501 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,505 ! DEBUG ! [main] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:20:04,574 ! DEBUG ! [main] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:20:04,598 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:04,599 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:04,599 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 4, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:04,599 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:20:04,599 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:04,603 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:20:04,610 ! DEBUG ! [main] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:20:04,615 ! DEBUG ! [main] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:20:04,636 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,639 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:20:04,641 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:20:04,643 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:20:04,645 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:20:04,649 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,649 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:20:04,649 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:20:04,649 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:20:04,649 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:20:04,650 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,651 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:20:04,651 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:20:04,651 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:20:04,651 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:20:04,651 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,653 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:20:04,653 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:20:04,653 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:20:04,653 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:20:04,653 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,654 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:20:04,654 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:20:04,654 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:20:04,654 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:20:04,655 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,655 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:20:04,655 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:20:04,655 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:20:04,656 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:20:04,656 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,656 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:20:04,656 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:20:04,656 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:20:04,658 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:20:04,659 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,659 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:20:04,659 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:20:04,659 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:20:04,659 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:20:04,660 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,661 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:20:04,661 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:20:04,661 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:20:04,661 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:20:04,663 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,663 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:20:04,663 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:20:04,663 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:20:04,664 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:20:04,664 ! DEBUG ! [main] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:04,664 ! DEBUG ! [main] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:20:04,665 ! DEBUG ! [main] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:20:04,665 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:20:04,665 ! DEBUG ! [main] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:20:04,668 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:20:04,668 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:20:04,668 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:20:04,669 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:20:04,670 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:20:04,670 ! DEBUG ! [main] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:20:04,671 ! DEBUG ! [main] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:20:04,714 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:20:04,715 ! DEBUG ! [main] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:20:04,716 ! DEBUG ! [main] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:20:04,718 ! DEBUG ! [main] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6f9c1
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:20:04,719 ! DEBUG ! [main] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:20:04,720 ! DEBUG ! [main] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:20:04,720 ! DEBUG ! [main] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:20:04,720 ! DEBUG ! [main] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:20:04,720 ! DEBUG ! [main] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:20:04,720 ! DEBUG ! [main] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:20:04,791 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:20:04,791 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Paris, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter8562201366021325752.jar C:\Telfort_migration\InvoiceService\target\surefire\surefire7756037749500725666tmp C:\Telfort_migration\InvoiceService\target\surefire\surefire_03242781915163787118tmp, surefire.test.class.path=C:\Telfort_migration\InvoiceService\target\test-classes;C:\Telfort_migration\InvoiceService\target\classes;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-core\5.2.3.Final\hibernate-core-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\skuma353\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\skuma353\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\skuma353\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\skuma353\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\skuma353\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\skuma353\.m2\repository\javax\enterprise\cdi-api\1.1\cdi-api-1.1.jar;C:\Users\skuma353\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\skuma353\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\skuma353\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\skuma353\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\skuma353\.m2\repository\org\hibernate\hibernate-c3p0\5.2.3.Final\hibernate-c3p0-5.2.3.Final.jar;C:\Users\skuma353\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\skuma353\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\skuma353\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-servlet\1.19.2\jersey-servlet-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-server\1.19.2\jersey-server-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.4\jackson-annotations-2.8.4.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-json\1.19.2\jersey-json-1.19.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\skuma353\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\skuma353\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\skuma353\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\skuma353\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.2\jackson-core-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.2\jackson-mapper-asl-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.2\jackson-jaxrs-1.9.2.jar;C:\Users\skuma353\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.2\jackson-xc-1.9.2.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-client\1.19.2\jersey-client-1.19.2.jar;C:\Users\skuma353\.m2\repository\com\google\code\gson\gson\2.7\gson-2.7.jar;C:\Users\skuma353\.m2\repository\com\sun\jersey\jersey-core\1.19.2\jersey-core-1.19.2.jar;C:\Users\skuma353\.m2\repository\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;C:\Users\skuma353\.m2\repository\org\glassfish\extras\glassfish-embedded-web\3.1.1\glassfish-embedded-web-3.1.1.jar;C:\Users\skuma353\.m2\repository\junit\junit\4.8.2\junit-4.8.2.jar;C:\Users\skuma353\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, basedir=C:\Telfort_migration\InvoiceService, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, surefire.real.class.path=C:\Telfort_migration\InvoiceService\target\surefire\surefirebooter8562201366021325752.jar, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_73-b02, user.name=skuma353, path.separator=;, hibernate.connection.username=ACME, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\skuma353\.m2\repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6eb2384f, java.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:20:04,874 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:20:04,874 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:20:04,893 ! DEBUG ! [main] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:20:04,899 ! DEBUG ! [main] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:20:04,916 ! DEBUG ! [main] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:20:04,955 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:20:04,955 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:20:04,968 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:20:04,968 ! DEBUG ! [main] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:20:05,018 ! DEBUG ! [main] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:20:05,018 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:20:05,018 ! DEBUG ! [main] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:20:05,018 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:20:05,018 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:20:05,019 ! DEBUG ! [main] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:20:05,041 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
2016-10-23 23:20:05,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,043 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,044 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,045 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,058 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,063 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,065 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c37b5b]
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,066 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,068 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,069 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,069 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,069 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,070 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,071 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,073 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,073 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,073 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,073 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150ab4ed]
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,074 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,075 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,076 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,076 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,076 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,076 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
2016-10-23 23:20:05,076 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,078 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,079 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,079 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,079 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,079 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,080 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,080 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,081 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,081 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,081 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8fa663]
2016-10-23 23:20:05,083 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,083 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,083 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,084 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,085 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,085 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,085 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,085 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,085 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,086 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,086 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,088 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,088 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
2016-10-23 23:20:05,088 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:05,089 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,089 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:05,089 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,089 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 5, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:05,089 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,089 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:20:05,089 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,089 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:20:05,089 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,090 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,091 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,091 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,091 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,091 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,093 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,093 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:20:05,094 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5357c287]
2016-10-23 23:20:05,094 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,094 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,094 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,095 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,096 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,096 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,096 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,096 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,098 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,098 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
2016-10-23 23:20:05,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,098 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,099 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,100 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,100 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,100 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,100 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,101 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,101 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,103 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,103 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:05,104 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25748410]
2016-10-23 23:20:05,104 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,104 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,104 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,105 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,106 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,106 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,106 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,106 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,106 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,108 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,108 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,109 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,109 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,109 ! DEBUG ! [main] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
2016-10-23 23:20:05,110 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:05,110 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:05,110 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:05,110 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:05,110 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:05,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:05,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:05,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:05,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:05,111 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:05,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:05,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:05,113 ! DEBUG ! [main] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:05,113 ! DEBUG ! [main] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:05,113 ! DEBUG ! [main] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:05,114 ! DEBUG ! [main] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:05,115 ! DEBUG ! [main] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,160 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,161 ! DEBUG ! [main] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:05,233 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:05,236 !  INFO ! [main] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21005f6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:20:05,554 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:05,555 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@649725e3
2016-10-23 23:20:05,555 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:05,555 ! DEBUG ! [main] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:20:05,556 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:05,556 ! DEBUG ! [main] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:20:05,563 ! DEBUG ! [main] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:20:05,564 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:20:05,565 ! DEBUG ! [main] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:20:05,568 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1da881
2016-10-23 23:20:05,571 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Registering SessionFactory: dced2609-ffb3-4c82-a8cc-0713deacab65 (<unnamed>)
2016-10-23 23:20:05,571 ! DEBUG ! [main] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:20:05,703 ! DEBUG ! [main] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:20:05,720 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:05,721 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:05,733 ! DEBUG ! [main] ! internal.AbstractSaveEventListener ! Generated identifier: 70ec3a54a499994aa9e8, using strategy: org.hibernate.id.Assigned
2016-10-23 23:20:05,754 ! DEBUG ! [main] ! internal.TransactionImpl ! committing
2016-10-23 23:20:05,755 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Processing flush-time cascades
2016-10-23 23:20:05,756 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Dirty checking collections
2016-10-23 23:20:05,759 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2016-10-23 23:20:05,759 ! DEBUG ! [main] ! internal.AbstractFlushingEventListener ! Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2016-10-23 23:20:05,761 ! DEBUG ! [main] ! util.EntityPrinter ! Listing entities:
2016-10-23 23:20:05,767 ! DEBUG ! [main] ! util.EntityPrinter ! com.acme.model.CustomerInvoice{amount=165.29, endDate=Sun Oct 23 23:20:02 CEST 2016, periodDescription=Maart 2015, invoiceDate=Sun Oct 23 23:20:02 CEST 2016, vatAmount=34.71, addressId=8212BJ154, paymentDueDate=Sun Oct 23 23:20:02 CEST 2016, totalAmount=200.0, customerId=99, invoiceNumber=157005888, invoiceType=AdvancePayment, invoiceId=70ec3a54a499994aa9e8, invoiceTypeLocalized=Voorschot, startDate=Sun Oct 23 23:20:02 CEST 2016}
2016-10-23 23:20:05,799 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    insert 
    into
        CustomerInvoice
        (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:20:05,806 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3546d80f
2016-10-23 23:20:05,848 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@59a980db ).size(): 1
2016-10-23 23:20:05,848 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:20:05,912 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:20:06,091 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:20:06,092 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:20:06,093 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3aee3976
2016-10-23 23:20:06,093 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,093 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:20:06,093 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:20:06,100 ! DEBUG ! [main] ! internal.LogicalConnectionManagedImpl ! Initiating JDBC connection release from afterTransaction
2016-10-23 23:20:06,286 ! DEBUG ! [main] ! internal.JdbcCoordinatorImpl ! HHH000420: Closing un-released batch
2016-10-23 23:20:06,325 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,326 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,340 ! DEBUG ! [main] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46b695ec
2016-10-23 23:20:06,340 !  INFO ! [main] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:20:06,370 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:20:06,377 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acme'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CustomerInvoice'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'c'

2016-10-23 23:20:06,377 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,407 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:06,432 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:06,435 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:06,437 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:06,437 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) )
2016-10-23 23:20:06,451 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:06,451 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:06,452 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}

2016-10-23 23:20:06,452 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,463 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c
2016-10-23 23:20:06,463 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_
2016-10-23 23:20:06,465 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,482 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_
2016-10-23 23:20:06,483 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4c060c8f
2016-10-23 23:20:06,486 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@59a980db ).size(): 2
2016-10-23 23:20:06,486 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
2016-10-23 23:20:06,492 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:06,500 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,508 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:20:06,510 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,511 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:20:06,512 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,513 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:20:06,514 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,514 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:20:06,515 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:20:06,517 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:20:06,517 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,519 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:20:06,520 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,520 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:20:06,521 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,522 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:20:06,523 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,524 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:20:06,525 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,526 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:20:06,527 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,527 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:20:06,528 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,529 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:20:06,529 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,530 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:20:06,530 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,530 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:20:06,531 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,531 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:20:06,531 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,531 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:20:06,532 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,532 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:20:06,532 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,533 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:20:06,533 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,533 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:20:06,533 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,534 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:20:06,534 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,534 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:20:06,535 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,535 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:20:06,535 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,535 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:20:06,536 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,536 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:20:06,536 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,537 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:20:06,537 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,537 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:20:06,537 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,538 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:20:06,538 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,538 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 28
2016-10-23 23:20:06,538 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,539 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 29
2016-10-23 23:20:06,539 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,539 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 30
2016-10-23 23:20:06,540 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,540 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 31
2016-10-23 23:20:06,540 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,541 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 32
2016-10-23 23:20:06,541 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,542 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,543 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,544 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,544 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,544 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:20:06,545 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#999c3a54a43d014aa9e8]
2016-10-23 23:20:06,545 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,545 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,546 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
2016-10-23 23:20:06,569 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "10",
  "addressId" : "8212BJ154",
  "invoiceId" : "999c3a54a43d014aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2015-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2015-02-20T00:00:00.000+0100",
  "invoiceNumber" : null,
  "startDate" : null,
  "endDate" : null,
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:20:06,696 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,696 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,698 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:20:06,701 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[QUOTED_STRING] Node: ''99''

2016-10-23 23:20:06,701 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,702 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:06,703 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:06,703 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:06,706 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,708 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:06,710 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:06,711 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:06,712 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ) )
2016-10-23 23:20:06,712 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:06,712 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:06,713 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[QUOTED_STRING] LiteralNode: ''99''

2016-10-23 23:20:06,713 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,714 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99'
2016-10-23 23:20:06,714 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99'
2016-10-23 23:20:06,714 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,715 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99'
2016-10-23 23:20:06,715 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@1136b469
2016-10-23 23:20:06,718 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@676f244f ).size(): 1
2016-10-23 23:20:06,722 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 1; num connections: 2; num keys: 3
2016-10-23 23:20:06,734 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:06,737 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,738 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:20:06,738 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,738 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 2
2016-10-23 23:20:06,738 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,739 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 3
2016-10-23 23:20:06,739 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,739 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 4
2016-10-23 23:20:06,739 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,741 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 5
2016-10-23 23:20:06,741 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,741 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 6
2016-10-23 23:20:06,741 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,741 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 7
2016-10-23 23:20:06,742 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,742 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 8
2016-10-23 23:20:06,742 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,742 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 9
2016-10-23 23:20:06,742 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,743 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 10
2016-10-23 23:20:06,743 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,743 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 11
2016-10-23 23:20:06,743 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,744 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 12
2016-10-23 23:20:06,744 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,744 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 13
2016-10-23 23:20:06,744 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,744 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 14
2016-10-23 23:20:06,746 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,746 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 15
2016-10-23 23:20:06,746 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,746 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 16
2016-10-23 23:20:06,746 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 17
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 18
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 19
2016-10-23 23:20:06,747 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,748 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 20
2016-10-23 23:20:06,748 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,748 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 21
2016-10-23 23:20:06,748 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,748 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 22
2016-10-23 23:20:06,749 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,749 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 23
2016-10-23 23:20:06,749 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,749 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 24
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 25
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 26
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,751 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 27
2016-10-23 23:20:06,752 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,752 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,752 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a499994aa9e8]
2016-10-23 23:20:06,752 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 3; checked out: 0; num connections: 2; num keys: 3
2016-10-23 23:20:06,763 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "99",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a499994aa9e8",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2016-10-23T00:00:00.000+0200",
  "paymentDueDate" : "2016-10-23T00:00:00.000+0200",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-10-23T00:00:00.000+0200",
  "endDate" : "2016-10-23T00:00:00.000+0200",
  "periodDescription" : "Maart 2015",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:20:06,806 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,807 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,808 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:20:06,817 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[QUOTED_STRING] Node: ''99''
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '11'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:20:06,817 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,817 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:06,818 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:06,819 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:06,819 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,819 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:06,821 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:06,823 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,823 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:06,823 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:06,824 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,824 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:06,826 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:06,826 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:06,826 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( and ( and ( = ( customerin0_.customerId {synthetic-alias} customerId ) '99' ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 11 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:20:06,827 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:06,827 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:06,828 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[QUOTED_STRING] LiteralNode: ''99''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '11'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:20:06,828 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,831 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: Select c from com.acme.model.CustomerInvoice c WHERE customerId='99' and MONTH(invoiceDate)=11 and YEAR(invoiceDate)=2016
2016-10-23 23:20:06,831 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId='99' and month(customerin0_.invoiceDate)=11 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:06,831 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,832 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId='99' 
        and month(customerin0_.invoiceDate)=11 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:06,832 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@27068a50
2016-10-23 23:20:06,833 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@4d3cde41 ).size(): 1
2016-10-23 23:20:06,834 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 1; num connections: 3; num keys: 4
2016-10-23 23:20:06,838 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 4; checked out: 0; num connections: 3; num keys: 4
2016-10-23 23:20:06,842 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! []
2016-10-23 23:20:06,881 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:null
2016-10-23 23:20:06,882 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:20:06,884 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1
2016-10-23 23:20:06,884 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,884 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,887 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:20:06,889 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerId'
          \-[NUM_INT] Node: '1'

2016-10-23 23:20:06,889 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,891 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:06,892 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:06,892 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:06,893 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,893 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:06,893 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:06,893 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:06,894 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ) )
2016-10-23 23:20:06,894 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:06,894 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:06,896 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NUM_INT] LiteralNode: '1'

2016-10-23 23:20:06,896 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,896 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1
2016-10-23 23:20:06,897 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1
2016-10-23 23:20:06,897 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,897 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1
2016-10-23 23:20:06,898 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7808fb9
2016-10-23 23:20:06,902 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@32ca760 ).size(): 1
2016-10-23 23:20:06,902 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 1; num connections: 4; num keys: 5
2016-10-23 23:20:06,906 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:06,906 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,907 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:20:06,907 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,908 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,908 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,908 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,909 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,909 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 5; checked out: 0; num connections: 4; num keys: 5
2016-10-23 23:20:06,913 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:20:06,917 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:0; Filter:null; AddressId:8212BJ154
2016-10-23 23:20:06,918 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:20:06,918 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:20:06,918 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,918 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:06,923 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:20:06,932 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'customerId'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'addressId'
             \-[QUOTED_STRING] Node: ''8212BJ154''

2016-10-23 23:20:06,932 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,933 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:06,934 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:06,934 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:06,934 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,936 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:06,936 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:06,937 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:06,937 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : addressId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:06,937 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.addressId -> customerin0_.addressId
2016-10-23 23:20:06,937 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:06,938 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( customerin0_.addressId {synthetic-alias} addressId ) '8212BJ154' ) ) ) )
2016-10-23 23:20:06,939 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:06,939 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:06,941 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.addressId' {propertyName=addressId,dereferenceType=PRIMITIVE,getPropertyPath=addressId,path={synthetic-alias}.addressId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'addressId' {originalText=addressId}
             \-[QUOTED_STRING] LiteralNode: ''8212BJ154''

2016-10-23 23:20:06,941 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,941 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND addressId= '8212BJ154'
2016-10-23 23:20:06,941 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and customerin0_.addressId='8212BJ154'
2016-10-23 23:20:06,942 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:06,942 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and customerin0_.addressId='8212BJ154'
2016-10-23 23:20:06,943 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@72805168
2016-10-23 23:20:06,945 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@1a14d654 ).size(): 1
2016-10-23 23:20:06,946 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 1; num connections: 5; num keys: 6
2016-10-23 23:20:06,948 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:06,948 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,949 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 1
2016-10-23 23:20:06,950 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,950 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,952 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:06,953 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,954 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#ef7bf8999a]
2016-10-23 23:20:06,954 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:20:06,959 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
},{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "ef7bf8999a",
  "invoiceType" : "AdvancePayment",
  "invoiceTypeLocalized" : "Voorschot",
  "invoiceDate" : "2014-11-13T00:00:00.000+0100",
  "paymentDueDate" : "2014-11-20T00:00:00.000+0100",
  "invoiceNumber" : "1429564",
  "startDate" : "2014-12-01T00:00:00.000+0100",
  "endDate" : "2015-01-01T00:00:00.000+0100",
  "periodDescription" : "Maart 2015",
  "amount" : 170.0,
  "vatAmount" : 40.0,
  "totalAmount" : 210.0
}]
2016-10-23 23:20:06,962 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:shop; AddressId:null
2016-10-23 23:20:06,963 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:20:06,966 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:20:06,966 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:06,966 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 5; target_pool_size: 5; desired target? 6
2016-10-23 23:20:06,967 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:20:06,967 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:06,967 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@588ffeb
2016-10-23 23:20:06,967 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7c28c1
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@baf1bb3
2016-10-23 23:20:06,968 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6
2016-10-23 23:20:06,969 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 5, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,017 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 6; checked out: 0; num connections: 5; num keys: 6
2016-10-23 23:20:07,018 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:07,018 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,018 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:20:07,018 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:07,018 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,020 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:20:07,054 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'customerId'
          |  |  |  \-[NUM_INT] Node: '1'
          |  |  \-[EQ] Node: '='
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'MONTH'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[IDENT] Node: 'invoiceDate'
          |  |     \-[NUM_INT] Node: '2'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'YEAR'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2016'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'invoiceType'
             \-[QUOTED_STRING] Node: ''ShopPurchase''

2016-10-23 23:20:07,055 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,056 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:07,056 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:07,057 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:07,057 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,057 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:07,058 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:07,058 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,058 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:07,058 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:07,059 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,059 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:07,059 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:07,060 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,060 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceType -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:07,061 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceType -> customerin0_.invoiceType
2016-10-23 23:20:07,061 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:07,062 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ( = ( customerin0_.invoiceType {synthetic-alias} invoiceType ) 'ShopPurchase' ) ) ) )
2016-10-23 23:20:07,063 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:07,064 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:07,065 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  |  \-[NUM_INT] LiteralNode: '1'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |  |     \-[NUM_INT] LiteralNode: '2'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2016'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerin0_.invoiceType' {propertyName=invoiceType,dereferenceType=PRIMITIVE,getPropertyPath=invoiceType,path={synthetic-alias}.invoiceType,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'invoiceType' {originalText=invoiceType}
             \-[QUOTED_STRING] LiteralNode: ''ShopPurchase''

2016-10-23 23:20:07,065 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,066 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016 AND invoiceType= 'ShopPurchase'
2016-10-23 23:20:07,066 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016 and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:20:07,066 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,068 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016 
        and customerin0_.invoiceType='ShopPurchase'
2016-10-23 23:20:07,069 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@34cf5a97
2016-10-23 23:20:07,070 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@59ffbef3 ).size(): 1
2016-10-23 23:20:07,071 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 1; num connections: 6; num keys: 7
2016-10-23 23:20:07,073 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:07,073 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,074 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,074 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,074 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:20:07,078 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:20:07,098 ! DEBUG ! [main] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:20:07,098 !  INFO ! [main] ! resources.Service ! Service Request Received
2016-10-23 23:20:07,098 ! DEBUG ! [main] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:07,099 ! DEBUG ! [main] ! internal.TransactionImpl ! begin
2016-10-23 23:20:07,099 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 6; target_pool_size: 8; desired target? 7
2016-10-23 23:20:07,099 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! awaitAvailable(): com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6
2016-10-23 23:20:07,099 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 6, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,102 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:20:07,103 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:07,103 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,103 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:20:07,103 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:07,105 ! DEBUG ! [main] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 7, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,109 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 7; checked out: 0; num connections: 6; num keys: 7
2016-10-23 23:20:07,110 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@46123268.acquireResource() returning. 
2016-10-23 23:20:07,110 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@1649b0e6 [managed: 8, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@3cfa5ab6)
2016-10-23 23:20:07,110 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:20:07,110 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjeghw96lzq2|2898ac89]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:20:07,111 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:07,113 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:20:07,114 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,114 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:07,115 ! DEBUG ! [main] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:07,115 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:07,116 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,116 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@45018215
2016-10-23 23:20:07,117 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:07,118 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,118 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:07,118 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:07,119 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:07,119 ! DEBUG ! [main] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@7880cdf3
2016-10-23 23:20:07,120 ! DEBUG ! [main] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:07,120 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:07,121 ! DEBUG ! [main] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:20:07,121 ! DEBUG ! [main] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:07,121 ! DEBUG ! [main] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:07,122 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:20:07,123 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,123 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:07,124 ! DEBUG ! [main] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:07,124 ! DEBUG ! [main] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:07,125 ! DEBUG ! [main] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:07,125 ! DEBUG ! [main] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@d6e7bab: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4a1c0752
2016-10-23 23:20:07,131 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@3be874c ).size(): 1
2016-10-23 23:20:07,133 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 1; num connections: 7; num keys: 8
2016-10-23 23:20:07,142 ! DEBUG ! [main] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:07,143 ! DEBUG ! [main] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,145 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,145 ! DEBUG ! [main] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:07,145 ! DEBUG ! [main] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 8; checked out: 0; num connections: 7; num keys: 8
2016-10-23 23:20:07,147 ! DEBUG ! [main] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:20:51,285 ! DEBUG ! [http-bio-8080-exec-1] ! resources.Service ! Query Param Received: CustomerId1; Month:3; Filter:null; AddressId:null
2016-10-23 23:20:52,562 !  INFO ! [http-bio-8080-exec-1] ! resources.Service ! Service Request Received
2016-10-23 23:20:52,564 ! DEBUG ! [http-bio-8080-exec-1] ! Service.ServiceQuery ! Final Query to dataBase: SELECT c FROM CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:52,608 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-10-23 23:20:52,638 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderServiceImpl ! Incoming config yielded no classloaders; adding standard SE ones
2016-10-23 23:20:52,721 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Located and parsed 1 persistence units; checking each
2016-10-23 23:20:52,722 ! DEBUG ! [http-bio-8080-exec-1] ! jpa.HibernatePersistenceProvider ! Checking persistence-unit [name=acmeJPAHandler, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [acmeJPAHandler]
2016-10-23 23:20:52,723 ! DEBUG ! [http-bio-8080-exec-1] ! spi.ProviderChecker ! Persistence-unit [acmeJPAHandler] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2016-10-23 23:20:52,738 ! DEBUG ! [http-bio-8080-exec-1] ! util.LogHelper ! PersistenceUnitInfo [
	name: acmeJPAHandler
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Telfort_migration/InvoiceService/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 500
		javax.persistence.jdbc.user: ACME
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 20
		hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
		hibernate.c3p0.idle_test_period: 2000
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 5
		hibernate.hbm2ddl.auto: validate
		hibernate.show_sql: true
		javax.persistence.jdbc.password: ACME]
2016-10-23 23:20:52,760 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-10-23 23:20:52,763 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-10-23 23:20:52,771 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-10-23 23:20:52,772 ! DEBUG ! [http-bio-8080-exec-1] ! internal.IntegratorServiceImpl ! Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-10-23 23:20:52,956 !  INFO ! [http-bio-8080-exec-1] ! hibernate.Version ! HHH000412: Hibernate Core {5.2.3.Final}
2016-10-23 23:20:52,959 !  INFO ! [http-bio-8080-exec-1] ! cfg.Environment ! HHH000206: hibernate.properties not found
2016-10-23 23:20:52,962 !  INFO ! [http-bio-8080-exec-1] ! cfg.Environment ! HHH000021: Bytecode provider name : javassist
2016-10-23 23:20:52,981 ! DEBUG ! [http-bio-8080-exec-1] ! spi.ServiceBinding ! Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-10-23 23:20:53,031 ! DEBUG ! [http-bio-8080-exec-1] ! internal.RegionFactoryInitiator ! Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-10-23 23:20:53,049 !  INFO ! [http-bio-8080-exec-1] ! java.JavaReflectionManager ! HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-10-23 23:20:53,178 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@1abbf10e
2016-10-23 23:20:53,179 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration boolean -> org.hibernate.type.BooleanType@1abbf10e
2016-10-23 23:20:53,179 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1abbf10e
2016-10-23 23:20:53,182 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71fb4cb8
2016-10-23 23:20:53,184 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration true_false -> org.hibernate.type.TrueFalseType@548bec8a
2016-10-23 23:20:53,186 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration yes_no -> org.hibernate.type.YesNoType@103a9adb
2016-10-23 23:20:53,189 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@398e3870
2016-10-23 23:20:53,189 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte -> org.hibernate.type.ByteType@398e3870
2016-10-23 23:20:53,189 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@398e3870
2016-10-23 23:20:53,191 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration character -> org.hibernate.type.CharacterType@1d9f6be6
2016-10-23 23:20:53,192 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration char -> org.hibernate.type.CharacterType@1d9f6be6
2016-10-23 23:20:53,192 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d9f6be6
2016-10-23 23:20:53,194 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@49afb14
2016-10-23 23:20:53,195 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration short -> org.hibernate.type.ShortType@49afb14
2016-10-23 23:20:53,195 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49afb14
2016-10-23 23:20:53,197 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration integer -> org.hibernate.type.IntegerType@6961d852
2016-10-23 23:20:53,197 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration int -> org.hibernate.type.IntegerType@6961d852
2016-10-23 23:20:53,197 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6961d852
2016-10-23 23:20:53,199 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@48e26e3a
2016-10-23 23:20:53,201 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration long -> org.hibernate.type.LongType@48e26e3a
2016-10-23 23:20:53,201 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Long -> org.hibernate.type.LongType@48e26e3a
2016-10-23 23:20:53,204 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@62243967
2016-10-23 23:20:53,204 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration float -> org.hibernate.type.FloatType@62243967
2016-10-23 23:20:53,204 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62243967
2016-10-23 23:20:53,207 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5baf8b85
2016-10-23 23:20:53,208 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration double -> org.hibernate.type.DoubleType@5baf8b85
2016-10-23 23:20:53,208 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5baf8b85
2016-10-23 23:20:53,211 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ad316
2016-10-23 23:20:53,212 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ad316
2016-10-23 23:20:53,214 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration big_integer -> org.hibernate.type.BigIntegerType@327dd47c
2016-10-23 23:20:53,215 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@327dd47c
2016-10-23 23:20:53,217 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration string -> org.hibernate.type.StringType@6fcc4e23
2016-10-23 23:20:53,218 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.String -> org.hibernate.type.StringType@6fcc4e23
2016-10-23 23:20:53,220 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5320211b
2016-10-23 23:20:53,222 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ee3a57e
2016-10-23 23:20:53,224 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration url -> org.hibernate.type.UrlType@6719c5bf
2016-10-23 23:20:53,224 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.net.URL -> org.hibernate.type.UrlType@6719c5bf
2016-10-23 23:20:53,226 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Duration -> org.hibernate.type.DurationType@1e8f0d07
2016-10-23 23:20:53,227 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e8f0d07
2016-10-23 23:20:53,247 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Instant -> org.hibernate.type.InstantType@727bdcb4
2016-10-23 23:20:53,248 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.Instant -> org.hibernate.type.InstantType@727bdcb4
2016-10-23 23:20:53,251 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d36c082
2016-10-23 23:20:53,251 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d36c082
2016-10-23 23:20:53,255 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalDate -> org.hibernate.type.LocalDateType@162ffe46
2016-10-23 23:20:53,255 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@162ffe46
2016-10-23 23:20:53,258 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7636ec96
2016-10-23 23:20:53,259 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7636ec96
2016-10-23 23:20:53,262 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c6869c1
2016-10-23 23:20:53,262 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1c6869c1
2016-10-23 23:20:53,265 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6747dfd0
2016-10-23 23:20:53,266 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6747dfd0
2016-10-23 23:20:53,271 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ebbd38b
2016-10-23 23:20:53,272 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ebbd38b
2016-10-23 23:20:53,275 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration date -> org.hibernate.type.DateType@629837a6
2016-10-23 23:20:53,275 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Date -> org.hibernate.type.DateType@629837a6
2016-10-23 23:20:53,277 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration time -> org.hibernate.type.TimeType@5483a3ac
2016-10-23 23:20:53,295 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5483a3ac
2016-10-23 23:20:53,298 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration timestamp -> org.hibernate.type.TimestampType@31469593
2016-10-23 23:20:53,298 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31469593
2016-10-23 23:20:53,298 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31469593
2016-10-23 23:20:53,303 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47116790
2016-10-23 23:20:53,305 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration calendar -> org.hibernate.type.CalendarType@59ca3eea
2016-10-23 23:20:53,305 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59ca3eea
2016-10-23 23:20:53,307 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59ca3eea
2016-10-23 23:20:53,310 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@35cd352
2016-10-23 23:20:53,313 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration locale -> org.hibernate.type.LocaleType@3df24587
2016-10-23 23:20:53,313 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3df24587
2016-10-23 23:20:53,317 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration currency -> org.hibernate.type.CurrencyType@50fb9946
2016-10-23 23:20:53,317 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50fb9946
2016-10-23 23:20:53,319 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ddb1654
2016-10-23 23:20:53,320 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ddb1654
2016-10-23 23:20:53,321 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration class -> org.hibernate.type.ClassType@21e03d79
2016-10-23 23:20:53,322 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21e03d79
2016-10-23 23:20:53,325 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a2c1cd1
2016-10-23 23:20:53,326 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a2c1cd1
2016-10-23 23:20:53,328 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@477777c1
2016-10-23 23:20:53,331 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration binary -> org.hibernate.type.BinaryType@15c5521a
2016-10-23 23:20:53,331 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration byte[] -> org.hibernate.type.BinaryType@15c5521a
2016-10-23 23:20:53,332 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [B -> org.hibernate.type.BinaryType@15c5521a
2016-10-23 23:20:53,335 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33d3492c
2016-10-23 23:20:53,335 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33d3492c
2016-10-23 23:20:53,336 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33d3492c
2016-10-23 23:20:53,338 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration row_version -> org.hibernate.type.RowVersionType@477c6f5a
2016-10-23 23:20:53,341 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration image -> org.hibernate.type.ImageType@24db1294
2016-10-23 23:20:53,343 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration characters -> org.hibernate.type.CharArrayType@21d2c80e
2016-10-23 23:20:53,343 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration char[] -> org.hibernate.type.CharArrayType@21d2c80e
2016-10-23 23:20:53,344 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [C -> org.hibernate.type.CharArrayType@21d2c80e
2016-10-23 23:20:53,346 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@580413bd
2016-10-23 23:20:53,346 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@580413bd
2016-10-23 23:20:53,346 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@580413bd
2016-10-23 23:20:53,348 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration text -> org.hibernate.type.TextType@476fff4f
2016-10-23 23:20:53,350 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration ntext -> org.hibernate.type.NTextType@74a932a3
2016-10-23 23:20:53,358 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration blob -> org.hibernate.type.BlobType@7ce6e81a
2016-10-23 23:20:53,359 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7ce6e81a
2016-10-23 23:20:53,360 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74eb6273
2016-10-23 23:20:53,367 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration clob -> org.hibernate.type.ClobType@3458156f
2016-10-23 23:20:53,368 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3458156f
2016-10-23 23:20:53,374 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration nclob -> org.hibernate.type.NClobType@4b5c27f9
2016-10-23 23:20:53,375 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b5c27f9
2016-10-23 23:20:53,376 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a4f3cad
2016-10-23 23:20:53,377 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@47b89a71
2016-10-23 23:20:53,380 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration serializable -> org.hibernate.type.SerializableType@5411232b
2016-10-23 23:20:53,385 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration object -> org.hibernate.type.ObjectType@492c1dfd
2016-10-23 23:20:53,386 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@492c1dfd
2016-10-23 23:20:53,387 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@424eb68a
2016-10-23 23:20:53,387 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba498cb
2016-10-23 23:20:53,387 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c857c1a
2016-10-23 23:20:53,388 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a3f0439
2016-10-23 23:20:53,388 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d720112
2016-10-23 23:20:53,389 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32dfacb7
2016-10-23 23:20:53,389 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@656d735a
2016-10-23 23:20:53,389 ! DEBUG ! [http-bio-8080-exec-1] ! type.BasicTypeRegistry ! Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5741ad02
2016-10-23 23:20:53,409 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/ACME_SERVICE_DB
2016-10-23 23:20:53,410 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001001: Connection properties: {user=ACME, password=****}
2016-10-23 23:20:53,410 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001003: Autocommit mode: false
2016-10-23 23:20:53,446 !  INFO ! [http-bio-8080-exec-1] ! log.MLog ! MLog clients using log4j logging.
2016-10-23 23:20:53,566 !  INFO ! [http-bio-8080-exec-1] ! c3p0.C3P0Registry ! Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
2016-10-23 23:20:53,594 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjfj0q1y49rqb|24b3a098,name=1hgel1d9j1vjfj0q1y49rqb|24b3a098 registered.
2016-10-23 23:20:53,643 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjfj0q1y49rqb|24b3a098,name=1hgel1d9j1vjfj0q1y49rqb|24b3a098 unregistered, in order to be reregistered after update.
2016-10-23 23:20:53,643 ! DEBUG ! [http-bio-8080-exec-1] ! management.DynamicPooledDataSourceManagerMBean ! MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgel1d9j1vjfj0q1y49rqb|24b3a098,name=1hgel1d9j1vjfj0q1y49rqb|24b3a098 registered.
2016-10-23 23:20:53,659 !  INFO ! [http-bio-8080-exec-1] ! internal.C3P0ConnectionProvider ! HHH10001007: JDBC isolation level: <unknown>
2016-10-23 23:20:53,690 !  INFO ! [http-bio-8080-exec-1] ! impl.AbstractPoolBackedDataSource ! Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a73fe649 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@dcf22362 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hgel1d9j1vjfj0q1y49rqb|1b2f1378, idleConnectionTestPeriod -> 2000, initialPoolSize -> 5, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 500, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 5, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@f2590ad0 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vjfj0q1y49rqb|32785582, jdbcUrl -> jdbc:mysql://localhost:3306/ACME_SERVICE_DB, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hgel1d9j1vjfj0q1y49rqb|24b3a098, numHelperThreads -> 3 ]
2016-10-23 23:20:53,713 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 1
2016-10-23 23:20:53,714 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:53,714 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@5a4c07d8
2016-10-23 23:20:53,714 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 2
2016-10-23 23:20:53,715 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:53,715 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@36d58536
2016-10-23 23:20:53,716 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 3
2016-10-23 23:20:53,716 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:20:53,716 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@54ae4f94
2016-10-23 23:20:53,717 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 4
2016-10-23 23:20:53,717 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:20:53,717 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@c9c0e3d
2016-10-23 23:20:53,718 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! incremented pending_acquires: 5
2016-10-23 23:20:53,718 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Starting acquisition series. Incremented pending_acquires [5],  attempts_remaining: 30
2016-10-23 23:20:53,718 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@3654bab1
2016-10-23 23:20:53,719 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! com.mchange.v2.resourcepool.BasicResourcePool@2c326578 config: [start -> 5; min -> 5; max -> 20; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 2000000; mox_resource_age -> 0; max_idle_time -> 500000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 125000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
2016-10-23 23:20:53,720 ! DEBUG ! [http-bio-8080-exec-1] ! impl.C3P0PooledConnectionPoolManager ! Created new pool for auth, username (masked): 'AC******'.
2016-10-23 23:20:53,720 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! acquire test -- pool size: 0; target_pool_size: 5; desired target? 1
2016-10-23 23:20:53,721 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! awaitAvailable(): [unknown]
2016-10-23 23:20:53,722 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 0, unused: 0, excluded: 0]
2016-10-23 23:20:54,207 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,208 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,208 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,208 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@39dc181d.acquireResource() returning. 
2016-10-23 23:20:54,209 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#1] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@39dc181d.acquireResource() returning. 
2016-10-23 23:20:54,209 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@39dc181d.acquireResource() returning. 
2016-10-23 23:20:54,210 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 1, unused: 1, excluded: 0]
2016-10-23 23:20:54,210 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 4
2016-10-23 23:20:54,210 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [4],  attempts_remaining: 30
2016-10-23 23:20:54,210 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 1, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,211 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,211 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 3
2016-10-23 23:20:54,212 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [3],  attempts_remaining: 30
2016-10-23 23:20:54,212 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,212 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#1] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 2
2016-10-23 23:20:54,212 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#1] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [2],  attempts_remaining: 30
2016-10-23 23:20:54,225 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,225 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@39dc181d.acquireResource() returning. 
2016-10-23 23:20:54,225 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,225 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 1
2016-10-23 23:20:54,226 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
2016-10-23 23:20:54,229 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JdbcEnvironmentInitiator ! Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
2016-10-23 23:20:54,229 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JdbcEnvironmentInitiator ! Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.31 ( Revision: alexander.soklakov@oracle.com-20140520065950-groqzzbvxprqdmnz )
      major : 5
      minor : 1
2016-10-23 23:20:54,230 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! JDBC version : 4.0
2016-10-23 23:20:54,248 !  INFO ! [http-bio-8080-exec-1] ! dialect.Dialect ! HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2016-10-23 23:20:54,302 ! DEBUG ! [http-bio-8080-exec-1] ! spi.IdentifierHelperBuilder ! JDBC driver metadata reported database stores quoted identifiers in more than one case
2016-10-23 23:20:54,306 ! DEBUG ! [http-bio-8080-exec-1] ! spi.IdentifierHelperBuilder ! IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2016-10-23 23:20:54,321 !  INFO ! [http-bio-8080-exec-1] ! internal.LobCreatorBuilderImpl ! HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-10-23 23:20:54,321 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,323 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@3d0bc4b
2016-10-23 23:20:54,324 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 4, unused: 3, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,324 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#2] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,353 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:54,354 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager ! com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@39dc181d.acquireResource() returning. 
2016-10-23 23:20:54,354 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 5, unused: 5, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:54,354 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool ! decremented pending_acquires: 0
2016-10-23 23:20:54,354 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! resourcepool.BasicResourcePool$ScatteredAcquireTask ! Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
2016-10-23 23:20:54,367 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-10-23 23:20:54,367 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-10-23 23:20:54,368 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:20:54,369 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-10-23 23:20:54,369 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-10-23 23:20:54,370 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-10-23 23:20:54,371 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-10-23 23:20:54,372 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:20:54,373 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-10-23 23:20:54,374 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-10-23 23:20:54,374 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-10-23 23:20:54,375 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-10-23 23:20:54,375 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-10-23 23:20:54,376 ! DEBUG ! [http-bio-8080-exec-1] ! internal.DefaultIdentifierGeneratorFactory ! Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-10-23 23:20:54,416 ! DEBUG ! [http-bio-8080-exec-1] ! relational.Namespace ! Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2016-10-23 23:20:54,458 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AnnotationBinder ! Binding entity from annotated class: com.acme.model.CustomerInvoice
2016-10-23 23:20:54,501 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-10-23 23:20:54,513 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.EntityBinder ! Import with entity name CustomerInvoice
2016-10-23 23:20:54,520 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.EntityBinder ! Bind entity com.acme.model.CustomerInvoice on table CustomerInvoice
2016-10-23 23:20:54,557 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,561 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceId with lazy=false
2016-10-23 23:20:54,564 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceId]
2016-10-23 23:20:54,566 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceId
2016-10-23 23:20:54,568 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceId
2016-10-23 23:20:54,571 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,571 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property addressId with lazy=false
2016-10-23 23:20:54,572 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:addressId]
2016-10-23 23:20:54,572 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for addressId
2016-10-23 23:20:54,572 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property addressId
2016-10-23 23:20:54,573 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,573 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property amount with lazy=false
2016-10-23 23:20:54,573 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:amount]
2016-10-23 23:20:54,573 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for amount
2016-10-23 23:20:54,574 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property amount
2016-10-23 23:20:54,574 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=customerId, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,574 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property customerId with lazy=false
2016-10-23 23:20:54,575 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:customerId]
2016-10-23 23:20:54,575 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for customerId
2016-10-23 23:20:54,575 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property customerId
2016-10-23 23:20:54,575 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=endDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,576 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property endDate with lazy=false
2016-10-23 23:20:54,576 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:endDate]
2016-10-23 23:20:54,576 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for endDate
2016-10-23 23:20:54,577 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property endDate
2016-10-23 23:20:54,577 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,577 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceDate with lazy=false
2016-10-23 23:20:54,577 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceDate]
2016-10-23 23:20:54,578 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceDate
2016-10-23 23:20:54,578 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceDate
2016-10-23 23:20:54,579 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceNumber, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,579 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceNumber with lazy=false
2016-10-23 23:20:54,580 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceNumber]
2016-10-23 23:20:54,580 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceNumber
2016-10-23 23:20:54,580 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceNumber
2016-10-23 23:20:54,580 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceType, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,581 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceType with lazy=false
2016-10-23 23:20:54,581 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceType]
2016-10-23 23:20:54,581 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceType
2016-10-23 23:20:54,582 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceType
2016-10-23 23:20:54,582 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=invoiceTypeLocalized, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,583 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property invoiceTypeLocalized with lazy=false
2016-10-23 23:20:54,583 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:invoiceTypeLocalized]
2016-10-23 23:20:54,584 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for invoiceTypeLocalized
2016-10-23 23:20:54,584 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property invoiceTypeLocalized
2016-10-23 23:20:54,585 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=paymentDueDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,585 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property paymentDueDate with lazy=false
2016-10-23 23:20:54,585 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:paymentDueDate]
2016-10-23 23:20:54,585 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for paymentDueDate
2016-10-23 23:20:54,585 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property paymentDueDate
2016-10-23 23:20:54,586 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=periodDescription, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,586 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property periodDescription with lazy=false
2016-10-23 23:20:54,586 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:periodDescription]
2016-10-23 23:20:54,586 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for periodDescription
2016-10-23 23:20:54,586 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property periodDescription
2016-10-23 23:20:54,587 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=startDate, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,587 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property startDate with lazy=false
2016-10-23 23:20:54,587 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:startDate]
2016-10-23 23:20:54,587 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for startDate
2016-10-23 23:20:54,587 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property startDate
2016-10-23 23:20:54,588 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=totalAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,588 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property totalAmount with lazy=false
2016-10-23 23:20:54,588 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:totalAmount]
2016-10-23 23:20:54,589 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for totalAmount
2016-10-23 23:20:54,589 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property totalAmount
2016-10-23 23:20:54,589 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Ejb3Column ! Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerInvoice), mappingColumn=vatAmount, insertable=true, updatable=true, unique=false}
2016-10-23 23:20:54,589 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! MetadataSourceProcessor property vatAmount with lazy=false
2016-10-23 23:20:54,590 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.AbstractPropertyHolder ! Attempting to locate auto-apply AttributeConverter for property [com.acme.model.CustomerInvoice:vatAmount]
2016-10-23 23:20:54,590 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! building SimpleValue for vatAmount
2016-10-23 23:20:54,590 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.PropertyBinder ! Building property vatAmount
2016-10-23 23:20:54,592 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceId
2016-10-23 23:20:54,592 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for addressId
2016-10-23 23:20:54,592 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for amount
2016-10-23 23:20:54,592 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for customerId
2016-10-23 23:20:54,592 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for endDate
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceDate
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceNumber
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceType
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for invoiceTypeLocalized
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for paymentDueDate
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for periodDescription
2016-10-23 23:20:54,593 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for startDate
2016-10-23 23:20:54,594 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for totalAmount
2016-10-23 23:20:54,594 ! DEBUG ! [http-bio-8080-exec-1] ! annotations.SimpleValueBinder ! Starting fillSimpleValue for vatAmount
2016-10-23 23:20:54,595 ! DEBUG ! [http-bio-8080-exec-1] ! mapping.PrimaryKey ! Forcing column [invoiceid] to be non-null as it is part of the primary key for table [customerinvoice]
2016-10-23 23:20:54,646 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Building session factory
2016-10-23 23:20:54,647 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! SessionFactory name : null
2016-10-23 23:20:54,648 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic flush during beforeCompletion(): enabled
2016-10-23 23:20:54,648 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic session close at end of transaction: disabled
2016-10-23 23:20:54,648 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Statistics: disabled
2016-10-23 23:20:54,649 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Deleted entity synthetic identifier rollback: disabled
2016-10-23 23:20:54,650 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default entity-mode: pojo
2016-10-23 23:20:54,651 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-10-23 23:20:54,651 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Allow initialization of lazy state outside session : disabled
2016-10-23 23:20:54,653 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Using BatchFetchStyle : LEGACY
2016-10-23 23:20:54,654 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default batch fetch size: -1
2016-10-23 23:20:54,654 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Maximum outer join fetch depth: 2
2016-10-23 23:20:54,655 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Default null ordering: NONE
2016-10-23 23:20:54,655 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Order SQL updates by primary key: disabled
2016-10-23 23:20:54,655 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Order SQL inserts for batching: disabled
2016-10-23 23:20:54,656 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! multi-tenancy strategy : NONE
2016-10-23 23:20:54,656 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JTA Track by Thread: enabled
2016-10-23 23:20:54,656 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Query language substitutions: {}
2016-10-23 23:20:54,657 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JPA query language strict compliance: disabled
2016-10-23 23:20:54,657 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Named query checking : enabled
2016-10-23 23:20:54,657 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache: enabled
2016-10-23 23:20:54,658 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level query cache: disabled
2016-10-23 23:20:54,658 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4e0d957a
2016-10-23 23:20:54,659 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache region prefix: null
2016-10-23 23:20:54,659 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Optimize second-level cache for minimal puts: disabled
2016-10-23 23:20:54,660 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Structured second-level cache entries: disabled
2016-10-23 23:20:54,660 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Second-level cache direct-reference entries: disabled
2016-10-23 23:20:54,660 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Automatic eviction of collection cache: disabled
2016-10-23 23:20:54,660 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC batch size: 15
2016-10-23 23:20:54,661 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC batch updates for versioned data: enabled
2016-10-23 23:20:54,661 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Scrollable result sets: enabled
2016-10-23 23:20:54,661 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Wrap result sets: disabled
2016-10-23 23:20:54,661 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC3 getGeneratedKeys(): enabled
2016-10-23 23:20:54,662 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! JDBC result set fetch size: null
2016-10-23 23:20:54,662 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Connection release mode: AFTER_TRANSACTION
2016-10-23 23:20:54,662 ! DEBUG ! [http-bio-8080-exec-1] ! cfg.Settings ! Generate SQL with comments: disabled
2016-10-23 23:20:54,764 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Session factory constructed with filter configurations : {}
2016-10-23 23:20:54,765 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Instantiating session factory with properties: {hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=2000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher clean install tomcat7:run, maven.home=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\.., sun.stderr.encoding=cp437, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, sun.stdout.encoding=cp437, line.separator=
, hibernate.c3p0.timeout=500, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=validate, tomcat.maven.http.port=8080, user.script=, java.util.logging.config.file=C:\Telfort_migration\InvoiceService\target\tomcat\conf\logging.properties, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=skuma353, file.encoding=Cp1252, guice.disable.misplaced.annotation.check=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.io.tmpdir=C:\Users\skuma353\AppData\Local\Temp\, java.version=1.8.0_73, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, sun.os.patch.level=Service Pack 1, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\ActiveState Komodo IDE 10\;C:\ProgramData\Oracle\Java\javapath;C:\PROJECTS\Jira Migration\Software Used\instantclient-basic-windows.x64-12.1.0.2.0\instantclient_12_1;C:\PROJECTS\Learn\C++\gcc\bin;C:\PROJECTS\Learn\C++\gcc\libexec\gcc\x86_64-pc-mingw32\6.1.0;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\IBM\RationalSDLC\ClearCase\bin;C:\Program Files (x86)\IBM\RationalSDLC\common;C:\usr\bin;C:\Program Files\nodejs\;C:\apache\apache-tomcat-7.0.61-windows-x64\apache-tomcat-7.0.61\bin;C:\Program Files (x86)\GnuWin32\bin;C:\Program Files\MySQL\MySQL Server 5.6\bin;C:\Program Files (x86)\Windows Live\Shared;C:\Python27;C:\Portable Python 2.7.6.1;C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.8.0_73\bin;C:\Software\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin;C:\Program Files\cURL\bin;C:\Program Files (x86)\Sennheiser\SoftphoneSDK\;C:\Program Files (x86)\WebEx\Productivity Tools;., java.vendor=Oracle Corporation, classworlds.conf=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\bin\m2.conf, org.apache.catalina.startup.TldConfig.jarsToSkip=, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, file.encoding.pkg=sun.io, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=C:\PROJECTS\Learn\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin\..\boot\plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Paris, os.name=Windows 7, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.cpu.endian=little, user.home=C:\Users\skuma353, hibernate.c3p0.max_statements=50, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., server.loader=, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, hibernate.connection.username=ACME, common.loader=C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar,C:\Telfort_migration\InvoiceService\target\tomcat/lib,C:\Telfort_migration\InvoiceService\target\tomcat/lib/*.jar, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ACME_SERVICE_DB, hibernate.ejb.persistenceUnitName=acmeJPAHandler, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, catalina.home=C:\Telfort_migration\InvoiceService\target\tomcat, user.dir=C:\Telfort_migration\InvoiceService, os.arch=amd64, maven.multiModuleProjectDirectory=C:\Telfort_migration\InvoiceService, hibernate.connection.password=****, catalina.base=C:\Telfort_migration\InvoiceService\target\tomcat, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@749c1236, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.vm.info=mixed mode, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=ACME, java.class.version=52.0}
2016-10-23 23:20:54,786 ! DEBUG ! [http-bio-8080-exec-1] ! spi.JaccIntegrator ! Skipping JACC integration as it was not enabled
2016-10-23 23:20:54,793 ! DEBUG ! [http-bio-8080-exec-1] ! spi.CascadeStyles ! External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-10-23 23:20:54,826 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryImpl ! Instantiated session factory
2016-10-23 23:20:54,897 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:20:54,897 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:20:54,915 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! Not known whether passed class name [com.acme.model.CustomerInvoice] is safe
2016-10-23 23:20:54,916 ! DEBUG ! [http-bio-8080-exec-1] ! internal.ClassLoaderAccessImpl ! No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acme.model.CustomerInvoice
2016-10-23 23:20:54,975 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister ! Static SQL for entity: com.acme.model.CustomerInvoice
2016-10-23 23:20:54,975 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister !  Version select: select invoiceId from CustomerInvoice where invoiceId =?
2016-10-23 23:20:54,975 ! DEBUG ! [http-bio-8080-exec-1] ! entity.AbstractEntityPersister !  Snapshot select: select customerin_.invoiceId, customerin_.addressId as addressI2_0_, customerin_.amount as amount3_0_, customerin_.customerId as customer4_0_, customerin_.endDate as endDate5_0_, customerin_.invoiceDate as invoiceD6_0_, customerin_.invoiceNumber as invoiceN7_0_, customerin_.invoiceType as invoiceT8_0_, customerin_.invoiceTypeLocalized as invoiceT9_0_, customerin_.paymentDueDate as payment10_0_, customerin_.periodDescription as periodD11_0_, customerin_.startDate as startDa12_0_, customerin_.totalAmount as totalAm13_0_, customerin_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin_ where customerin_.invoiceId=?
2016-10-23 23:20:54,976 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Insert 0: insert into CustomerInvoice (addressId, amount, customerId, endDate, invoiceDate, invoiceNumber, invoiceType, invoiceTypeLocalized, paymentDueDate, periodDescription, startDate, totalAmount, vatAmount, invoiceId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2016-10-23 23:20:54,976 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Update 0: update CustomerInvoice set addressId=?, amount=?, customerId=?, endDate=?, invoiceDate=?, invoiceNumber=?, invoiceType=?, invoiceTypeLocalized=?, paymentDueDate=?, periodDescription=?, startDate=?, totalAmount=?, vatAmount=? where invoiceId=?
2016-10-23 23:20:54,976 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger !  Delete 0: delete from CustomerInvoice where invoiceId=?
2016-10-23 23:20:55,006 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42300914]
2016-10-23 23:20:55,009 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,009 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,009 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,010 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,010 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,010 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,011 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,012 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,012 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,031 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,036 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,039 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [NONE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,040 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63604383]
2016-10-23 23:20:55,040 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,041 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,041 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,041 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,041 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,042 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,042 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,042 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,043 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,043 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,043 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,044 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,044 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,045 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,045 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,046 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,046 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,047 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a434a5]
2016-10-23 23:20:55,047 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,047 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,048 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,048 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,048 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,048 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,048 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,049 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,049 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,049 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,049 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,049 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,050 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,050 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,050 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,051 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,051 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,051 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d7a987]
2016-10-23 23:20:55,051 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,052 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,052 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,052 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,052 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,053 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,053 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,053 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,053 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,053 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,054 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,054 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,054 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,054 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,055 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,055 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,056 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_NOWAIT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,056 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b06129]
2016-10-23 23:20:55,056 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,057 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,057 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,057 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,057 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,057 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,058 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,059 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,059 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,060 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,060 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [UPGRADE_SKIPLOCKED]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50d8a4c2]
2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,061 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,062 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,063 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,063 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,063 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,063 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,064 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,065 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,065 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [FORCE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,065 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce0c0c8]
2016-10-23 23:20:55,066 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,066 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,066 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,067 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,067 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,067 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,067 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,068 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,068 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,068 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,068 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,069 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,069 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,069 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,070 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,070 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,071 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_READ]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? lock in share mode
2016-10-23 23:20:55,071 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c42517]
2016-10-23 23:20:55,072 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,072 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,073 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,073 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,073 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,073 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,074 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,074 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,074 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,075 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,075 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,075 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,075 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,076 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,076 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,077 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,077 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_WRITE]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,077 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ceed255]
2016-10-23 23:20:55,078 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,078 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,078 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,078 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,078 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,079 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,079 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,079 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,080 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,080 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,080 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,081 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,081 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,082 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,082 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,083 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,084 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [PESSIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=? for update
2016-10-23 23:20:55,084 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63ef410f]
2016-10-23 23:20:55,085 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,085 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,085 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,085 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,085 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,086 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,087 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,087 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,087 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,087 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,088 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,088 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,088 ! DEBUG ! [http-bio-8080-exec-1] ! spaces.QuerySpacesImpl ! Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aaedd19]
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : addressId
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : amount
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : customerId
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : endDate
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceDate
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceNumber
2016-10-23 23:20:55,089 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceType
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : invoiceTypeLocalized
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : paymentDueDate
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : periodDescription
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : startDate
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : totalAmount
2016-10-23 23:20:55,090 ! DEBUG ! [http-bio-8080-exec-1] ! spi.MetamodelGraphWalker ! Visiting attribute path : vatAmount
2016-10-23 23:20:55,091 ! DEBUG ! [http-bio-8080-exec-1] ! internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy ! Building LoadPlan...
2016-10-23 23:20:55,091 ! DEBUG ! [http-bio-8080-exec-1] ! internal.LoadQueryJoinAndFetchProcessor ! processing queryspace <gen:0>
2016-10-23 23:20:55,091 ! DEBUG ! [http-bio-8080-exec-1] ! spi.LoadPlanTreePrinter ! LoadPlan(entity=com.acme.model.CustomerInvoice)
    - Returns
       - EntityReturnImpl(entity=com.acme.model.CustomerInvoice, querySpaceUid=<gen:0>, path=com.acme.model.CustomerInvoice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acme.model.CustomerInvoice)
          - SQL table alias mapping - customerin0_
          - alias suffix - 0_
          - suffixed key columns - {invoiceI1_0_0_}

2016-10-23 23:20:55,091 ! DEBUG ! [http-bio-8080-exec-1] ! plan.EntityLoader ! Static select for entity com.acme.model.CustomerInvoice [OPTIMISTIC_FORCE_INCREMENT]: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,109 ! DEBUG ! [http-bio-8080-exec-1] ! entity.CascadeEntityLoader ! Static select for action ACTION_MERGE on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,109 ! DEBUG ! [http-bio-8080-exec-1] ! entity.CascadeEntityLoader ! Static select for action ACTION_REFRESH on entity com.acme.model.CustomerInvoice: select customerin0_.invoiceId as invoiceI1_0_0_, customerin0_.addressId as addressI2_0_0_, customerin0_.amount as amount3_0_0_, customerin0_.customerId as customer4_0_0_, customerin0_.endDate as endDate5_0_0_, customerin0_.invoiceDate as invoiceD6_0_0_, customerin0_.invoiceNumber as invoiceN7_0_0_, customerin0_.invoiceType as invoiceT8_0_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_0_, customerin0_.paymentDueDate as payment10_0_0_, customerin0_.periodDescription as periodD11_0_0_, customerin0_.startDate as startDa12_0_0_, customerin0_.totalAmount as totalAm13_0_0_, customerin0_.vatAmount as vatAmou14_0_0_ from CustomerInvoice customerin0_ where customerin0_.invoiceId=?
2016-10-23 23:20:55,145 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:55,148 !  INFO ! [http-bio-8080-exec-1] ! internal.DdlTransactionIsolatorNonJtaImpl ! HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@204a39cf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2016-10-23 23:20:55,225 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:55,225 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@1a6b749a
2016-10-23 23:20:55,226 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:55,226 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-HelperThread-#0] ! stmt.GooGooStatementCache ! checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
2016-10-23 23:20:55,226 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JtaPlatformInitiator ! No JtaPlatform was specified, checking resolver
2016-10-23 23:20:55,227 ! DEBUG ! [http-bio-8080-exec-1] ! internal.JtaPlatformResolverInitiator ! No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2016-10-23 23:20:55,233 ! DEBUG ! [http-bio-8080-exec-1] ! internal.StandardJtaPlatformResolver ! Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2016-10-23 23:20:55,235 ! DEBUG ! [http-bio-8080-exec-1] ! spi.NamedQueryRepository ! Checking 0 named HQL queries
2016-10-23 23:20:55,235 ! DEBUG ! [http-bio-8080-exec-1] ! spi.NamedQueryRepository ! Checking 0 named SQL queries
2016-10-23 23:20:55,237 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c6d222c
2016-10-23 23:20:55,240 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Registering SessionFactory: 21236a0e-d09e-466d-8cfc-9a637a7dc7ad (<unnamed>)
2016-10-23 23:20:55,241 ! DEBUG ! [http-bio-8080-exec-1] ! internal.SessionFactoryRegistry ! Not binding SessionFactory to JNDI, no JNDI name configured
2016-10-23 23:20:55,340 ! DEBUG ! [http-bio-8080-exec-1] ! internal.StatisticsInitiator ! Statistics initialized [enabled=false]
2016-10-23 23:20:55,351 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TransactionImpl ! begin
2016-10-23 23:20:55,352 ! DEBUG ! [http-bio-8080-exec-1] ! resourcepool.BasicResourcePool ! trace com.mchange.v2.resourcepool.BasicResourcePool@2c326578 [managed: 5, unused: 4, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@64886e41)
2016-10-23 23:20:55,376 ! DEBUG ! [http-bio-8080-exec-1] ! internal.QueryTranslatorFactoryInitiator ! QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@68ecada4
2016-10-23 23:20:55,377 !  INFO ! [http-bio-8080-exec-1] ! internal.QueryTranslatorFactoryInitiator ! HHH000397: Using ASTQueryTranslatorFactory
2016-10-23 23:20:55,434 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! parse() - HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:55,447 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acme'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerInvoice'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'customerId'
          |  |  \-[NUM_INT] Node: '1'
          |  \-[EQ] Node: '='
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'MONTH'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[IDENT] Node: 'invoiceDate'
          |     \-[NUM_INT] Node: '2'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'YEAR'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[IDENT] Node: 'invoiceDate'
             \-[NUM_INT] Node: '2016'

2016-10-23 23:20:55,448 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:55,481 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select << begin [level=1, statement=select]
2016-10-23 23:20:55,514 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromElement ! FromClause{level=1} : com.acme.model.CustomerInvoice (c) -> customerin0_
2016-10-23 23:20:55,517 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : c -> customerin0_.invoiceId
2016-10-23 23:20:55,524 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:55,527 ! DEBUG ! [http-bio-8080-exec-1] ! tree.DotNode ! getDataType() : customerId -> org.hibernate.type.StringType@6fcc4e23
2016-10-23 23:20:55,528 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.customerId -> customerin0_.customerId
2016-10-23 23:20:55,533 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:55,535 ! DEBUG ! [http-bio-8080-exec-1] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@31469593
2016-10-23 23:20:55,535 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:55,536 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias} -> {synthetic-alias}
2016-10-23 23:20:55,537 ! DEBUG ! [http-bio-8080-exec-1] ! tree.DotNode ! getDataType() : invoiceDate -> org.hibernate.type.TimestampType@31469593
2016-10-23 23:20:55,538 ! DEBUG ! [http-bio-8080-exec-1] ! tree.FromReferenceNode ! Resolved : {synthetic-alias}.invoiceDate -> customerin0_.invoiceDate
2016-10-23 23:20:55,539 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select : finishing up [level=1, statement=select]
2016-10-23 23:20:55,539 ! DEBUG ! [http-bio-8080-exec-1] ! ast.HqlSqlWalker ! processQuery() :  ( SELECT ( {select clause} customerin0_.invoiceId ) ( FromClause{level=1} CustomerInvoice customerin0_ ) ( WHERE ( AND ( AND ( = ( customerin0_.customerId {synthetic-alias} customerId ) 1 ) ( = ( ( MONTH ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2 ) ) ( = ( ( YEAR ( exprList ( customerin0_.invoiceDate {synthetic-alias} invoiceDate ) ) ) 2016 ) ) ) )
2016-10-23 23:20:55,561 ! DEBUG ! [http-bio-8080-exec-1] ! util.JoinProcessor ! Using FROM fragment [CustomerInvoice customerin0_]
2016-10-23 23:20:55,562 ! DEBUG ! [http-bio-8080-exec-1] ! antlr.HqlSqlBaseWalker ! select >> end [level=1, statement=select]
2016-10-23 23:20:55,566 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerInvoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerin0_.invoiceId as invoiceI1_0_' {alias=c, className=com.acme.model.CustomerInvoice, tableAlias=customerin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customerin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerInvoice customerin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=CustomerInvoice,tableAlias=customerin0_,origin=null,columns={,className=com.acme.model.CustomerInvoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'customerin0_.customerId' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customerId,path={synthetic-alias}.customerId,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  |  \-[NUM_INT] LiteralNode: '1'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'MONTH' {originalText=MONTH}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
          |     |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
          |     \-[NUM_INT] LiteralNode: '2'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'YEAR' {originalText=YEAR}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerin0_.invoiceDate' {propertyName=invoiceDate,dereferenceType=PRIMITIVE,getPropertyPath=invoiceDate,path={synthetic-alias}.invoiceDate,tableAlias=customerin0_,className=com.acme.model.CustomerInvoice,classAlias=c}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'invoiceDate' {originalText=invoiceDate}
             \-[NUM_INT] LiteralNode: '2016'

2016-10-23 23:20:55,567 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:55,582 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! HQL: SELECT c FROM com.acme.model.CustomerInvoice c WHERE customerId=1 AND MONTH(invoiceDate)=2 AND YEAR(invoiceDate)=2016
2016-10-23 23:20:55,582 ! DEBUG ! [http-bio-8080-exec-1] ! ast.QueryTranslatorImpl ! SQL: select customerin0_.invoiceId as invoiceI1_0_, customerin0_.addressId as addressI2_0_, customerin0_.amount as amount3_0_, customerin0_.customerId as customer4_0_, customerin0_.endDate as endDate5_0_, customerin0_.invoiceDate as invoiceD6_0_, customerin0_.invoiceNumber as invoiceN7_0_, customerin0_.invoiceType as invoiceT8_0_, customerin0_.invoiceTypeLocalized as invoiceT9_0_, customerin0_.paymentDueDate as payment10_0_, customerin0_.periodDescription as periodD11_0_, customerin0_.startDate as startDa12_0_, customerin0_.totalAmount as totalAm13_0_, customerin0_.vatAmount as vatAmou14_0_ from CustomerInvoice customerin0_ where customerin0_.customerId=1 and month(customerin0_.invoiceDate)=2 and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:55,583 ! DEBUG ! [http-bio-8080-exec-1] ! ast.ErrorCounter ! throwQueryException() : no errors
2016-10-23 23:20:55,866 ! DEBUG ! [http-bio-8080-exec-1] ! spi.SqlStatementLogger ! 
    select
        customerin0_.invoiceId as invoiceI1_0_,
        customerin0_.addressId as addressI2_0_,
        customerin0_.amount as amount3_0_,
        customerin0_.customerId as customer4_0_,
        customerin0_.endDate as endDate5_0_,
        customerin0_.invoiceDate as invoiceD6_0_,
        customerin0_.invoiceNumber as invoiceN7_0_,
        customerin0_.invoiceType as invoiceT8_0_,
        customerin0_.invoiceTypeLocalized as invoiceT9_0_,
        customerin0_.paymentDueDate as payment10_0_,
        customerin0_.periodDescription as periodD11_0_,
        customerin0_.startDate as startDa12_0_,
        customerin0_.totalAmount as totalAm13_0_,
        customerin0_.vatAmount as vatAmou14_0_ 
    from
        CustomerInvoice customerin0_ 
    where
        customerin0_.customerId=1 
        and month(customerin0_.invoiceDate)=2 
        and year(customerin0_.invoiceDate)=2016
2016-10-23 23:20:55,877 ! DEBUG ! [http-bio-8080-exec-1] ! async.ThreadPoolAsynchronousRunner ! com.mchange.v2.async.ThreadPoolAsynchronousRunner@6e26d98d: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@3e616b72
2016-10-23 23:20:55,921 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! cxnStmtMgr.statementSet( com.mysql.jdbc.JDBC4Connection@245475b6 ).size(): 1
2016-10-23 23:20:55,921 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
2016-10-23 23:20:55,935 ! DEBUG ! [http-bio-8080-exec-1] ! logging.DelegatingBasicLogger ! Result set row: 0
2016-10-23 23:20:55,939 ! DEBUG ! [http-bio-8080-exec-1] ! loader.Loader ! Result row: EntityKey[com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:55,963 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Resolving associations for [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:55,967 ! DEBUG ! [http-bio-8080-exec-1] ! internal.TwoPhaseLoad ! Done materializing entity [com.acme.model.CustomerInvoice#70ec3a54a43d014aa9e8]
2016-10-23 23:20:55,968 ! DEBUG ! [http-bio-8080-exec-1] ! stmt.GooGooStatementCache ! checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
2016-10-23 23:20:56,182 ! DEBUG ! [http-bio-8080-exec-1] ! dBManager.ObjectWriterImpl ! [{
  "customerId" : "1",
  "addressId" : "8212BJ154",
  "invoiceId" : "70ec3a54a43d014aa9e8",
  "invoiceType" : "ShopPurchase",
  "invoiceTypeLocalized" : "Winkel aankoop",
  "invoiceDate" : "2016-02-13T00:00:00.000+0100",
  "paymentDueDate" : "2016-02-20T00:00:00.000+0100",
  "invoiceNumber" : "157005888",
  "startDate" : "2016-03-01T00:00:00.000+0100",
  "endDate" : "2016-04-01T00:00:00.000+0200",
  "periodDescription" : "Maart 2016",
  "amount" : 165.29,
  "vatAmount" : 34.71,
  "totalAmount" : 200.0
}]
2016-10-23 23:21:03,689 ! DEBUG ! [C3P0PooledConnectionPoolManager[identityToken->1hgel1d9j1vjfj0q1y49rqb|24b3a098]-AdminTaskTimer] ! async.ThreadPoolAsynchronousRunner$DeadlockDetector ! com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector@607f5c4a -- Running DeadlockDetector[Exiting. No pending tasks.]
